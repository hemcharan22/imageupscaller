/*! For license information please see main.js.LICENSE.txt */
!function(){var e={948:function(e,t,n){var r=n(140),s=n(980),a=n(730),i=n(405),o=n(26),u=n(865),l=n(721);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},140:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},980:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},26:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},405:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},730:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},721:function(e,t,n){var r;!function(s,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*u+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(914)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},129:function(e,t,n){var r=n(626),s=n(477),a=n(868),i=n(197),o=n(954),u=n(408),l=n(662);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},626:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},408:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},954:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},197:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},868:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},662:function(e,t,n){var r;!function(s,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*u+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(778)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},486:function(e,t,n){var r;e=n.nmd(e),function(){var s,a="Expected a function",i="__lodash_hash_undefined__",o="__lodash_placeholder__",u=32,l=128,c=1/0,h=9007199254740991,d=NaN,p=4294967295,f=[["ary",l],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",u],["partialRight",64],["rearg",256]],g="[object Arguments]",m="[object Array]",b="[object Boolean]",y="[object Date]",x="[object Error]",v="[object Function]",w="[object GeneratorFunction]",k="[object Map]",I="[object Number]",$="[object Object]",C="[object Promise]",N="[object RegExp]",S="[object Set]",E="[object String]",T="[object Symbol]",R="[object WeakMap]",A="[object ArrayBuffer]",_="[object DataView]",F="[object Float32Array]",D="[object Float64Array]",O="[object Int8Array]",L="[object Int16Array]",M="[object Int32Array]",z="[object Uint8Array]",B="[object Uint8ClampedArray]",P="[object Uint16Array]",W="[object Uint32Array]",U=/\b__p \+= '';/g,V=/\b(__p \+=) '' \+/g,G=/(__e\(.*?\)|\b__t\)) \+\n'';/g,H=/&(?:amp|lt|gt|quot|#39);/g,j=/[&<>"']/g,q=RegExp(H.source),K=RegExp(j.source),X=/<%-([\s\S]+?)%>/g,Y=/<%([\s\S]+?)%>/g,J=/<%=([\s\S]+?)%>/g,Z=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Q=/^\w*$/,ee=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,te=/[\\^$.*+?()[\]{}|]/g,ne=RegExp(te.source),re=/^\s+/,se=/\s/,ae=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,ie=/\{\n\/\* \[wrapped with (.+)\] \*/,oe=/,? & /,ue=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,le=/[()=,{}\[\]\/\s]/,ce=/\\(\\)?/g,he=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,de=/\w*$/,pe=/^[-+]0x[0-9a-f]+$/i,fe=/^0b[01]+$/i,ge=/^\[object .+?Constructor\]$/,me=/^0o[0-7]+$/i,be=/^(?:0|[1-9]\d*)$/,ye=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,xe=/($^)/,ve=/['\n\r\u2028\u2029\\]/g,we="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",ke="a-z\\xdf-\\xf6\\xf8-\\xff",Ie="A-Z\\xc0-\\xd6\\xd8-\\xde",$e="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Ce="["+$e+"]",Ne="["+we+"]",Se="\\d+",Ee="["+ke+"]",Te="[^\\ud800-\\udfff"+$e+Se+"\\u2700-\\u27bf"+ke+Ie+"]",Re="\\ud83c[\\udffb-\\udfff]",Ae="[^\\ud800-\\udfff]",_e="(?:\\ud83c[\\udde6-\\uddff]){2}",Fe="[\\ud800-\\udbff][\\udc00-\\udfff]",De="["+Ie+"]",Oe="(?:"+Ee+"|"+Te+")",Le="(?:"+De+"|"+Te+")",Me="(?:['’](?:d|ll|m|re|s|t|ve))?",ze="(?:['’](?:D|LL|M|RE|S|T|VE))?",Be="(?:"+Ne+"|"+Re+")?",Pe="[\\ufe0e\\ufe0f]?",We=Pe+Be+"(?:\\u200d(?:"+[Ae,_e,Fe].join("|")+")"+Pe+Be+")*",Ue="(?:"+["[\\u2700-\\u27bf]",_e,Fe].join("|")+")"+We,Ve="(?:"+[Ae+Ne+"?",Ne,_e,Fe,"[\\ud800-\\udfff]"].join("|")+")",Ge=RegExp("['’]","g"),He=RegExp(Ne,"g"),je=RegExp(Re+"(?="+Re+")|"+Ve+We,"g"),qe=RegExp([De+"?"+Ee+"+"+Me+"(?="+[Ce,De,"$"].join("|")+")",Le+"+"+ze+"(?="+[Ce,De+Oe,"$"].join("|")+")",De+"?"+Oe+"+"+Me,De+"+"+ze,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Se,Ue].join("|"),"g"),Ke=RegExp("[\\u200d\\ud800-\\udfff"+we+"\\ufe0e\\ufe0f]"),Xe=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Ye=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Je=-1,Ze={};Ze[F]=Ze[D]=Ze[O]=Ze[L]=Ze[M]=Ze[z]=Ze[B]=Ze[P]=Ze[W]=!0,Ze[g]=Ze[m]=Ze[A]=Ze[b]=Ze[_]=Ze[y]=Ze[x]=Ze[v]=Ze[k]=Ze[I]=Ze[$]=Ze[N]=Ze[S]=Ze[E]=Ze[R]=!1;var Qe={};Qe[g]=Qe[m]=Qe[A]=Qe[_]=Qe[b]=Qe[y]=Qe[F]=Qe[D]=Qe[O]=Qe[L]=Qe[M]=Qe[k]=Qe[I]=Qe[$]=Qe[N]=Qe[S]=Qe[E]=Qe[T]=Qe[z]=Qe[B]=Qe[P]=Qe[W]=!0,Qe[x]=Qe[v]=Qe[R]=!1;var et={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},tt=parseFloat,nt=parseInt,rt="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,st="object"==typeof self&&self&&self.Object===Object&&self,at=rt||st||Function("return this")(),it=t&&!t.nodeType&&t,ot=it&&e&&!e.nodeType&&e,ut=ot&&ot.exports===it,lt=ut&&rt.process,ct=function(){try{return ot&&ot.require&&ot.require("util").types||lt&&lt.binding&&lt.binding("util")}catch(e){}}(),ht=ct&&ct.isArrayBuffer,dt=ct&&ct.isDate,pt=ct&&ct.isMap,ft=ct&&ct.isRegExp,gt=ct&&ct.isSet,mt=ct&&ct.isTypedArray;function bt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function yt(e,t,n,r){for(var s=-1,a=null==e?0:e.length;++s<a;){var i=e[s];t(r,i,n(i),e)}return r}function xt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function vt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function wt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function kt(e,t){for(var n=-1,r=null==e?0:e.length,s=0,a=[];++n<r;){var i=e[n];t(i,n,e)&&(a[s++]=i)}return a}function It(e,t){return!(null==e||!e.length)&&Ft(e,t,0)>-1}function $t(e,t,n){for(var r=-1,s=null==e?0:e.length;++r<s;)if(n(t,e[r]))return!0;return!1}function Ct(e,t){for(var n=-1,r=null==e?0:e.length,s=Array(r);++n<r;)s[n]=t(e[n],n,e);return s}function Nt(e,t){for(var n=-1,r=t.length,s=e.length;++n<r;)e[s+n]=t[n];return e}function St(e,t,n,r){var s=-1,a=null==e?0:e.length;for(r&&a&&(n=e[++s]);++s<a;)n=t(n,e[s],s,e);return n}function Et(e,t,n,r){var s=null==e?0:e.length;for(r&&s&&(n=e[--s]);s--;)n=t(n,e[s],s,e);return n}function Tt(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var Rt=Mt("length");function At(e,t,n){var r;return n(e,(function(e,n,s){if(t(e,n,s))return r=n,!1})),r}function _t(e,t,n,r){for(var s=e.length,a=n+(r?1:-1);r?a--:++a<s;)if(t(e[a],a,e))return a;return-1}function Ft(e,t,n){return t==t?function(e,t,n){for(var r=n-1,s=e.length;++r<s;)if(e[r]===t)return r;return-1}(e,t,n):_t(e,Ot,n)}function Dt(e,t,n,r){for(var s=n-1,a=e.length;++s<a;)if(r(e[s],t))return s;return-1}function Ot(e){return e!=e}function Lt(e,t){var n=null==e?0:e.length;return n?Pt(e,t)/n:d}function Mt(e){return function(t){return null==t?s:t[e]}}function zt(e){return function(t){return null==e?s:e[t]}}function Bt(e,t,n,r,s){return s(e,(function(e,s,a){n=r?(r=!1,e):t(n,e,s,a)})),n}function Pt(e,t){for(var n,r=-1,a=e.length;++r<a;){var i=t(e[r]);i!==s&&(n=n===s?i:n+i)}return n}function Wt(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function Ut(e){return e?e.slice(0,on(e)+1).replace(re,""):e}function Vt(e){return function(t){return e(t)}}function Gt(e,t){return Ct(t,(function(t){return e[t]}))}function Ht(e,t){return e.has(t)}function jt(e,t){for(var n=-1,r=e.length;++n<r&&Ft(t,e[n],0)>-1;);return n}function qt(e,t){for(var n=e.length;n--&&Ft(t,e[n],0)>-1;);return n}function Kt(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}var Xt=zt({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),Yt=zt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Jt(e){return"\\"+et[e]}function Zt(e){return Ke.test(e)}function Qt(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function en(e,t){return function(n){return e(t(n))}}function tn(e,t){for(var n=-1,r=e.length,s=0,a=[];++n<r;){var i=e[n];i!==t&&i!==o||(e[n]=o,a[s++]=n)}return a}function nn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function rn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}function sn(e){return Zt(e)?function(e){for(var t=je.lastIndex=0;je.test(e);)++t;return t}(e):Rt(e)}function an(e){return Zt(e)?function(e){return e.match(je)||[]}(e):function(e){return e.split("")}(e)}function on(e){for(var t=e.length;t--&&se.test(e.charAt(t)););return t}var un=zt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),ln=function e(t){var n,r=(t=null==t?at:ln.defaults(at.Object(),t,ln.pick(at,Ye))).Array,se=t.Date,we=t.Error,ke=t.Function,Ie=t.Math,$e=t.Object,Ce=t.RegExp,Ne=t.String,Se=t.TypeError,Ee=r.prototype,Te=ke.prototype,Re=$e.prototype,Ae=t["__core-js_shared__"],_e=Te.toString,Fe=Re.hasOwnProperty,De=0,Oe=(n=/[^.]+$/.exec(Ae&&Ae.keys&&Ae.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",Le=Re.toString,Me=_e.call($e),ze=at._,Be=Ce("^"+_e.call(Fe).replace(te,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Pe=ut?t.Buffer:s,We=t.Symbol,Ue=t.Uint8Array,Ve=Pe?Pe.allocUnsafe:s,je=en($e.getPrototypeOf,$e),Ke=$e.create,et=Re.propertyIsEnumerable,rt=Ee.splice,st=We?We.isConcatSpreadable:s,it=We?We.iterator:s,ot=We?We.toStringTag:s,lt=function(){try{var e=la($e,"defineProperty");return e({},"",{}),e}catch(e){}}(),ct=t.clearTimeout!==at.clearTimeout&&t.clearTimeout,Rt=se&&se.now!==at.Date.now&&se.now,zt=t.setTimeout!==at.setTimeout&&t.setTimeout,cn=Ie.ceil,hn=Ie.floor,dn=$e.getOwnPropertySymbols,pn=Pe?Pe.isBuffer:s,fn=t.isFinite,gn=Ee.join,mn=en($e.keys,$e),bn=Ie.max,yn=Ie.min,xn=se.now,vn=t.parseInt,wn=Ie.random,kn=Ee.reverse,In=la(t,"DataView"),$n=la(t,"Map"),Cn=la(t,"Promise"),Nn=la(t,"Set"),Sn=la(t,"WeakMap"),En=la($e,"create"),Tn=Sn&&new Sn,Rn={},An=za(In),_n=za($n),Fn=za(Cn),Dn=za(Nn),On=za(Sn),Ln=We?We.prototype:s,Mn=Ln?Ln.valueOf:s,zn=Ln?Ln.toString:s;function Bn(e){if(to(e)&&!Gi(e)&&!(e instanceof Vn)){if(e instanceof Un)return e;if(Fe.call(e,"__wrapped__"))return Ba(e)}return new Un(e)}var Pn=function(){function e(){}return function(t){if(!eo(t))return{};if(Ke)return Ke(t);e.prototype=t;var n=new e;return e.prototype=s,n}}();function Wn(){}function Un(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=s}function Vn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=p,this.__views__=[]}function Gn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Hn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function jn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function qn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new jn;++t<n;)this.add(e[t])}function Kn(e){var t=this.__data__=new Hn(e);this.size=t.size}function Xn(e,t){var n=Gi(e),r=!n&&Vi(e),s=!n&&!r&&Ki(e),a=!n&&!r&&!s&&lo(e),i=n||r||s||a,o=i?Wt(e.length,Ne):[],u=o.length;for(var l in e)!t&&!Fe.call(e,l)||i&&("length"==l||s&&("offset"==l||"parent"==l)||a&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||ma(l,u))||o.push(l);return o}function Yn(e){var t=e.length;return t?e[jr(0,t-1)]:s}function Jn(e,t){return Fa(Ss(e),ir(t,0,e.length))}function Zn(e){return Fa(Ss(e))}function Qn(e,t,n){(n!==s&&!Pi(e[t],n)||n===s&&!(t in e))&&sr(e,t,n)}function er(e,t,n){var r=e[t];Fe.call(e,t)&&Pi(r,n)&&(n!==s||t in e)||sr(e,t,n)}function tr(e,t){for(var n=e.length;n--;)if(Pi(e[n][0],t))return n;return-1}function nr(e,t,n,r){return hr(e,(function(e,s,a){t(r,e,n(e),a)})),r}function rr(e,t){return e&&Es(t,_o(t),e)}function sr(e,t,n){"__proto__"==t&&lt?lt(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function ar(e,t){for(var n=-1,a=t.length,i=r(a),o=null==e;++n<a;)i[n]=o?s:So(e,t[n]);return i}function ir(e,t,n){return e==e&&(n!==s&&(e=e<=n?e:n),t!==s&&(e=e>=t?e:t)),e}function or(e,t,n,r,a,i){var o,u=1&t,l=2&t,c=4&t;if(n&&(o=a?n(e,r,a,i):n(e)),o!==s)return o;if(!eo(e))return e;var h=Gi(e);if(h){if(o=function(e){var t=e.length,n=new e.constructor(t);return t&&"string"==typeof e[0]&&Fe.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!u)return Ss(e,o)}else{var d=da(e),p=d==v||d==w;if(Ki(e))return ws(e,u);if(d==$||d==g||p&&!a){if(o=l||p?{}:fa(e),!u)return l?function(e,t){return Es(e,ha(e),t)}(e,function(e,t){return e&&Es(t,Fo(t),e)}(o,e)):function(e,t){return Es(e,ca(e),t)}(e,rr(o,e))}else{if(!Qe[d])return a?e:{};o=function(e,t,n){var r,s=e.constructor;switch(t){case A:return ks(e);case b:case y:return new s(+e);case _:return function(e,t){var n=t?ks(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case F:case D:case O:case L:case M:case z:case B:case P:case W:return Is(e,n);case k:case S:return new s;case I:case E:return new s(e);case N:return function(e){var t=new e.constructor(e.source,de.exec(e));return t.lastIndex=e.lastIndex,t}(e);case T:return r=e,Mn?$e(Mn.call(r)):{}}}(e,d,u)}}i||(i=new Kn);var f=i.get(e);if(f)return f;i.set(e,o),io(e)?e.forEach((function(r){o.add(or(r,t,n,r,e,i))})):no(e)&&e.forEach((function(r,s){o.set(s,or(r,t,n,s,e,i))}));var m=h?s:(c?l?na:ta:l?Fo:_o)(e);return xt(m||e,(function(r,s){m&&(r=e[s=r]),er(o,s,or(r,t,n,s,e,i))})),o}function ur(e,t,n){var r=n.length;if(null==e)return!r;for(e=$e(e);r--;){var a=n[r],i=t[a],o=e[a];if(o===s&&!(a in e)||!i(o))return!1}return!0}function lr(e,t,n){if("function"!=typeof e)throw new Se(a);return Ta((function(){e.apply(s,n)}),t)}function cr(e,t,n,r){var s=-1,a=It,i=!0,o=e.length,u=[],l=t.length;if(!o)return u;n&&(t=Ct(t,Vt(n))),r?(a=$t,i=!1):t.length>=200&&(a=Ht,i=!1,t=new qn(t));e:for(;++s<o;){var c=e[s],h=null==n?c:n(c);if(c=r||0!==c?c:0,i&&h==h){for(var d=l;d--;)if(t[d]===h)continue e;u.push(c)}else a(t,h,r)||u.push(c)}return u}Bn.templateSettings={escape:X,evaluate:Y,interpolate:J,variable:"",imports:{_:Bn}},Bn.prototype=Wn.prototype,Bn.prototype.constructor=Bn,Un.prototype=Pn(Wn.prototype),Un.prototype.constructor=Un,Vn.prototype=Pn(Wn.prototype),Vn.prototype.constructor=Vn,Gn.prototype.clear=function(){this.__data__=En?En(null):{},this.size=0},Gn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Gn.prototype.get=function(e){var t=this.__data__;if(En){var n=t[e];return n===i?s:n}return Fe.call(t,e)?t[e]:s},Gn.prototype.has=function(e){var t=this.__data__;return En?t[e]!==s:Fe.call(t,e)},Gn.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=En&&t===s?i:t,this},Hn.prototype.clear=function(){this.__data__=[],this.size=0},Hn.prototype.delete=function(e){var t=this.__data__,n=tr(t,e);return!(n<0||(n==t.length-1?t.pop():rt.call(t,n,1),--this.size,0))},Hn.prototype.get=function(e){var t=this.__data__,n=tr(t,e);return n<0?s:t[n][1]},Hn.prototype.has=function(e){return tr(this.__data__,e)>-1},Hn.prototype.set=function(e,t){var n=this.__data__,r=tr(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},jn.prototype.clear=function(){this.size=0,this.__data__={hash:new Gn,map:new($n||Hn),string:new Gn}},jn.prototype.delete=function(e){var t=oa(this,e).delete(e);return this.size-=t?1:0,t},jn.prototype.get=function(e){return oa(this,e).get(e)},jn.prototype.has=function(e){return oa(this,e).has(e)},jn.prototype.set=function(e,t){var n=oa(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},qn.prototype.add=qn.prototype.push=function(e){return this.__data__.set(e,i),this},qn.prototype.has=function(e){return this.__data__.has(e)},Kn.prototype.clear=function(){this.__data__=new Hn,this.size=0},Kn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},Kn.prototype.get=function(e){return this.__data__.get(e)},Kn.prototype.has=function(e){return this.__data__.has(e)},Kn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Hn){var r=n.__data__;if(!$n||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new jn(r)}return n.set(e,t),this.size=n.size,this};var hr=As(xr),dr=As(vr,!0);function pr(e,t){var n=!0;return hr(e,(function(e,r,s){return n=!!t(e,r,s)})),n}function fr(e,t,n){for(var r=-1,a=e.length;++r<a;){var i=e[r],o=t(i);if(null!=o&&(u===s?o==o&&!uo(o):n(o,u)))var u=o,l=i}return l}function gr(e,t){var n=[];return hr(e,(function(e,r,s){t(e,r,s)&&n.push(e)})),n}function mr(e,t,n,r,s){var a=-1,i=e.length;for(n||(n=ga),s||(s=[]);++a<i;){var o=e[a];t>0&&n(o)?t>1?mr(o,t-1,n,r,s):Nt(s,o):r||(s[s.length]=o)}return s}var br=_s(),yr=_s(!0);function xr(e,t){return e&&br(e,t,_o)}function vr(e,t){return e&&yr(e,t,_o)}function wr(e,t){return kt(t,(function(t){return Ji(e[t])}))}function kr(e,t){for(var n=0,r=(t=bs(t,e)).length;null!=e&&n<r;)e=e[Ma(t[n++])];return n&&n==r?e:s}function Ir(e,t,n){var r=t(e);return Gi(e)?r:Nt(r,n(e))}function $r(e){return null==e?e===s?"[object Undefined]":"[object Null]":ot&&ot in $e(e)?function(e){var t=Fe.call(e,ot),n=e[ot];try{e[ot]=s;var r=!0}catch(e){}var a=Le.call(e);return r&&(t?e[ot]=n:delete e[ot]),a}(e):function(e){return Le.call(e)}(e)}function Cr(e,t){return e>t}function Nr(e,t){return null!=e&&Fe.call(e,t)}function Sr(e,t){return null!=e&&t in $e(e)}function Er(e,t,n){for(var a=n?$t:It,i=e[0].length,o=e.length,u=o,l=r(o),c=1/0,h=[];u--;){var d=e[u];u&&t&&(d=Ct(d,Vt(t))),c=yn(d.length,c),l[u]=!n&&(t||i>=120&&d.length>=120)?new qn(u&&d):s}d=e[0];var p=-1,f=l[0];e:for(;++p<i&&h.length<c;){var g=d[p],m=t?t(g):g;if(g=n||0!==g?g:0,!(f?Ht(f,m):a(h,m,n))){for(u=o;--u;){var b=l[u];if(!(b?Ht(b,m):a(e[u],m,n)))continue e}f&&f.push(m),h.push(g)}}return h}function Tr(e,t,n){var r=null==(e=Ca(e,t=bs(t,e)))?e:e[Ma(Ya(t))];return null==r?s:bt(r,e,n)}function Rr(e){return to(e)&&$r(e)==g}function Ar(e,t,n,r,a){return e===t||(null==e||null==t||!to(e)&&!to(t)?e!=e&&t!=t:function(e,t,n,r,a,i){var o=Gi(e),u=Gi(t),l=o?m:da(e),c=u?m:da(t),h=(l=l==g?$:l)==$,d=(c=c==g?$:c)==$,p=l==c;if(p&&Ki(e)){if(!Ki(t))return!1;o=!0,h=!1}if(p&&!h)return i||(i=new Kn),o||lo(e)?Qs(e,t,n,r,a,i):function(e,t,n,r,s,a,i){switch(n){case _:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case A:return!(e.byteLength!=t.byteLength||!a(new Ue(e),new Ue(t)));case b:case y:case I:return Pi(+e,+t);case x:return e.name==t.name&&e.message==t.message;case N:case E:return e==t+"";case k:var o=Qt;case S:var u=1&r;if(o||(o=nn),e.size!=t.size&&!u)return!1;var l=i.get(e);if(l)return l==t;r|=2,i.set(e,t);var c=Qs(o(e),o(t),r,s,a,i);return i.delete(e),c;case T:if(Mn)return Mn.call(e)==Mn.call(t)}return!1}(e,t,l,n,r,a,i);if(!(1&n)){var f=h&&Fe.call(e,"__wrapped__"),v=d&&Fe.call(t,"__wrapped__");if(f||v){var w=f?e.value():e,C=v?t.value():t;return i||(i=new Kn),a(w,C,n,r,i)}}return!!p&&(i||(i=new Kn),function(e,t,n,r,a,i){var o=1&n,u=ta(e),l=u.length;if(l!=ta(t).length&&!o)return!1;for(var c=l;c--;){var h=u[c];if(!(o?h in t:Fe.call(t,h)))return!1}var d=i.get(e),p=i.get(t);if(d&&p)return d==t&&p==e;var f=!0;i.set(e,t),i.set(t,e);for(var g=o;++c<l;){var m=e[h=u[c]],b=t[h];if(r)var y=o?r(b,m,h,t,e,i):r(m,b,h,e,t,i);if(!(y===s?m===b||a(m,b,n,r,i):y)){f=!1;break}g||(g="constructor"==h)}if(f&&!g){var x=e.constructor,v=t.constructor;x==v||!("constructor"in e)||!("constructor"in t)||"function"==typeof x&&x instanceof x&&"function"==typeof v&&v instanceof v||(f=!1)}return i.delete(e),i.delete(t),f}(e,t,n,r,a,i))}(e,t,n,r,Ar,a))}function _r(e,t,n,r){var a=n.length,i=a,o=!r;if(null==e)return!i;for(e=$e(e);a--;){var u=n[a];if(o&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++a<i;){var l=(u=n[a])[0],c=e[l],h=u[1];if(o&&u[2]){if(c===s&&!(l in e))return!1}else{var d=new Kn;if(r)var p=r(c,h,l,e,t,d);if(!(p===s?Ar(h,c,3,r,d):p))return!1}}return!0}function Fr(e){return!(!eo(e)||(t=e,Oe&&Oe in t))&&(Ji(e)?Be:ge).test(za(e));var t}function Dr(e){return"function"==typeof e?e:null==e?su:"object"==typeof e?Gi(e)?Br(e[0],e[1]):zr(e):pu(e)}function Or(e){if(!wa(e))return mn(e);var t=[];for(var n in $e(e))Fe.call(e,n)&&"constructor"!=n&&t.push(n);return t}function Lr(e,t){return e<t}function Mr(e,t){var n=-1,s=ji(e)?r(e.length):[];return hr(e,(function(e,r,a){s[++n]=t(e,r,a)})),s}function zr(e){var t=ua(e);return 1==t.length&&t[0][2]?Ia(t[0][0],t[0][1]):function(n){return n===e||_r(n,e,t)}}function Br(e,t){return ya(e)&&ka(t)?Ia(Ma(e),t):function(n){var r=So(n,e);return r===s&&r===t?Eo(n,e):Ar(t,r,3)}}function Pr(e,t,n,r,a){e!==t&&br(t,(function(i,o){if(a||(a=new Kn),eo(i))!function(e,t,n,r,a,i,o){var u=Sa(e,n),l=Sa(t,n),c=o.get(l);if(c)Qn(e,n,c);else{var h=i?i(u,l,n+"",e,t,o):s,d=h===s;if(d){var p=Gi(l),f=!p&&Ki(l),g=!p&&!f&&lo(l);h=l,p||f||g?Gi(u)?h=u:qi(u)?h=Ss(u):f?(d=!1,h=ws(l,!0)):g?(d=!1,h=Is(l,!0)):h=[]:so(l)||Vi(l)?(h=u,Vi(u)?h=yo(u):eo(u)&&!Ji(u)||(h=fa(l))):d=!1}d&&(o.set(l,h),a(h,l,r,i,o),o.delete(l)),Qn(e,n,h)}}(e,t,o,n,Pr,r,a);else{var u=r?r(Sa(e,o),i,o+"",e,t,a):s;u===s&&(u=i),Qn(e,o,u)}}),Fo)}function Wr(e,t){var n=e.length;if(n)return ma(t+=t<0?n:0,n)?e[t]:s}function Ur(e,t,n){t=t.length?Ct(t,(function(e){return Gi(e)?function(t){return kr(t,1===e.length?e[0]:e)}:e})):[su];var r=-1;t=Ct(t,Vt(ia()));var s=Mr(e,(function(e,n,s){var a=Ct(t,(function(t){return t(e)}));return{criteria:a,index:++r,value:e}}));return function(e,t){var r=e.length;for(e.sort((function(e,t){return function(e,t,n){for(var r=-1,s=e.criteria,a=t.criteria,i=s.length,o=n.length;++r<i;){var u=$s(s[r],a[r]);if(u)return r>=o?u:u*("desc"==n[r]?-1:1)}return e.index-t.index}(e,t,n)}));r--;)e[r]=e[r].value;return e}(s)}function Vr(e,t,n){for(var r=-1,s=t.length,a={};++r<s;){var i=t[r],o=kr(e,i);n(o,i)&&Jr(a,bs(i,e),o)}return a}function Gr(e,t,n,r){var s=r?Dt:Ft,a=-1,i=t.length,o=e;for(e===t&&(t=Ss(t)),n&&(o=Ct(e,Vt(n)));++a<i;)for(var u=0,l=t[a],c=n?n(l):l;(u=s(o,c,u,r))>-1;)o!==e&&rt.call(o,u,1),rt.call(e,u,1);return e}function Hr(e,t){for(var n=e?t.length:0,r=n-1;n--;){var s=t[n];if(n==r||s!==a){var a=s;ma(s)?rt.call(e,s,1):ls(e,s)}}return e}function jr(e,t){return e+hn(wn()*(t-e+1))}function qr(e,t){var n="";if(!e||t<1||t>h)return n;do{t%2&&(n+=e),(t=hn(t/2))&&(e+=e)}while(t);return n}function Kr(e,t){return Ra($a(e,t,su),e+"")}function Xr(e){return Yn(Wo(e))}function Yr(e,t){var n=Wo(e);return Fa(n,ir(t,0,n.length))}function Jr(e,t,n,r){if(!eo(e))return e;for(var a=-1,i=(t=bs(t,e)).length,o=i-1,u=e;null!=u&&++a<i;){var l=Ma(t[a]),c=n;if("__proto__"===l||"constructor"===l||"prototype"===l)return e;if(a!=o){var h=u[l];(c=r?r(h,l,u):s)===s&&(c=eo(h)?h:ma(t[a+1])?[]:{})}er(u,l,c),u=u[l]}return e}var Zr=Tn?function(e,t){return Tn.set(e,t),e}:su,Qr=lt?function(e,t){return lt(e,"toString",{configurable:!0,enumerable:!1,value:tu(t),writable:!0})}:su;function es(e){return Fa(Wo(e))}function ts(e,t,n){var s=-1,a=e.length;t<0&&(t=-t>a?0:a+t),(n=n>a?a:n)<0&&(n+=a),a=t>n?0:n-t>>>0,t>>>=0;for(var i=r(a);++s<a;)i[s]=e[s+t];return i}function ns(e,t){var n;return hr(e,(function(e,r,s){return!(n=t(e,r,s))})),!!n}function rs(e,t,n){var r=0,s=null==e?r:e.length;if("number"==typeof t&&t==t&&s<=2147483647){for(;r<s;){var a=r+s>>>1,i=e[a];null!==i&&!uo(i)&&(n?i<=t:i<t)?r=a+1:s=a}return s}return ss(e,t,su,n)}function ss(e,t,n,r){var a=0,i=null==e?0:e.length;if(0===i)return 0;for(var o=(t=n(t))!=t,u=null===t,l=uo(t),c=t===s;a<i;){var h=hn((a+i)/2),d=n(e[h]),p=d!==s,f=null===d,g=d==d,m=uo(d);if(o)var b=r||g;else b=c?g&&(r||p):u?g&&p&&(r||!f):l?g&&p&&!f&&(r||!m):!f&&!m&&(r?d<=t:d<t);b?a=h+1:i=h}return yn(i,4294967294)}function as(e,t){for(var n=-1,r=e.length,s=0,a=[];++n<r;){var i=e[n],o=t?t(i):i;if(!n||!Pi(o,u)){var u=o;a[s++]=0===i?0:i}}return a}function is(e){return"number"==typeof e?e:uo(e)?d:+e}function os(e){if("string"==typeof e)return e;if(Gi(e))return Ct(e,os)+"";if(uo(e))return zn?zn.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function us(e,t,n){var r=-1,s=It,a=e.length,i=!0,o=[],u=o;if(n)i=!1,s=$t;else if(a>=200){var l=t?null:qs(e);if(l)return nn(l);i=!1,s=Ht,u=new qn}else u=t?[]:o;e:for(;++r<a;){var c=e[r],h=t?t(c):c;if(c=n||0!==c?c:0,i&&h==h){for(var d=u.length;d--;)if(u[d]===h)continue e;t&&u.push(h),o.push(c)}else s(u,h,n)||(u!==o&&u.push(h),o.push(c))}return o}function ls(e,t){return null==(e=Ca(e,t=bs(t,e)))||delete e[Ma(Ya(t))]}function cs(e,t,n,r){return Jr(e,t,n(kr(e,t)),r)}function hs(e,t,n,r){for(var s=e.length,a=r?s:-1;(r?a--:++a<s)&&t(e[a],a,e););return n?ts(e,r?0:a,r?a+1:s):ts(e,r?a+1:0,r?s:a)}function ds(e,t){var n=e;return n instanceof Vn&&(n=n.value()),St(t,(function(e,t){return t.func.apply(t.thisArg,Nt([e],t.args))}),n)}function ps(e,t,n){var s=e.length;if(s<2)return s?us(e[0]):[];for(var a=-1,i=r(s);++a<s;)for(var o=e[a],u=-1;++u<s;)u!=a&&(i[a]=cr(i[a]||o,e[u],t,n));return us(mr(i,1),t,n)}function fs(e,t,n){for(var r=-1,a=e.length,i=t.length,o={};++r<a;){var u=r<i?t[r]:s;n(o,e[r],u)}return o}function gs(e){return qi(e)?e:[]}function ms(e){return"function"==typeof e?e:su}function bs(e,t){return Gi(e)?e:ya(e,t)?[e]:La(xo(e))}var ys=Kr;function xs(e,t,n){var r=e.length;return n=n===s?r:n,!t&&n>=r?e:ts(e,t,n)}var vs=ct||function(e){return at.clearTimeout(e)};function ws(e,t){if(t)return e.slice();var n=e.length,r=Ve?Ve(n):new e.constructor(n);return e.copy(r),r}function ks(e){var t=new e.constructor(e.byteLength);return new Ue(t).set(new Ue(e)),t}function Is(e,t){var n=t?ks(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function $s(e,t){if(e!==t){var n=e!==s,r=null===e,a=e==e,i=uo(e),o=t!==s,u=null===t,l=t==t,c=uo(t);if(!u&&!c&&!i&&e>t||i&&o&&l&&!u&&!c||r&&o&&l||!n&&l||!a)return 1;if(!r&&!i&&!c&&e<t||c&&n&&a&&!r&&!i||u&&n&&a||!o&&a||!l)return-1}return 0}function Cs(e,t,n,s){for(var a=-1,i=e.length,o=n.length,u=-1,l=t.length,c=bn(i-o,0),h=r(l+c),d=!s;++u<l;)h[u]=t[u];for(;++a<o;)(d||a<i)&&(h[n[a]]=e[a]);for(;c--;)h[u++]=e[a++];return h}function Ns(e,t,n,s){for(var a=-1,i=e.length,o=-1,u=n.length,l=-1,c=t.length,h=bn(i-u,0),d=r(h+c),p=!s;++a<h;)d[a]=e[a];for(var f=a;++l<c;)d[f+l]=t[l];for(;++o<u;)(p||a<i)&&(d[f+n[o]]=e[a++]);return d}function Ss(e,t){var n=-1,s=e.length;for(t||(t=r(s));++n<s;)t[n]=e[n];return t}function Es(e,t,n,r){var a=!n;n||(n={});for(var i=-1,o=t.length;++i<o;){var u=t[i],l=r?r(n[u],e[u],u,n,e):s;l===s&&(l=e[u]),a?sr(n,u,l):er(n,u,l)}return n}function Ts(e,t){return function(n,r){var s=Gi(n)?yt:nr,a=t?t():{};return s(n,e,ia(r,2),a)}}function Rs(e){return Kr((function(t,n){var r=-1,a=n.length,i=a>1?n[a-1]:s,o=a>2?n[2]:s;for(i=e.length>3&&"function"==typeof i?(a--,i):s,o&&ba(n[0],n[1],o)&&(i=a<3?s:i,a=1),t=$e(t);++r<a;){var u=n[r];u&&e(t,u,r,i)}return t}))}function As(e,t){return function(n,r){if(null==n)return n;if(!ji(n))return e(n,r);for(var s=n.length,a=t?s:-1,i=$e(n);(t?a--:++a<s)&&!1!==r(i[a],a,i););return n}}function _s(e){return function(t,n,r){for(var s=-1,a=$e(t),i=r(t),o=i.length;o--;){var u=i[e?o:++s];if(!1===n(a[u],u,a))break}return t}}function Fs(e){return function(t){var n=Zt(t=xo(t))?an(t):s,r=n?n[0]:t.charAt(0),a=n?xs(n,1).join(""):t.slice(1);return r[e]()+a}}function Ds(e){return function(t){return St(Zo(Go(t).replace(Ge,"")),e,"")}}function Os(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=Pn(e.prototype),r=e.apply(n,t);return eo(r)?r:n}}function Ls(e){return function(t,n,r){var a=$e(t);if(!ji(t)){var i=ia(n,3);t=_o(t),n=function(e){return i(a[e],e,a)}}var o=e(t,n,r);return o>-1?a[i?t[o]:o]:s}}function Ms(e){return ea((function(t){var n=t.length,r=n,i=Un.prototype.thru;for(e&&t.reverse();r--;){var o=t[r];if("function"!=typeof o)throw new Se(a);if(i&&!u&&"wrapper"==sa(o))var u=new Un([],!0)}for(r=u?r:n;++r<n;){var l=sa(o=t[r]),c="wrapper"==l?ra(o):s;u=c&&xa(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?u[sa(c[0])].apply(u,c[3]):1==o.length&&xa(o)?u[l]():u.thru(o)}return function(){var e=arguments,r=e[0];if(u&&1==e.length&&Gi(r))return u.plant(r).value();for(var s=0,a=n?t[s].apply(this,e):r;++s<n;)a=t[s].call(this,a);return a}}))}function zs(e,t,n,a,i,o,u,c,h,d){var p=t&l,f=1&t,g=2&t,m=24&t,b=512&t,y=g?s:Os(e);return function s(){for(var l=arguments.length,x=r(l),v=l;v--;)x[v]=arguments[v];if(m)var w=aa(s),k=Kt(x,w);if(a&&(x=Cs(x,a,i,m)),o&&(x=Ns(x,o,u,m)),l-=k,m&&l<d){var I=tn(x,w);return Hs(e,t,zs,s.placeholder,n,x,I,c,h,d-l)}var $=f?n:this,C=g?$[e]:e;return l=x.length,c?x=Na(x,c):b&&l>1&&x.reverse(),p&&h<l&&(x.length=h),this&&this!==at&&this instanceof s&&(C=y||Os(C)),C.apply($,x)}}function Bs(e,t){return function(n,r){return function(e,t,n,r){return xr(e,(function(e,s,a){t(r,n(e),s,a)})),r}(n,e,t(r),{})}}function Ps(e,t){return function(n,r){var a;if(n===s&&r===s)return t;if(n!==s&&(a=n),r!==s){if(a===s)return r;"string"==typeof n||"string"==typeof r?(n=os(n),r=os(r)):(n=is(n),r=is(r)),a=e(n,r)}return a}}function Ws(e){return ea((function(t){return t=Ct(t,Vt(ia())),Kr((function(n){var r=this;return e(t,(function(e){return bt(e,r,n)}))}))}))}function Us(e,t){var n=(t=t===s?" ":os(t)).length;if(n<2)return n?qr(t,e):t;var r=qr(t,cn(e/sn(t)));return Zt(t)?xs(an(r),0,e).join(""):r.slice(0,e)}function Vs(e){return function(t,n,a){return a&&"number"!=typeof a&&ba(t,n,a)&&(n=a=s),t=fo(t),n===s?(n=t,t=0):n=fo(n),function(e,t,n,s){for(var a=-1,i=bn(cn((t-e)/(n||1)),0),o=r(i);i--;)o[s?i:++a]=e,e+=n;return o}(t,n,a=a===s?t<n?1:-1:fo(a),e)}}function Gs(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=bo(t),n=bo(n)),e(t,n)}}function Hs(e,t,n,r,a,i,o,l,c,h){var d=8&t;t|=d?u:64,4&(t&=~(d?64:u))||(t&=-4);var p=[e,t,a,d?i:s,d?o:s,d?s:i,d?s:o,l,c,h],f=n.apply(s,p);return xa(e)&&Ea(f,p),f.placeholder=r,Aa(f,e,t)}function js(e){var t=Ie[e];return function(e,n){if(e=bo(e),(n=null==n?0:yn(go(n),292))&&fn(e)){var r=(xo(e)+"e").split("e");return+((r=(xo(t(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return t(e)}}var qs=Nn&&1/nn(new Nn([,-0]))[1]==c?function(e){return new Nn(e)}:lu;function Ks(e){return function(t){var n=da(t);return n==k?Qt(t):n==S?rn(t):function(e,t){return Ct(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function Xs(e,t,n,i,c,h,d,p){var f=2&t;if(!f&&"function"!=typeof e)throw new Se(a);var g=i?i.length:0;if(g||(t&=-97,i=c=s),d=d===s?d:bn(go(d),0),p=p===s?p:go(p),g-=c?c.length:0,64&t){var m=i,b=c;i=c=s}var y=f?s:ra(e),x=[e,t,n,i,c,m,b,h,d,p];if(y&&function(e,t){var n=e[1],r=t[1],s=n|r,a=s<131,i=r==l&&8==n||r==l&&256==n&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!a&&!i)return e;1&r&&(e[2]=t[2],s|=1&n?0:4);var u=t[3];if(u){var c=e[3];e[3]=c?Cs(c,u,t[4]):u,e[4]=c?tn(e[3],o):t[4]}(u=t[5])&&(c=e[5],e[5]=c?Ns(c,u,t[6]):u,e[6]=c?tn(e[5],o):t[6]),(u=t[7])&&(e[7]=u),r&l&&(e[8]=null==e[8]?t[8]:yn(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=s}(x,y),e=x[0],t=x[1],n=x[2],i=x[3],c=x[4],!(p=x[9]=x[9]===s?f?0:e.length:bn(x[9]-g,0))&&24&t&&(t&=-25),t&&1!=t)v=8==t||16==t?function(e,t,n){var a=Os(e);return function i(){for(var o=arguments.length,u=r(o),l=o,c=aa(i);l--;)u[l]=arguments[l];var h=o<3&&u[0]!==c&&u[o-1]!==c?[]:tn(u,c);return(o-=h.length)<n?Hs(e,t,zs,i.placeholder,s,u,h,s,s,n-o):bt(this&&this!==at&&this instanceof i?a:e,this,u)}}(e,t,p):t!=u&&33!=t||c.length?zs.apply(s,x):function(e,t,n,s){var a=1&t,i=Os(e);return function t(){for(var o=-1,u=arguments.length,l=-1,c=s.length,h=r(c+u),d=this&&this!==at&&this instanceof t?i:e;++l<c;)h[l]=s[l];for(;u--;)h[l++]=arguments[++o];return bt(d,a?n:this,h)}}(e,t,n,i);else var v=function(e,t,n){var r=1&t,s=Os(e);return function t(){return(this&&this!==at&&this instanceof t?s:e).apply(r?n:this,arguments)}}(e,t,n);return Aa((y?Zr:Ea)(v,x),e,t)}function Ys(e,t,n,r){return e===s||Pi(e,Re[n])&&!Fe.call(r,n)?t:e}function Js(e,t,n,r,a,i){return eo(e)&&eo(t)&&(i.set(t,e),Pr(e,t,s,Js,i),i.delete(t)),e}function Zs(e){return so(e)?s:e}function Qs(e,t,n,r,a,i){var o=1&n,u=e.length,l=t.length;if(u!=l&&!(o&&l>u))return!1;var c=i.get(e),h=i.get(t);if(c&&h)return c==t&&h==e;var d=-1,p=!0,f=2&n?new qn:s;for(i.set(e,t),i.set(t,e);++d<u;){var g=e[d],m=t[d];if(r)var b=o?r(m,g,d,t,e,i):r(g,m,d,e,t,i);if(b!==s){if(b)continue;p=!1;break}if(f){if(!Tt(t,(function(e,t){if(!Ht(f,t)&&(g===e||a(g,e,n,r,i)))return f.push(t)}))){p=!1;break}}else if(g!==m&&!a(g,m,n,r,i)){p=!1;break}}return i.delete(e),i.delete(t),p}function ea(e){return Ra($a(e,s,Ha),e+"")}function ta(e){return Ir(e,_o,ca)}function na(e){return Ir(e,Fo,ha)}var ra=Tn?function(e){return Tn.get(e)}:lu;function sa(e){for(var t=e.name+"",n=Rn[t],r=Fe.call(Rn,t)?n.length:0;r--;){var s=n[r],a=s.func;if(null==a||a==e)return s.name}return t}function aa(e){return(Fe.call(Bn,"placeholder")?Bn:e).placeholder}function ia(){var e=Bn.iteratee||au;return e=e===au?Dr:e,arguments.length?e(arguments[0],arguments[1]):e}function oa(e,t){var n,r,s=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?s["string"==typeof t?"string":"hash"]:s.map}function ua(e){for(var t=_o(e),n=t.length;n--;){var r=t[n],s=e[r];t[n]=[r,s,ka(s)]}return t}function la(e,t){var n=function(e,t){return null==e?s:e[t]}(e,t);return Fr(n)?n:s}var ca=dn?function(e){return null==e?[]:(e=$e(e),kt(dn(e),(function(t){return et.call(e,t)})))}:mu,ha=dn?function(e){for(var t=[];e;)Nt(t,ca(e)),e=je(e);return t}:mu,da=$r;function pa(e,t,n){for(var r=-1,s=(t=bs(t,e)).length,a=!1;++r<s;){var i=Ma(t[r]);if(!(a=null!=e&&n(e,i)))break;e=e[i]}return a||++r!=s?a:!!(s=null==e?0:e.length)&&Qi(s)&&ma(i,s)&&(Gi(e)||Vi(e))}function fa(e){return"function"!=typeof e.constructor||wa(e)?{}:Pn(je(e))}function ga(e){return Gi(e)||Vi(e)||!!(st&&e&&e[st])}function ma(e,t){var n=typeof e;return!!(t=null==t?h:t)&&("number"==n||"symbol"!=n&&be.test(e))&&e>-1&&e%1==0&&e<t}function ba(e,t,n){if(!eo(n))return!1;var r=typeof t;return!!("number"==r?ji(n)&&ma(t,n.length):"string"==r&&t in n)&&Pi(n[t],e)}function ya(e,t){if(Gi(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!uo(e))||Q.test(e)||!Z.test(e)||null!=t&&e in $e(t)}function xa(e){var t=sa(e),n=Bn[t];if("function"!=typeof n||!(t in Vn.prototype))return!1;if(e===n)return!0;var r=ra(n);return!!r&&e===r[0]}(In&&da(new In(new ArrayBuffer(1)))!=_||$n&&da(new $n)!=k||Cn&&da(Cn.resolve())!=C||Nn&&da(new Nn)!=S||Sn&&da(new Sn)!=R)&&(da=function(e){var t=$r(e),n=t==$?e.constructor:s,r=n?za(n):"";if(r)switch(r){case An:return _;case _n:return k;case Fn:return C;case Dn:return S;case On:return R}return t});var va=Ae?Ji:bu;function wa(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Re)}function ka(e){return e==e&&!eo(e)}function Ia(e,t){return function(n){return null!=n&&n[e]===t&&(t!==s||e in $e(n))}}function $a(e,t,n){return t=bn(t===s?e.length-1:t,0),function(){for(var s=arguments,a=-1,i=bn(s.length-t,0),o=r(i);++a<i;)o[a]=s[t+a];a=-1;for(var u=r(t+1);++a<t;)u[a]=s[a];return u[t]=n(o),bt(e,this,u)}}function Ca(e,t){return t.length<2?e:kr(e,ts(t,0,-1))}function Na(e,t){for(var n=e.length,r=yn(t.length,n),a=Ss(e);r--;){var i=t[r];e[r]=ma(i,n)?a[i]:s}return e}function Sa(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var Ea=_a(Zr),Ta=zt||function(e,t){return at.setTimeout(e,t)},Ra=_a(Qr);function Aa(e,t,n){var r=t+"";return Ra(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(ae,"{\n/* [wrapped with "+t+"] */\n")}(r,function(e,t){return xt(f,(function(n){var r="_."+n[0];t&n[1]&&!It(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(ie);return t?t[1].split(oe):[]}(r),n)))}function _a(e){var t=0,n=0;return function(){var r=xn(),a=16-(r-n);if(n=r,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(s,arguments)}}function Fa(e,t){var n=-1,r=e.length,a=r-1;for(t=t===s?r:t;++n<t;){var i=jr(n,a),o=e[i];e[i]=e[n],e[n]=o}return e.length=t,e}var Da,Oa,La=(Da=Di((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(ee,(function(e,n,r,s){t.push(r?s.replace(ce,"$1"):n||e)})),t}),(function(e){return 500===Oa.size&&Oa.clear(),e})),Oa=Da.cache,Da);function Ma(e){if("string"==typeof e||uo(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function za(e){if(null!=e){try{return _e.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Ba(e){if(e instanceof Vn)return e.clone();var t=new Un(e.__wrapped__,e.__chain__);return t.__actions__=Ss(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Pa=Kr((function(e,t){return qi(e)?cr(e,mr(t,1,qi,!0)):[]})),Wa=Kr((function(e,t){var n=Ya(t);return qi(n)&&(n=s),qi(e)?cr(e,mr(t,1,qi,!0),ia(n,2)):[]})),Ua=Kr((function(e,t){var n=Ya(t);return qi(n)&&(n=s),qi(e)?cr(e,mr(t,1,qi,!0),s,n):[]}));function Va(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var s=null==n?0:go(n);return s<0&&(s=bn(r+s,0)),_t(e,ia(t,3),s)}function Ga(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var a=r-1;return n!==s&&(a=go(n),a=n<0?bn(r+a,0):yn(a,r-1)),_t(e,ia(t,3),a,!0)}function Ha(e){return null!=e&&e.length?mr(e,1):[]}function ja(e){return e&&e.length?e[0]:s}var qa=Kr((function(e){var t=Ct(e,gs);return t.length&&t[0]===e[0]?Er(t):[]})),Ka=Kr((function(e){var t=Ya(e),n=Ct(e,gs);return t===Ya(n)?t=s:n.pop(),n.length&&n[0]===e[0]?Er(n,ia(t,2)):[]})),Xa=Kr((function(e){var t=Ya(e),n=Ct(e,gs);return(t="function"==typeof t?t:s)&&n.pop(),n.length&&n[0]===e[0]?Er(n,s,t):[]}));function Ya(e){var t=null==e?0:e.length;return t?e[t-1]:s}var Ja=Kr(Za);function Za(e,t){return e&&e.length&&t&&t.length?Gr(e,t):e}var Qa=ea((function(e,t){var n=null==e?0:e.length,r=ar(e,t);return Hr(e,Ct(t,(function(e){return ma(e,n)?+e:e})).sort($s)),r}));function ei(e){return null==e?e:kn.call(e)}var ti=Kr((function(e){return us(mr(e,1,qi,!0))})),ni=Kr((function(e){var t=Ya(e);return qi(t)&&(t=s),us(mr(e,1,qi,!0),ia(t,2))})),ri=Kr((function(e){var t=Ya(e);return t="function"==typeof t?t:s,us(mr(e,1,qi,!0),s,t)}));function si(e){if(!e||!e.length)return[];var t=0;return e=kt(e,(function(e){if(qi(e))return t=bn(e.length,t),!0})),Wt(t,(function(t){return Ct(e,Mt(t))}))}function ai(e,t){if(!e||!e.length)return[];var n=si(e);return null==t?n:Ct(n,(function(e){return bt(t,s,e)}))}var ii=Kr((function(e,t){return qi(e)?cr(e,t):[]})),oi=Kr((function(e){return ps(kt(e,qi))})),ui=Kr((function(e){var t=Ya(e);return qi(t)&&(t=s),ps(kt(e,qi),ia(t,2))})),li=Kr((function(e){var t=Ya(e);return t="function"==typeof t?t:s,ps(kt(e,qi),s,t)})),ci=Kr(si),hi=Kr((function(e){var t=e.length,n=t>1?e[t-1]:s;return n="function"==typeof n?(e.pop(),n):s,ai(e,n)}));function di(e){var t=Bn(e);return t.__chain__=!0,t}function pi(e,t){return t(e)}var fi=ea((function(e){var t=e.length,n=t?e[0]:0,r=this.__wrapped__,a=function(t){return ar(t,e)};return!(t>1||this.__actions__.length)&&r instanceof Vn&&ma(n)?((r=r.slice(n,+n+(t?1:0))).__actions__.push({func:pi,args:[a],thisArg:s}),new Un(r,this.__chain__).thru((function(e){return t&&!e.length&&e.push(s),e}))):this.thru(a)})),gi=Ts((function(e,t,n){Fe.call(e,n)?++e[n]:sr(e,n,1)})),mi=Ls(Va),bi=Ls(Ga);function yi(e,t){return(Gi(e)?xt:hr)(e,ia(t,3))}function xi(e,t){return(Gi(e)?vt:dr)(e,ia(t,3))}var vi=Ts((function(e,t,n){Fe.call(e,n)?e[n].push(t):sr(e,n,[t])})),wi=Kr((function(e,t,n){var s=-1,a="function"==typeof t,i=ji(e)?r(e.length):[];return hr(e,(function(e){i[++s]=a?bt(t,e,n):Tr(e,t,n)})),i})),ki=Ts((function(e,t,n){sr(e,n,t)}));function Ii(e,t){return(Gi(e)?Ct:Mr)(e,ia(t,3))}var $i=Ts((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]})),Ci=Kr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&ba(e,t[0],t[1])?t=[]:n>2&&ba(t[0],t[1],t[2])&&(t=[t[0]]),Ur(e,mr(t,1),[])})),Ni=Rt||function(){return at.Date.now()};function Si(e,t,n){return t=n?s:t,t=e&&null==t?e.length:t,Xs(e,l,s,s,s,s,t)}function Ei(e,t){var n;if("function"!=typeof t)throw new Se(a);return e=go(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=s),n}}var Ti=Kr((function(e,t,n){var r=1;if(n.length){var s=tn(n,aa(Ti));r|=u}return Xs(e,r,t,n,s)})),Ri=Kr((function(e,t,n){var r=3;if(n.length){var s=tn(n,aa(Ri));r|=u}return Xs(t,r,e,n,s)}));function Ai(e,t,n){var r,i,o,u,l,c,h=0,d=!1,p=!1,f=!0;if("function"!=typeof e)throw new Se(a);function g(t){var n=r,a=i;return r=i=s,h=t,u=e.apply(a,n)}function m(e){return h=e,l=Ta(y,t),d?g(e):u}function b(e){var n=e-c;return c===s||n>=t||n<0||p&&e-h>=o}function y(){var e=Ni();if(b(e))return x(e);l=Ta(y,function(e){var n=t-(e-c);return p?yn(n,o-(e-h)):n}(e))}function x(e){return l=s,f&&r?g(e):(r=i=s,u)}function v(){var e=Ni(),n=b(e);if(r=arguments,i=this,c=e,n){if(l===s)return m(c);if(p)return vs(l),l=Ta(y,t),g(c)}return l===s&&(l=Ta(y,t)),u}return t=bo(t)||0,eo(n)&&(d=!!n.leading,o=(p="maxWait"in n)?bn(bo(n.maxWait)||0,t):o,f="trailing"in n?!!n.trailing:f),v.cancel=function(){l!==s&&vs(l),h=0,r=c=i=l=s},v.flush=function(){return l===s?u:x(Ni())},v}var _i=Kr((function(e,t){return lr(e,1,t)})),Fi=Kr((function(e,t,n){return lr(e,bo(t)||0,n)}));function Di(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new Se(a);var n=function(){var r=arguments,s=t?t.apply(this,r):r[0],a=n.cache;if(a.has(s))return a.get(s);var i=e.apply(this,r);return n.cache=a.set(s,i)||a,i};return n.cache=new(Di.Cache||jn),n}function Oi(e){if("function"!=typeof e)throw new Se(a);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}Di.Cache=jn;var Li=ys((function(e,t){var n=(t=1==t.length&&Gi(t[0])?Ct(t[0],Vt(ia())):Ct(mr(t,1),Vt(ia()))).length;return Kr((function(r){for(var s=-1,a=yn(r.length,n);++s<a;)r[s]=t[s].call(this,r[s]);return bt(e,this,r)}))})),Mi=Kr((function(e,t){var n=tn(t,aa(Mi));return Xs(e,u,s,t,n)})),zi=Kr((function(e,t){var n=tn(t,aa(zi));return Xs(e,64,s,t,n)})),Bi=ea((function(e,t){return Xs(e,256,s,s,s,t)}));function Pi(e,t){return e===t||e!=e&&t!=t}var Wi=Gs(Cr),Ui=Gs((function(e,t){return e>=t})),Vi=Rr(function(){return arguments}())?Rr:function(e){return to(e)&&Fe.call(e,"callee")&&!et.call(e,"callee")},Gi=r.isArray,Hi=ht?Vt(ht):function(e){return to(e)&&$r(e)==A};function ji(e){return null!=e&&Qi(e.length)&&!Ji(e)}function qi(e){return to(e)&&ji(e)}var Ki=pn||bu,Xi=dt?Vt(dt):function(e){return to(e)&&$r(e)==y};function Yi(e){if(!to(e))return!1;var t=$r(e);return t==x||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!so(e)}function Ji(e){if(!eo(e))return!1;var t=$r(e);return t==v||t==w||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Zi(e){return"number"==typeof e&&e==go(e)}function Qi(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=h}function eo(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function to(e){return null!=e&&"object"==typeof e}var no=pt?Vt(pt):function(e){return to(e)&&da(e)==k};function ro(e){return"number"==typeof e||to(e)&&$r(e)==I}function so(e){if(!to(e)||$r(e)!=$)return!1;var t=je(e);if(null===t)return!0;var n=Fe.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&_e.call(n)==Me}var ao=ft?Vt(ft):function(e){return to(e)&&$r(e)==N},io=gt?Vt(gt):function(e){return to(e)&&da(e)==S};function oo(e){return"string"==typeof e||!Gi(e)&&to(e)&&$r(e)==E}function uo(e){return"symbol"==typeof e||to(e)&&$r(e)==T}var lo=mt?Vt(mt):function(e){return to(e)&&Qi(e.length)&&!!Ze[$r(e)]},co=Gs(Lr),ho=Gs((function(e,t){return e<=t}));function po(e){if(!e)return[];if(ji(e))return oo(e)?an(e):Ss(e);if(it&&e[it])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[it]());var t=da(e);return(t==k?Qt:t==S?nn:Wo)(e)}function fo(e){return e?(e=bo(e))===c||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function go(e){var t=fo(e),n=t%1;return t==t?n?t-n:t:0}function mo(e){return e?ir(go(e),0,p):0}function bo(e){if("number"==typeof e)return e;if(uo(e))return d;if(eo(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=eo(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=Ut(e);var n=fe.test(e);return n||me.test(e)?nt(e.slice(2),n?2:8):pe.test(e)?d:+e}function yo(e){return Es(e,Fo(e))}function xo(e){return null==e?"":os(e)}var vo=Rs((function(e,t){if(wa(t)||ji(t))Es(t,_o(t),e);else for(var n in t)Fe.call(t,n)&&er(e,n,t[n])})),wo=Rs((function(e,t){Es(t,Fo(t),e)})),ko=Rs((function(e,t,n,r){Es(t,Fo(t),e,r)})),Io=Rs((function(e,t,n,r){Es(t,_o(t),e,r)})),$o=ea(ar),Co=Kr((function(e,t){e=$e(e);var n=-1,r=t.length,a=r>2?t[2]:s;for(a&&ba(t[0],t[1],a)&&(r=1);++n<r;)for(var i=t[n],o=Fo(i),u=-1,l=o.length;++u<l;){var c=o[u],h=e[c];(h===s||Pi(h,Re[c])&&!Fe.call(e,c))&&(e[c]=i[c])}return e})),No=Kr((function(e){return e.push(s,Js),bt(Oo,s,e)}));function So(e,t,n){var r=null==e?s:kr(e,t);return r===s?n:r}function Eo(e,t){return null!=e&&pa(e,t,Sr)}var To=Bs((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Le.call(t)),e[t]=n}),tu(su)),Ro=Bs((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Le.call(t)),Fe.call(e,t)?e[t].push(n):e[t]=[n]}),ia),Ao=Kr(Tr);function _o(e){return ji(e)?Xn(e):Or(e)}function Fo(e){return ji(e)?Xn(e,!0):function(e){if(!eo(e))return function(e){var t=[];if(null!=e)for(var n in $e(e))t.push(n);return t}(e);var t=wa(e),n=[];for(var r in e)("constructor"!=r||!t&&Fe.call(e,r))&&n.push(r);return n}(e)}var Do=Rs((function(e,t,n){Pr(e,t,n)})),Oo=Rs((function(e,t,n,r){Pr(e,t,n,r)})),Lo=ea((function(e,t){var n={};if(null==e)return n;var r=!1;t=Ct(t,(function(t){return t=bs(t,e),r||(r=t.length>1),t})),Es(e,na(e),n),r&&(n=or(n,7,Zs));for(var s=t.length;s--;)ls(n,t[s]);return n})),Mo=ea((function(e,t){return null==e?{}:function(e,t){return Vr(e,t,(function(t,n){return Eo(e,n)}))}(e,t)}));function zo(e,t){if(null==e)return{};var n=Ct(na(e),(function(e){return[e]}));return t=ia(t),Vr(e,n,(function(e,n){return t(e,n[0])}))}var Bo=Ks(_o),Po=Ks(Fo);function Wo(e){return null==e?[]:Gt(e,_o(e))}var Uo=Ds((function(e,t,n){return t=t.toLowerCase(),e+(n?Vo(t):t)}));function Vo(e){return Jo(xo(e).toLowerCase())}function Go(e){return(e=xo(e))&&e.replace(ye,Xt).replace(He,"")}var Ho=Ds((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),jo=Ds((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),qo=Fs("toLowerCase"),Ko=Ds((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()})),Xo=Ds((function(e,t,n){return e+(n?" ":"")+Jo(t)})),Yo=Ds((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),Jo=Fs("toUpperCase");function Zo(e,t,n){return e=xo(e),(t=n?s:t)===s?function(e){return Xe.test(e)}(e)?function(e){return e.match(qe)||[]}(e):function(e){return e.match(ue)||[]}(e):e.match(t)||[]}var Qo=Kr((function(e,t){try{return bt(e,s,t)}catch(e){return Yi(e)?e:new we(e)}})),eu=ea((function(e,t){return xt(t,(function(t){t=Ma(t),sr(e,t,Ti(e[t],e))})),e}));function tu(e){return function(){return e}}var nu=Ms(),ru=Ms(!0);function su(e){return e}function au(e){return Dr("function"==typeof e?e:or(e,1))}var iu=Kr((function(e,t){return function(n){return Tr(n,e,t)}})),ou=Kr((function(e,t){return function(n){return Tr(e,n,t)}}));function uu(e,t,n){var r=_o(t),s=wr(t,r);null!=n||eo(t)&&(s.length||!r.length)||(n=t,t=e,e=this,s=wr(t,_o(t)));var a=!(eo(n)&&"chain"in n&&!n.chain),i=Ji(e);return xt(s,(function(n){var r=t[n];e[n]=r,i&&(e.prototype[n]=function(){var t=this.__chain__;if(a||t){var n=e(this.__wrapped__),s=n.__actions__=Ss(this.__actions__);return s.push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,Nt([this.value()],arguments))})})),e}function lu(){}var cu=Ws(Ct),hu=Ws(wt),du=Ws(Tt);function pu(e){return ya(e)?Mt(Ma(e)):function(e){return function(t){return kr(t,e)}}(e)}var fu=Vs(),gu=Vs(!0);function mu(){return[]}function bu(){return!1}var yu,xu=Ps((function(e,t){return e+t}),0),vu=js("ceil"),wu=Ps((function(e,t){return e/t}),1),ku=js("floor"),Iu=Ps((function(e,t){return e*t}),1),$u=js("round"),Cu=Ps((function(e,t){return e-t}),0);return Bn.after=function(e,t){if("function"!=typeof t)throw new Se(a);return e=go(e),function(){if(--e<1)return t.apply(this,arguments)}},Bn.ary=Si,Bn.assign=vo,Bn.assignIn=wo,Bn.assignInWith=ko,Bn.assignWith=Io,Bn.at=$o,Bn.before=Ei,Bn.bind=Ti,Bn.bindAll=eu,Bn.bindKey=Ri,Bn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Gi(e)?e:[e]},Bn.chain=di,Bn.chunk=function(e,t,n){t=(n?ba(e,t,n):t===s)?1:bn(go(t),0);var a=null==e?0:e.length;if(!a||t<1)return[];for(var i=0,o=0,u=r(cn(a/t));i<a;)u[o++]=ts(e,i,i+=t);return u},Bn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,s=[];++t<n;){var a=e[t];a&&(s[r++]=a)}return s},Bn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=r(e-1),n=arguments[0],s=e;s--;)t[s-1]=arguments[s];return Nt(Gi(n)?Ss(n):[n],mr(t,1))},Bn.cond=function(e){var t=null==e?0:e.length,n=ia();return e=t?Ct(e,(function(e){if("function"!=typeof e[1])throw new Se(a);return[n(e[0]),e[1]]})):[],Kr((function(n){for(var r=-1;++r<t;){var s=e[r];if(bt(s[0],this,n))return bt(s[1],this,n)}}))},Bn.conforms=function(e){return function(e){var t=_o(e);return function(n){return ur(n,e,t)}}(or(e,1))},Bn.constant=tu,Bn.countBy=gi,Bn.create=function(e,t){var n=Pn(e);return null==t?n:rr(n,t)},Bn.curry=function e(t,n,r){var a=Xs(t,8,s,s,s,s,s,n=r?s:n);return a.placeholder=e.placeholder,a},Bn.curryRight=function e(t,n,r){var a=Xs(t,16,s,s,s,s,s,n=r?s:n);return a.placeholder=e.placeholder,a},Bn.debounce=Ai,Bn.defaults=Co,Bn.defaultsDeep=No,Bn.defer=_i,Bn.delay=Fi,Bn.difference=Pa,Bn.differenceBy=Wa,Bn.differenceWith=Ua,Bn.drop=function(e,t,n){var r=null==e?0:e.length;return r?ts(e,(t=n||t===s?1:go(t))<0?0:t,r):[]},Bn.dropRight=function(e,t,n){var r=null==e?0:e.length;return r?ts(e,0,(t=r-(t=n||t===s?1:go(t)))<0?0:t):[]},Bn.dropRightWhile=function(e,t){return e&&e.length?hs(e,ia(t,3),!0,!0):[]},Bn.dropWhile=function(e,t){return e&&e.length?hs(e,ia(t,3),!0):[]},Bn.fill=function(e,t,n,r){var a=null==e?0:e.length;return a?(n&&"number"!=typeof n&&ba(e,t,n)&&(n=0,r=a),function(e,t,n,r){var a=e.length;for((n=go(n))<0&&(n=-n>a?0:a+n),(r=r===s||r>a?a:go(r))<0&&(r+=a),r=n>r?0:mo(r);n<r;)e[n++]=t;return e}(e,t,n,r)):[]},Bn.filter=function(e,t){return(Gi(e)?kt:gr)(e,ia(t,3))},Bn.flatMap=function(e,t){return mr(Ii(e,t),1)},Bn.flatMapDeep=function(e,t){return mr(Ii(e,t),c)},Bn.flatMapDepth=function(e,t,n){return n=n===s?1:go(n),mr(Ii(e,t),n)},Bn.flatten=Ha,Bn.flattenDeep=function(e){return null!=e&&e.length?mr(e,c):[]},Bn.flattenDepth=function(e,t){return null!=e&&e.length?mr(e,t=t===s?1:go(t)):[]},Bn.flip=function(e){return Xs(e,512)},Bn.flow=nu,Bn.flowRight=ru,Bn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var s=e[t];r[s[0]]=s[1]}return r},Bn.functions=function(e){return null==e?[]:wr(e,_o(e))},Bn.functionsIn=function(e){return null==e?[]:wr(e,Fo(e))},Bn.groupBy=vi,Bn.initial=function(e){return null!=e&&e.length?ts(e,0,-1):[]},Bn.intersection=qa,Bn.intersectionBy=Ka,Bn.intersectionWith=Xa,Bn.invert=To,Bn.invertBy=Ro,Bn.invokeMap=wi,Bn.iteratee=au,Bn.keyBy=ki,Bn.keys=_o,Bn.keysIn=Fo,Bn.map=Ii,Bn.mapKeys=function(e,t){var n={};return t=ia(t,3),xr(e,(function(e,r,s){sr(n,t(e,r,s),e)})),n},Bn.mapValues=function(e,t){var n={};return t=ia(t,3),xr(e,(function(e,r,s){sr(n,r,t(e,r,s))})),n},Bn.matches=function(e){return zr(or(e,1))},Bn.matchesProperty=function(e,t){return Br(e,or(t,1))},Bn.memoize=Di,Bn.merge=Do,Bn.mergeWith=Oo,Bn.method=iu,Bn.methodOf=ou,Bn.mixin=uu,Bn.negate=Oi,Bn.nthArg=function(e){return e=go(e),Kr((function(t){return Wr(t,e)}))},Bn.omit=Lo,Bn.omitBy=function(e,t){return zo(e,Oi(ia(t)))},Bn.once=function(e){return Ei(2,e)},Bn.orderBy=function(e,t,n,r){return null==e?[]:(Gi(t)||(t=null==t?[]:[t]),Gi(n=r?s:n)||(n=null==n?[]:[n]),Ur(e,t,n))},Bn.over=cu,Bn.overArgs=Li,Bn.overEvery=hu,Bn.overSome=du,Bn.partial=Mi,Bn.partialRight=zi,Bn.partition=$i,Bn.pick=Mo,Bn.pickBy=zo,Bn.property=pu,Bn.propertyOf=function(e){return function(t){return null==e?s:kr(e,t)}},Bn.pull=Ja,Bn.pullAll=Za,Bn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?Gr(e,t,ia(n,2)):e},Bn.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?Gr(e,t,s,n):e},Bn.pullAt=Qa,Bn.range=fu,Bn.rangeRight=gu,Bn.rearg=Bi,Bn.reject=function(e,t){return(Gi(e)?kt:gr)(e,Oi(ia(t,3)))},Bn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,s=[],a=e.length;for(t=ia(t,3);++r<a;){var i=e[r];t(i,r,e)&&(n.push(i),s.push(r))}return Hr(e,s),n},Bn.rest=function(e,t){if("function"!=typeof e)throw new Se(a);return Kr(e,t=t===s?t:go(t))},Bn.reverse=ei,Bn.sampleSize=function(e,t,n){return t=(n?ba(e,t,n):t===s)?1:go(t),(Gi(e)?Jn:Yr)(e,t)},Bn.set=function(e,t,n){return null==e?e:Jr(e,t,n)},Bn.setWith=function(e,t,n,r){return r="function"==typeof r?r:s,null==e?e:Jr(e,t,n,r)},Bn.shuffle=function(e){return(Gi(e)?Zn:es)(e)},Bn.slice=function(e,t,n){var r=null==e?0:e.length;return r?(n&&"number"!=typeof n&&ba(e,t,n)?(t=0,n=r):(t=null==t?0:go(t),n=n===s?r:go(n)),ts(e,t,n)):[]},Bn.sortBy=Ci,Bn.sortedUniq=function(e){return e&&e.length?as(e):[]},Bn.sortedUniqBy=function(e,t){return e&&e.length?as(e,ia(t,2)):[]},Bn.split=function(e,t,n){return n&&"number"!=typeof n&&ba(e,t,n)&&(t=n=s),(n=n===s?p:n>>>0)?(e=xo(e))&&("string"==typeof t||null!=t&&!ao(t))&&!(t=os(t))&&Zt(e)?xs(an(e),0,n):e.split(t,n):[]},Bn.spread=function(e,t){if("function"!=typeof e)throw new Se(a);return t=null==t?0:bn(go(t),0),Kr((function(n){var r=n[t],s=xs(n,0,t);return r&&Nt(s,r),bt(e,this,s)}))},Bn.tail=function(e){var t=null==e?0:e.length;return t?ts(e,1,t):[]},Bn.take=function(e,t,n){return e&&e.length?ts(e,0,(t=n||t===s?1:go(t))<0?0:t):[]},Bn.takeRight=function(e,t,n){var r=null==e?0:e.length;return r?ts(e,(t=r-(t=n||t===s?1:go(t)))<0?0:t,r):[]},Bn.takeRightWhile=function(e,t){return e&&e.length?hs(e,ia(t,3),!1,!0):[]},Bn.takeWhile=function(e,t){return e&&e.length?hs(e,ia(t,3)):[]},Bn.tap=function(e,t){return t(e),e},Bn.throttle=function(e,t,n){var r=!0,s=!0;if("function"!=typeof e)throw new Se(a);return eo(n)&&(r="leading"in n?!!n.leading:r,s="trailing"in n?!!n.trailing:s),Ai(e,t,{leading:r,maxWait:t,trailing:s})},Bn.thru=pi,Bn.toArray=po,Bn.toPairs=Bo,Bn.toPairsIn=Po,Bn.toPath=function(e){return Gi(e)?Ct(e,Ma):uo(e)?[e]:Ss(La(xo(e)))},Bn.toPlainObject=yo,Bn.transform=function(e,t,n){var r=Gi(e),s=r||Ki(e)||lo(e);if(t=ia(t,4),null==n){var a=e&&e.constructor;n=s?r?new a:[]:eo(e)&&Ji(a)?Pn(je(e)):{}}return(s?xt:xr)(e,(function(e,r,s){return t(n,e,r,s)})),n},Bn.unary=function(e){return Si(e,1)},Bn.union=ti,Bn.unionBy=ni,Bn.unionWith=ri,Bn.uniq=function(e){return e&&e.length?us(e):[]},Bn.uniqBy=function(e,t){return e&&e.length?us(e,ia(t,2)):[]},Bn.uniqWith=function(e,t){return t="function"==typeof t?t:s,e&&e.length?us(e,s,t):[]},Bn.unset=function(e,t){return null==e||ls(e,t)},Bn.unzip=si,Bn.unzipWith=ai,Bn.update=function(e,t,n){return null==e?e:cs(e,t,ms(n))},Bn.updateWith=function(e,t,n,r){return r="function"==typeof r?r:s,null==e?e:cs(e,t,ms(n),r)},Bn.values=Wo,Bn.valuesIn=function(e){return null==e?[]:Gt(e,Fo(e))},Bn.without=ii,Bn.words=Zo,Bn.wrap=function(e,t){return Mi(ms(t),e)},Bn.xor=oi,Bn.xorBy=ui,Bn.xorWith=li,Bn.zip=ci,Bn.zipObject=function(e,t){return fs(e||[],t||[],er)},Bn.zipObjectDeep=function(e,t){return fs(e||[],t||[],Jr)},Bn.zipWith=hi,Bn.entries=Bo,Bn.entriesIn=Po,Bn.extend=wo,Bn.extendWith=ko,uu(Bn,Bn),Bn.add=xu,Bn.attempt=Qo,Bn.camelCase=Uo,Bn.capitalize=Vo,Bn.ceil=vu,Bn.clamp=function(e,t,n){return n===s&&(n=t,t=s),n!==s&&(n=(n=bo(n))==n?n:0),t!==s&&(t=(t=bo(t))==t?t:0),ir(bo(e),t,n)},Bn.clone=function(e){return or(e,4)},Bn.cloneDeep=function(e){return or(e,5)},Bn.cloneDeepWith=function(e,t){return or(e,5,t="function"==typeof t?t:s)},Bn.cloneWith=function(e,t){return or(e,4,t="function"==typeof t?t:s)},Bn.conformsTo=function(e,t){return null==t||ur(e,t,_o(t))},Bn.deburr=Go,Bn.defaultTo=function(e,t){return null==e||e!=e?t:e},Bn.divide=wu,Bn.endsWith=function(e,t,n){e=xo(e),t=os(t);var r=e.length,a=n=n===s?r:ir(go(n),0,r);return(n-=t.length)>=0&&e.slice(n,a)==t},Bn.eq=Pi,Bn.escape=function(e){return(e=xo(e))&&K.test(e)?e.replace(j,Yt):e},Bn.escapeRegExp=function(e){return(e=xo(e))&&ne.test(e)?e.replace(te,"\\$&"):e},Bn.every=function(e,t,n){var r=Gi(e)?wt:pr;return n&&ba(e,t,n)&&(t=s),r(e,ia(t,3))},Bn.find=mi,Bn.findIndex=Va,Bn.findKey=function(e,t){return At(e,ia(t,3),xr)},Bn.findLast=bi,Bn.findLastIndex=Ga,Bn.findLastKey=function(e,t){return At(e,ia(t,3),vr)},Bn.floor=ku,Bn.forEach=yi,Bn.forEachRight=xi,Bn.forIn=function(e,t){return null==e?e:br(e,ia(t,3),Fo)},Bn.forInRight=function(e,t){return null==e?e:yr(e,ia(t,3),Fo)},Bn.forOwn=function(e,t){return e&&xr(e,ia(t,3))},Bn.forOwnRight=function(e,t){return e&&vr(e,ia(t,3))},Bn.get=So,Bn.gt=Wi,Bn.gte=Ui,Bn.has=function(e,t){return null!=e&&pa(e,t,Nr)},Bn.hasIn=Eo,Bn.head=ja,Bn.identity=su,Bn.includes=function(e,t,n,r){e=ji(e)?e:Wo(e),n=n&&!r?go(n):0;var s=e.length;return n<0&&(n=bn(s+n,0)),oo(e)?n<=s&&e.indexOf(t,n)>-1:!!s&&Ft(e,t,n)>-1},Bn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var s=null==n?0:go(n);return s<0&&(s=bn(r+s,0)),Ft(e,t,s)},Bn.inRange=function(e,t,n){return t=fo(t),n===s?(n=t,t=0):n=fo(n),function(e,t,n){return e>=yn(t,n)&&e<bn(t,n)}(e=bo(e),t,n)},Bn.invoke=Ao,Bn.isArguments=Vi,Bn.isArray=Gi,Bn.isArrayBuffer=Hi,Bn.isArrayLike=ji,Bn.isArrayLikeObject=qi,Bn.isBoolean=function(e){return!0===e||!1===e||to(e)&&$r(e)==b},Bn.isBuffer=Ki,Bn.isDate=Xi,Bn.isElement=function(e){return to(e)&&1===e.nodeType&&!so(e)},Bn.isEmpty=function(e){if(null==e)return!0;if(ji(e)&&(Gi(e)||"string"==typeof e||"function"==typeof e.splice||Ki(e)||lo(e)||Vi(e)))return!e.length;var t=da(e);if(t==k||t==S)return!e.size;if(wa(e))return!Or(e).length;for(var n in e)if(Fe.call(e,n))return!1;return!0},Bn.isEqual=function(e,t){return Ar(e,t)},Bn.isEqualWith=function(e,t,n){var r=(n="function"==typeof n?n:s)?n(e,t):s;return r===s?Ar(e,t,s,n):!!r},Bn.isError=Yi,Bn.isFinite=function(e){return"number"==typeof e&&fn(e)},Bn.isFunction=Ji,Bn.isInteger=Zi,Bn.isLength=Qi,Bn.isMap=no,Bn.isMatch=function(e,t){return e===t||_r(e,t,ua(t))},Bn.isMatchWith=function(e,t,n){return n="function"==typeof n?n:s,_r(e,t,ua(t),n)},Bn.isNaN=function(e){return ro(e)&&e!=+e},Bn.isNative=function(e){if(va(e))throw new we("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Fr(e)},Bn.isNil=function(e){return null==e},Bn.isNull=function(e){return null===e},Bn.isNumber=ro,Bn.isObject=eo,Bn.isObjectLike=to,Bn.isPlainObject=so,Bn.isRegExp=ao,Bn.isSafeInteger=function(e){return Zi(e)&&e>=-9007199254740991&&e<=h},Bn.isSet=io,Bn.isString=oo,Bn.isSymbol=uo,Bn.isTypedArray=lo,Bn.isUndefined=function(e){return e===s},Bn.isWeakMap=function(e){return to(e)&&da(e)==R},Bn.isWeakSet=function(e){return to(e)&&"[object WeakSet]"==$r(e)},Bn.join=function(e,t){return null==e?"":gn.call(e,t)},Bn.kebabCase=Ho,Bn.last=Ya,Bn.lastIndexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var a=r;return n!==s&&(a=(a=go(n))<0?bn(r+a,0):yn(a,r-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,a):_t(e,Ot,a,!0)},Bn.lowerCase=jo,Bn.lowerFirst=qo,Bn.lt=co,Bn.lte=ho,Bn.max=function(e){return e&&e.length?fr(e,su,Cr):s},Bn.maxBy=function(e,t){return e&&e.length?fr(e,ia(t,2),Cr):s},Bn.mean=function(e){return Lt(e,su)},Bn.meanBy=function(e,t){return Lt(e,ia(t,2))},Bn.min=function(e){return e&&e.length?fr(e,su,Lr):s},Bn.minBy=function(e,t){return e&&e.length?fr(e,ia(t,2),Lr):s},Bn.stubArray=mu,Bn.stubFalse=bu,Bn.stubObject=function(){return{}},Bn.stubString=function(){return""},Bn.stubTrue=function(){return!0},Bn.multiply=Iu,Bn.nth=function(e,t){return e&&e.length?Wr(e,go(t)):s},Bn.noConflict=function(){return at._===this&&(at._=ze),this},Bn.noop=lu,Bn.now=Ni,Bn.pad=function(e,t,n){e=xo(e);var r=(t=go(t))?sn(e):0;if(!t||r>=t)return e;var s=(t-r)/2;return Us(hn(s),n)+e+Us(cn(s),n)},Bn.padEnd=function(e,t,n){e=xo(e);var r=(t=go(t))?sn(e):0;return t&&r<t?e+Us(t-r,n):e},Bn.padStart=function(e,t,n){e=xo(e);var r=(t=go(t))?sn(e):0;return t&&r<t?Us(t-r,n)+e:e},Bn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),vn(xo(e).replace(re,""),t||0)},Bn.random=function(e,t,n){if(n&&"boolean"!=typeof n&&ba(e,t,n)&&(t=n=s),n===s&&("boolean"==typeof t?(n=t,t=s):"boolean"==typeof e&&(n=e,e=s)),e===s&&t===s?(e=0,t=1):(e=fo(e),t===s?(t=e,e=0):t=fo(t)),e>t){var r=e;e=t,t=r}if(n||e%1||t%1){var a=wn();return yn(e+a*(t-e+tt("1e-"+((a+"").length-1))),t)}return jr(e,t)},Bn.reduce=function(e,t,n){var r=Gi(e)?St:Bt,s=arguments.length<3;return r(e,ia(t,4),n,s,hr)},Bn.reduceRight=function(e,t,n){var r=Gi(e)?Et:Bt,s=arguments.length<3;return r(e,ia(t,4),n,s,dr)},Bn.repeat=function(e,t,n){return t=(n?ba(e,t,n):t===s)?1:go(t),qr(xo(e),t)},Bn.replace=function(){var e=arguments,t=xo(e[0]);return e.length<3?t:t.replace(e[1],e[2])},Bn.result=function(e,t,n){var r=-1,a=(t=bs(t,e)).length;for(a||(a=1,e=s);++r<a;){var i=null==e?s:e[Ma(t[r])];i===s&&(r=a,i=n),e=Ji(i)?i.call(e):i}return e},Bn.round=$u,Bn.runInContext=e,Bn.sample=function(e){return(Gi(e)?Yn:Xr)(e)},Bn.size=function(e){if(null==e)return 0;if(ji(e))return oo(e)?sn(e):e.length;var t=da(e);return t==k||t==S?e.size:Or(e).length},Bn.snakeCase=Ko,Bn.some=function(e,t,n){var r=Gi(e)?Tt:ns;return n&&ba(e,t,n)&&(t=s),r(e,ia(t,3))},Bn.sortedIndex=function(e,t){return rs(e,t)},Bn.sortedIndexBy=function(e,t,n){return ss(e,t,ia(n,2))},Bn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=rs(e,t);if(r<n&&Pi(e[r],t))return r}return-1},Bn.sortedLastIndex=function(e,t){return rs(e,t,!0)},Bn.sortedLastIndexBy=function(e,t,n){return ss(e,t,ia(n,2),!0)},Bn.sortedLastIndexOf=function(e,t){if(null!=e&&e.length){var n=rs(e,t,!0)-1;if(Pi(e[n],t))return n}return-1},Bn.startCase=Xo,Bn.startsWith=function(e,t,n){return e=xo(e),n=null==n?0:ir(go(n),0,e.length),t=os(t),e.slice(n,n+t.length)==t},Bn.subtract=Cu,Bn.sum=function(e){return e&&e.length?Pt(e,su):0},Bn.sumBy=function(e,t){return e&&e.length?Pt(e,ia(t,2)):0},Bn.template=function(e,t,n){var r=Bn.templateSettings;n&&ba(e,t,n)&&(t=s),e=xo(e),t=ko({},t,r,Ys);var a,i,o=ko({},t.imports,r.imports,Ys),u=_o(o),l=Gt(o,u),c=0,h=t.interpolate||xe,d="__p += '",p=Ce((t.escape||xe).source+"|"+h.source+"|"+(h===J?he:xe).source+"|"+(t.evaluate||xe).source+"|$","g"),f="//# sourceURL="+(Fe.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Je+"]")+"\n";e.replace(p,(function(t,n,r,s,o,u){return r||(r=s),d+=e.slice(c,u).replace(ve,Jt),n&&(a=!0,d+="' +\n__e("+n+") +\n'"),o&&(i=!0,d+="';\n"+o+";\n__p += '"),r&&(d+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),c=u+t.length,t})),d+="';\n";var g=Fe.call(t,"variable")&&t.variable;if(g){if(le.test(g))throw new we("Invalid `variable` option passed into `_.template`")}else d="with (obj) {\n"+d+"\n}\n";d=(i?d.replace(U,""):d).replace(V,"$1").replace(G,"$1;"),d="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(a?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+d+"return __p\n}";var m=Qo((function(){return ke(u,f+"return "+d).apply(s,l)}));if(m.source=d,Yi(m))throw m;return m},Bn.times=function(e,t){if((e=go(e))<1||e>h)return[];var n=p,r=yn(e,p);t=ia(t),e-=p;for(var s=Wt(r,t);++n<e;)t(n);return s},Bn.toFinite=fo,Bn.toInteger=go,Bn.toLength=mo,Bn.toLower=function(e){return xo(e).toLowerCase()},Bn.toNumber=bo,Bn.toSafeInteger=function(e){return e?ir(go(e),-9007199254740991,h):0===e?e:0},Bn.toString=xo,Bn.toUpper=function(e){return xo(e).toUpperCase()},Bn.trim=function(e,t,n){if((e=xo(e))&&(n||t===s))return Ut(e);if(!e||!(t=os(t)))return e;var r=an(e),a=an(t);return xs(r,jt(r,a),qt(r,a)+1).join("")},Bn.trimEnd=function(e,t,n){if((e=xo(e))&&(n||t===s))return e.slice(0,on(e)+1);if(!e||!(t=os(t)))return e;var r=an(e);return xs(r,0,qt(r,an(t))+1).join("")},Bn.trimStart=function(e,t,n){if((e=xo(e))&&(n||t===s))return e.replace(re,"");if(!e||!(t=os(t)))return e;var r=an(e);return xs(r,jt(r,an(t))).join("")},Bn.truncate=function(e,t){var n=30,r="...";if(eo(t)){var a="separator"in t?t.separator:a;n="length"in t?go(t.length):n,r="omission"in t?os(t.omission):r}var i=(e=xo(e)).length;if(Zt(e)){var o=an(e);i=o.length}if(n>=i)return e;var u=n-sn(r);if(u<1)return r;var l=o?xs(o,0,u).join(""):e.slice(0,u);if(a===s)return l+r;if(o&&(u+=l.length-u),ao(a)){if(e.slice(u).search(a)){var c,h=l;for(a.global||(a=Ce(a.source,xo(de.exec(a))+"g")),a.lastIndex=0;c=a.exec(h);)var d=c.index;l=l.slice(0,d===s?u:d)}}else if(e.indexOf(os(a),u)!=u){var p=l.lastIndexOf(a);p>-1&&(l=l.slice(0,p))}return l+r},Bn.unescape=function(e){return(e=xo(e))&&q.test(e)?e.replace(H,un):e},Bn.uniqueId=function(e){var t=++De;return xo(e)+t},Bn.upperCase=Yo,Bn.upperFirst=Jo,Bn.each=yi,Bn.eachRight=xi,Bn.first=ja,uu(Bn,(yu={},xr(Bn,(function(e,t){Fe.call(Bn.prototype,t)||(yu[t]=e)})),yu),{chain:!1}),Bn.VERSION="4.17.21",xt(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){Bn[e].placeholder=Bn})),xt(["drop","take"],(function(e,t){Vn.prototype[e]=function(n){n=n===s?1:bn(go(n),0);var r=this.__filtered__&&!t?new Vn(this):this.clone();return r.__filtered__?r.__takeCount__=yn(n,r.__takeCount__):r.__views__.push({size:yn(n,p),type:e+(r.__dir__<0?"Right":"")}),r},Vn.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),xt(["filter","map","takeWhile"],(function(e,t){var n=t+1,r=1==n||3==n;Vn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:ia(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),xt(["head","last"],(function(e,t){var n="take"+(t?"Right":"");Vn.prototype[e]=function(){return this[n](1).value()[0]}})),xt(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");Vn.prototype[e]=function(){return this.__filtered__?new Vn(this):this[n](1)}})),Vn.prototype.compact=function(){return this.filter(su)},Vn.prototype.find=function(e){return this.filter(e).head()},Vn.prototype.findLast=function(e){return this.reverse().find(e)},Vn.prototype.invokeMap=Kr((function(e,t){return"function"==typeof e?new Vn(this):this.map((function(n){return Tr(n,e,t)}))})),Vn.prototype.reject=function(e){return this.filter(Oi(ia(e)))},Vn.prototype.slice=function(e,t){e=go(e);var n=this;return n.__filtered__&&(e>0||t<0)?new Vn(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),t!==s&&(n=(t=go(t))<0?n.dropRight(-t):n.take(t-e)),n)},Vn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Vn.prototype.toArray=function(){return this.take(p)},xr(Vn.prototype,(function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),a=Bn[r?"take"+("last"==t?"Right":""):t],i=r||/^find/.test(t);a&&(Bn.prototype[t]=function(){var t=this.__wrapped__,o=r?[1]:arguments,u=t instanceof Vn,l=o[0],c=u||Gi(t),h=function(e){var t=a.apply(Bn,Nt([e],o));return r&&d?t[0]:t};c&&n&&"function"==typeof l&&1!=l.length&&(u=c=!1);var d=this.__chain__,p=!!this.__actions__.length,f=i&&!d,g=u&&!p;if(!i&&c){t=g?t:new Vn(this);var m=e.apply(t,o);return m.__actions__.push({func:pi,args:[h],thisArg:s}),new Un(m,d)}return f&&g?e.apply(this,o):(m=this.thru(h),f?r?m.value()[0]:m.value():m)})})),xt(["pop","push","shift","sort","splice","unshift"],(function(e){var t=Ee[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",r=/^(?:pop|shift)$/.test(e);Bn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var s=this.value();return t.apply(Gi(s)?s:[],e)}return this[n]((function(n){return t.apply(Gi(n)?n:[],e)}))}})),xr(Vn.prototype,(function(e,t){var n=Bn[t];if(n){var r=n.name+"";Fe.call(Rn,r)||(Rn[r]=[]),Rn[r].push({name:t,func:n})}})),Rn[zs(s,2).name]=[{name:"wrapper",func:s}],Vn.prototype.clone=function(){var e=new Vn(this.__wrapped__);return e.__actions__=Ss(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=Ss(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=Ss(this.__views__),e},Vn.prototype.reverse=function(){if(this.__filtered__){var e=new Vn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Vn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=Gi(e),r=t<0,s=n?e.length:0,a=function(e,t,n){for(var r=-1,s=n.length;++r<s;){var a=n[r],i=a.size;switch(a.type){case"drop":e+=i;break;case"dropRight":t-=i;break;case"take":t=yn(t,e+i);break;case"takeRight":e=bn(e,t-i)}}return{start:e,end:t}}(0,s,this.__views__),i=a.start,o=a.end,u=o-i,l=r?o:i-1,c=this.__iteratees__,h=c.length,d=0,p=yn(u,this.__takeCount__);if(!n||!r&&s==u&&p==u)return ds(e,this.__actions__);var f=[];e:for(;u--&&d<p;){for(var g=-1,m=e[l+=t];++g<h;){var b=c[g],y=b.iteratee,x=b.type,v=y(m);if(2==x)m=v;else if(!v){if(1==x)continue e;break e}}f[d++]=m}return f},Bn.prototype.at=fi,Bn.prototype.chain=function(){return di(this)},Bn.prototype.commit=function(){return new Un(this.value(),this.__chain__)},Bn.prototype.next=function(){this.__values__===s&&(this.__values__=po(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?s:this.__values__[this.__index__++]}},Bn.prototype.plant=function(e){for(var t,n=this;n instanceof Wn;){var r=Ba(n);r.__index__=0,r.__values__=s,t?a.__wrapped__=r:t=r;var a=r;n=n.__wrapped__}return a.__wrapped__=e,t},Bn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Vn){var t=e;return this.__actions__.length&&(t=new Vn(this)),(t=t.reverse()).__actions__.push({func:pi,args:[ei],thisArg:s}),new Un(t,this.__chain__)}return this.thru(ei)},Bn.prototype.toJSON=Bn.prototype.valueOf=Bn.prototype.value=function(){return ds(this.__wrapped__,this.__actions__)},Bn.prototype.first=Bn.prototype.head,it&&(Bn.prototype[it]=function(){return this}),Bn}();at._=ln,(r=function(){return ln}.call(t,n,t,e))===s||(e.exports=r)}.call(this)},377:function(e,t,n){var r=n(832),s=n(652),a=n(801),i=n(30),o=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:function(e,t,n){var r;!function(s,a){var i,o=(0,eval)("this"),u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*u+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(42)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},306:function(e,t){"use strict";var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.tensorAsBase64=t.tensorAsBuffer=void 0,t.tensorAsBuffer=function(e){return n(void 0,void 0,void 0,(function(){var t,n,s,a,i,o,u,l,c;return r(this,(function(r){switch(r.label){case 0:return t=e.shape,n=t[0],s=t[1],a=new Uint8ClampedArray(s*n*4),[4,e.data()];case 1:for(i=r.sent(),o=0,u=0;u<n;u++)for(l=0;l<s;l++)a[c=4*(u*s+l)]=i[o],a[c+1]=i[o+1],a[c+2]=i[o+2],a[c+3]=255,o+=3;return[2,a]}}))}))},t.tensorAsBase64=function(e){return n(void 0,void 0,void 0,(function(){var n,s,a,i,o,u;return r(this,(function(r){switch(r.label){case 0:return n=e.shape,s=n[0],a=n[1],[4,t.tensorAsBuffer(e)];case 1:return i=r.sent(),(o=new ImageData(a,s)).data.set(i),(u=document.createElement("canvas")).width=a,u.height=s,u.getContext("2d").putImageData(o,0,0),[2,u.toDataURL()]}}))}))},t.default=t.tensorAsBase64},914:function(){},410:function(){},628:function(){},778:function(){},601:function(){},792:function(){},42:function(){}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e},function(){var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e}(),function(){"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:function(){return Ls},computeFlatOffset:function(){return Xs},computeOutShape:function(){return zs},getNormalizedAxes:function(){return Us},isSliceContinous:function(){return Ks},maskToAxes:function(){return Ms},parseSliceParams:function(){return Ys},sliceInfo:function(){return Js},startForAxis:function(){return js},startIndicesWithElidedDims:function(){return Vs},stopForAxis:function(){return qs},stopIndicesWithElidedDims:function(){return Gs},stridesForAxis:function(){return Hs},stridesWithElidedDims:function(){return Bs}});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:function(){return ol},computeOutShape:function(){return il},segOpComputeOptimalWindowSize:function(){return al}});var r={};n.r(r),n.d(r,{ERF_A1:function(){return Vu},ERF_A2:function(){return Gu},ERF_A3:function(){return Hu},ERF_A4:function(){return ju},ERF_A5:function(){return qu},ERF_P:function(){return Uu},PARALLELIZE_THRESHOLD:function(){return Eu},SELU_SCALE:function(){return Wu},SELU_SCALEALPHA:function(){return Pu},applyActivation:function(){return Ao},assertAndGetBroadcastShape:function(){return ei},assertAxesAreInnerMostDims:function(){return Ti},assertParamsConsistent:function(){return Nu},assignToTypedArray:function(){return tl},axesAreInnerMostDims:function(){return Ci},calculateShapes:function(){return Bu},castTensor:function(){return ul},combineLocations:function(){return Ni},complexWithEvenIndex:function(){return Zu},complexWithOddIndex:function(){return Qu},computeConv2DInfo:function(){return xa},computeConv3DInfo:function(){return va},computeDefaultPad:function(){return wa},computeDilation2DInfo:function(){return ma},computeOptimalWindowSize:function(){return Tu},computeOutAndReduceShapes:function(){return Si},computeOutShape:function(){return Su},computePool2DInfo:function(){return ba},computePool3DInfo:function(){return ya},convertConv2DDataFormat:function(){return Ea},eitherStridesOrDilationsAreOne:function(){return Sa},expandShapeToKeepDim:function(){return Ei},exponent:function(){return rl},exponents:function(){return nl},fromStringArrayToUint8:function(){return hl},fromUint8ToStringArray:function(){return cl},getAxesPermutation:function(){return Ri},getBroadcastDims:function(){return Za},getComplexWithIndex:function(){return el},getFusedBiasGradient:function(){return Ro},getFusedDyActivation:function(){return To},getImageCenter:function(){return Ru},getInnerMostAxes:function(){return _i},getPermuted:function(){return _u},getReductionAxes:function(){return Qa},getReshaped:function(){return Au},getReshapedPermuted:function(){return Fu},getSliceBeginCoords:function(){return Du},getSliceSize:function(){return Ou},getUndoAxesPermutation:function(){return Ai},log:function(){return Xu},mergeRealAndImagArrays:function(){return Yu},prepareAndValidate:function(){return Lu},prepareSplitSize:function(){return sl},reshapeTensor:function(){return ll},segment_util:function(){return t},shouldFuse:function(){return _o},slice_util:function(){return e},splitRealAndImagArrays:function(){return Ju},tupleValuesAreOne:function(){return Na},upcastType:function(){return Ir},validateInput:function(){return zu},validateUpdateShape:function(){return Mu},warn:function(){return Ku}});var s={};n.r(s),n.d(s,{addImpl:function(){return Dy},bincountImpl:function(){return Nx},bincountReduceImpl:function(){return Sx},ceilImpl:function(){return Rx},concatImpl:function(){return Lx},expImpl:function(){return kv},expm1Impl:function(){return Sv},floorImpl:function(){return Kv},gatherV2Impl:function(){return rw},greaterImpl:function(){return aw},lessImpl:function(){return yw},linSpaceImpl:function(){return $w},logImpl:function(){return Nw},maxImpl:function(){return Ww},maximumImpl:function(){return Gw},minimumImpl:function(){return nk},multiplyImpl:function(){return Rv},negImpl:function(){return pk},notEqualImpl:function(){return wk},prodImpl:function(){return Dk},rangeImpl:function(){return Lk},rsqrtImpl:function(){return Kk},simpleAbsImpl:function(){return Vy},sliceImpl:function(){return kx},squaredDifferenceImpl:function(){return wI},stridedSliceImpl:function(){return NI},subImpl:function(){return Mv},tileImpl:function(){return AI},topKImpl:function(){return _I},transposeImpl:function(){return Yy},uniqueImpl:function(){return FI}});var a=n(486);class i{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{decComplexRef(e){}time(e){return u("time")}read(e){return u("read")}readSync(e){return u("readSync")}numDataIds(){return u("numDataIds")}disposeData(e){return u("disposeData")}write(e,t,n){return u("write")}move(e,t,n,r){return u("move")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return u("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){return u("fusedBatchMatMul")}slice(e,t,n){return u("slice")}stridedSlice(e,t,n,r){return u("stridedSlice")}unstack(e,t){return u("unstack")}reverse(e,t){return u("reverse")}concat(e,t){return u("concat")}neg(e){return u("neg")}add(e,t){return u("add")}addN(e){return u("addN")}subtract(e,t){return u("subtract")}multiply(e,t){return u("multiply")}realDivide(e,t){return u("realDivide")}floorDiv(e,t){return u("floorDiv")}sum(e,t){return u("sum")}prod(e,t){return u("prod")}unsortedSegmentSum(e,t,n){return u("unsortedSegmentSum")}argMin(e,t){return u("argMin")}argMax(e,t){return u("argMax")}equal(e,t){return u("equal")}notEqual(e,t){return u("notEqual")}less(e,t){return u("less")}lessEqual(e,t){return u("lessEqual")}greater(e,t){return u("greater")}greaterEqual(e,t){return u("greaterEqual")}logicalNot(e){return u("logicalNot")}logicalAnd(e,t){return u("logicalAnd")}logicalOr(e,t){return u("logicalOr")}where(e){return u("where")}select(e,t,n){return u("select")}topk(e,t,n){return u("topk")}min(e,t){return u("min")}minimum(e,t){return u("minimum")}mod(e,t){return u("mod")}max(e,t){return u("max")}maximum(e,t){return u("maximum")}all(e,t){return u("all")}any(e,t){return u("any")}squaredDifference(e,t){return u("squaredDifference")}ceil(e){return u("ceil")}floor(e){return u("floor")}round(e){return u("round")}sign(e){return u("sign")}isNaN(e){return u("isNaN")}isInf(e){return u("isInf")}isFinite(e){return u("isFinite")}pow(e,t){return u("pow")}exp(e){return u("exp")}expm1(e){return u("expm1")}softmax(e,t){return u("softmax")}log(e){return u("log")}log1p(e){return u("log1p")}sqrt(e){return u("sqrt")}rsqrt(e){return u("rsqrt")}square(e){return u("square")}reciprocal(e){return u("reciprocal")}relu(e){return u("relu")}relu6(e){return u("relu6")}prelu(e,t){return u("prelu")}elu(e){return u("elu")}eluDer(e,t){return u("eluDer")}selu(e){return u("selu")}int(e){return u("int")}clip(e,t,n){return u("clip")}abs(e){return u("abs")}complexAbs(e){return u("complexAbs")}sigmoid(e){return u("sigmoid")}softplus(e){return u("softplus")}sin(e){return u("sin")}cos(e){return u("cos")}tan(e){return u("tan")}asin(e){return u("asin")}acos(e){return u("acos")}atan(e){return u("atan")}atan2(e,t){return u("atan2")}sinh(e){return u("sinh")}cosh(e){return u("cosh")}tanh(e){return u("tanh")}asinh(e){return u("asinh")}acosh(e){return u("acosh")}atanh(e){return u("atanh")}erf(e){return u("erf")}step(e,t){return u("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return u("fusedConv2d")}conv2d(e,t,n){return u("conv2d")}conv2dDerInput(e,t,n){return u("conv2dDerInput")}conv2dDerFilter(e,t,n){return u("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return u("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return u("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return u("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return u("depthwiseConv2DDerFilter")}conv3d(e,t,n){return u("conv3d")}conv3dDerInput(e,t,n){return u("conv3dDerInput")}conv3dDerFilter(e,t,n){return u("conv3dDerFilter")}maxPool(e,t){return u("maxPool")}maxPoolBackprop(e,t,n,r){return u("maxPoolBackprop")}avgPool(e,t){return u("avgPool")}avgPoolBackprop(e,t,n){return u("avgPoolBackprop")}avgPool3d(e,t){return u("avgPool3d")}avgPool3dBackprop(e,t,n){return u("avgPool3dBackprop")}maxPool3d(e,t){return u("maxPool3d")}maxPool3dBackprop(e,t,n,r){return u("maxPool3dBackprop")}reshape(e,t){return u("reshape")}cast(e,t){return u("cast")}tile(e,t){return u("tile")}pad(e,t,n){return u("pad")}transpose(e,t){return u("transpose")}gather(e,t,n,r=0){return u("gather")}gatherND(e,t){return u("gatherND")}scatterND(e,t,n){return u("scatterND")}batchToSpaceND(e,t,n){return u("batchToSpaceND")}spaceToBatchND(e,t,n){return u("spaceToBatchND")}resizeBilinear(e,t,n,r,s){return u("resizeBilinear")}resizeBilinearBackprop(e,t,n){return u("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r,s){return u("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return u("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,a){return u("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return u("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,a,i){return u("LRNGrad")}multinomial(e,t,n,r){return u("multinomial")}oneHot(e,t,n,r){return u("oneHot")}cumsum(e,t,n,r){return u("cumsum")}nonMaxSuppression(e,t,n,r,s){return u("nonMaxSuppression")}fft(e){return u("fft")}ifft(e){return u("ifft")}complex(e,t){return u("complex")}real(e){return u("real")}imag(e){return u("imag")}cropAndResize(e,t,n,r,s,a){return u("cropAndResize")}depthToSpace(e,t,n){return u("depthToSpace")}split(e,t,n){return u("split")}sparseToDense(e,t,n,r){return u("sparseToDense")}diag(e){return u("diag")}fill(e,t,n){return u("fill")}onesLike(e){return u("onesLike")}zerosLike(e){return u("zerosLike")}linspace(e,t,n){return u("linspace")}dispose(){return u("dispose")}}function u(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function c(e,t,n){return Math.max(e,Math.min(t,n))}function h(e){return e%2==0?e:e+1}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){d(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function f(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||E(e)&&!n)for(let r=0;r<e.length;++r)g(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function w(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function k(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function I(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function $(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function S(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function E(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function T(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){return"string"==typeof e||e instanceof String}function A(e){return"number"==typeof e}function _(e){return Array.isArray(e)?_(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":A(e)?"float32":R(e)?"string":"boolean"==typeof e?"bool":"float32"}function F(e){return!!(e&&e.constructor&&e.call&&e.apply)}function D(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function O(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function L(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t));for(let t=0;t<s;t++)r[t]=L(e+t*i,a,n)}return r}function M(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return L(0,e,t)}function z(e,t){const n=B(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function B(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function P(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return M(e,new Float32Array(n));if("int32"===t)return M(e,new Int32Array(n));if("bool"===t)return M(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function W(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function U(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function V(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function G(e){return e&&e.then&&"function"==typeof e.then}class H{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(G(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function j(){return K}let q,K=null;function X(){if(null==q){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}q=e}return q}function Y(e,t){const n=function(){const e=X();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const J="Abs",Z="Acos",Q="Acosh",ee="Add",te="AddN",ne="All",re="Any",se="ArgMax",ae="ArgMin",ie="Asin",oe="Asinh",ue="Atan",le="Atanh",ce="Atan2",he="AvgPool",de="AvgPoolGrad",pe="AvgPool3D",fe="AvgPool3DGrad",ge="BatchMatMul",me="BatchToSpaceND",be="Bincount",ye="Cast",xe="Ceil",ve="ClipByValue",we="Complex",ke="ComplexAbs",Ie="Concat",$e="Conv2D",Ce="Conv2DBackpropFilter",Ne="Conv2DBackpropInput",Se="Conv3D",Ee="Conv3DBackpropFilterV2",Te="Conv3DBackpropInputV2",Re="Cos",Ae="Cosh",_e="Cumsum",Fe="CropAndResize",De="DenseBincount",Oe="DepthToSpace",Le="DepthwiseConv2dNative",Me="DepthwiseConv2dNativeBackpropFilter",ze="DepthwiseConv2dNativeBackpropInput",Be="Diag",Pe="Dilation2D",We="Dilation2DBackpropInput",Ue="Dilation2DBackpropFilter",Ve="RealDiv",Ge="Elu",He="EluGrad",je="Erf",qe="Equal",Ke="Exp",Xe="ExpandDims",Ye="Expm1",Je="FFT",Ze="Fill",Qe="FlipLeftRight",et="Floor",tt="FloorDiv",nt="FusedBatchNorm",rt="GatherV2",st="GatherNd",at="Greater",it="GreaterEqual",ot="Identity",ut="IFFT",lt="Imag",ct="IsFinite",ht="IsInf",dt="IsNan",pt="LeakyRelu",ft="Less",gt="LessEqual",mt="LinSpace",bt="Log",yt="Log1p",xt="LogicalAnd",vt="LogicalNot",wt="LogicalOr",kt="LRN",It="LRNGrad",$t="Max",Ct="Maximum",Nt="MaxPool",St="MaxPoolGrad",Et="MaxPool3D",Tt="MaxPool3DGrad",Rt="MaxPoolWithArgmax",At="Mean",_t="Min",Ft="Minimum",Dt="MirrorPad",Ot="Mod",Lt="Multinomial",Mt="Multiply",zt="Neg",Bt="NotEqual",Pt="NonMaxSuppressionV3",Wt="NonMaxSuppressionV4",Ut="NonMaxSuppressionV5",Vt="OnesLike",Gt="OneHot",Ht="Pack",jt="PadV2",qt="Pow",Kt="Prelu",Xt="Prod",Yt="Range",Jt="Real",Zt="Reciprocal",Qt="Relu",en="Reshape",tn="ResizeNearestNeighbor",nn="ResizeNearestNeighborGrad",rn="ResizeBilinear",sn="ResizeBilinearGrad",an="Relu6",on="Reverse",un="Round",ln="Rsqrt",cn="ScatterNd",hn="Select",dn="Selu",pn="Slice",fn="Sin",gn="Sinh",mn="Sign",bn="Sigmoid",yn="Softplus",xn="Sqrt",vn="Sum",wn="SpaceToBatchND",kn="SplitV",In="Softmax",$n="SquaredDifference",Cn="Square",Nn="Sub",Sn="SparseToDense",En="StridedSlice",Tn="Tan",Rn="Tanh",An="Tile",_n="TopK",Fn="Transpose",Dn="Unique",On="Unpack",Ln="UnsortedSegmentSum",Mn="ZerosLike",zn="Step",Bn="FromPixels",Pn="RotateWithOffset",Wn="_FusedMatMul",Un="FusedConv2D",Vn="FusedDepthwiseConv2D",Gn=Y("kernelRegistry",(()=>new Map)),Hn=Y("gradRegistry",(()=>new Map));function jn(e,t){const n=Jn(e,t);return Gn.get(n)}function qn(e){return Hn.get(e)}function Kn(e){const t=Gn.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Xn(e){const{kernelName:t,backendName:n}=e,r=Jn(t,n);Gn.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Gn.set(r,e)}function Yn(e){const{kernelName:t}=e;Hn.has(t)&&j().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Hn.set(t,e)}function Jn(e,t){return`${t}_${e}`}class Zn{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new er)}profileKernel(e,t,n){let r;const s=this.backendTimer.time((()=>{r=n()}));if(j().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Qn(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Qn(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class er{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?v(`${r}ms`,9):r.error,o=v(e,25),u=t.rank,l=t.size,c=v(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function tr(e,t,n,r){const s=O(t),a=function(e,t,n,r){const s=m(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?ar(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],nr(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=sr(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function nr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:R(e)?`'${e}'`:"bool"===n?rr(e):parseFloat(e.toFixed(7)).toString(),v(r,t)}function rr(e){return 0===e?"false":"true"}function sr(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[nr(ar(e)[0],0,n)]:"bool"===n?[rr(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ar(r),a=ar(a)),["["+r.map(((e,t)=>nr(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>nr(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ar(e):Array.from(e)).map(((e,t)=>nr(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...sr(e.slice(r,a),l,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...sr(e.slice(r,a),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...sr(e.slice(r,a),l,n,c,s,t===o-1))}const p=2===u?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function ar(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function ir(e,t){return"string"===t?lr(e):or([e],t)}function or(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=g(e)),j().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ur(){return j().platform.now()}function lr(e,t="utf-8"){return t=t||"utf-8",j().platform.encode(e,t)}function cr(e,t="utf-8"){return t=t||"utf-8",j().platform.decode(e,t)}class hr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=m(e),null!=n){const e=n.length;d(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||N(t,this.size),this.strides=O(e)}set(e,...t){0===t.length&&(t=[0]),d(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return dr().makeTensor(this.values,this.shape,this.dtype)}}let dr=null,pr=null,fr=null;class gr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=m(e),this.strides=O(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return pr.buffer(this.shape,this.dtype,e)}bufferSync(){return pr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return M(this.shape,e)}arraySync(){return M(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=dr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>cr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=dr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>cr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await dr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(dr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return pr.print(this,e)}clone(){return this.throwIfDisposed(),pr.clone(this)}toString(e=!1){return tr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),pr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),dr().makeVariable(this,e,t,n)}}Object.defineProperty(gr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class mr extends gr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!b(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);dr().disposeTensor(this),this.dataId=e.dataId,dr().incRef(this,null)}dispose(){dr().disposeVariable(this),this.isDisposedInternal=!0}}var br,yr,xr,vr,wr;Object.defineProperty(mr,Symbol.hasInstance,{value:e=>e instanceof gr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(br||(br={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(yr||(yr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(xr||(xr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(vr||(vr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(wr||(wr={}));const kr={float32:vr,int32:yr,bool:xr,complex64:wr};function Ir(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return kr[e][t]}function $r(e){return Ir(e,"int32")}function Cr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Ir(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Nr(e,t){return t.some((t=>t.id===e.id))}function Sr(e){const t=[];return Er(e,t,new Set),t}function Er(e,t,n){if(null==e)return;if(e instanceof gr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Er(r,t,n))}}class Tr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Rr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Tr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Zn(this.backendInstance),!0}setupRegisteredKernels(){Kn(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Kn(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof o||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Rr.nextTensorId++}nextVariableId(){return Rr.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return _r.runKernelFunc((n=>n.cast(e,t)),n,null,ye,r)}})),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,a,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const p=jn(r,this.backendName);let f,g;if(null!=p)d=()=>{const e=this.backend.numDataIds();f=p.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(l){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==i&&(i=[]);const t=o.filter(((e,t)=>i[t]));e=(a||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const t=e=>{l&&(u=e.map((e=>this.keep(this.clone(e)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,t,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),o=g.outputs):o=d()})),l&&this.addTapeNode(r,t,o,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=qn(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(d(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&R(e[0])&&(s=e.map((e=>lr(e))));const a=r.write(s,t,n),i=new gr(t,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new gr(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new mr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*T(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof mr||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=qn(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=B(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Sr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(d(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));d(s instanceof gr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=z(m(e),"float32");return _r.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!b(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Fr);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return d(F(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;d(t.every((e=>e instanceof gr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,s)=>(n=e(...t,s),d(n.value instanceof gr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),d(F(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];d(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),d(a.every((e=>e instanceof gr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=ur(),n=await this.backend.time(e);return n.wallMs=ur()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Tr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ar(){const e=X();if(null==e._tfengine){const t=new H(e);e._tfengine=new Rr(t)}var t;return t=e._tfengine.ENV,K=t,dr=()=>e._tfengine,e._tfengine}Rr.nextTensorId=0,Rr.nextVariableId=0;const _r=Ar();function Fr(e,t){const n={a:e,b:t};return _r.runKernel(ee,n)}function Dr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Or=j();function Lr(e,t){let n=e;if(E(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||E(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&j().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Mr(e,r,[]),r}function Mr(e,t,n){if(n=n||[],!Array.isArray(e)&&!E(e))return void d(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));d(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),d(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Mr(e[t],r,n.concat(t))}function zr(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Br(e,t,n,r="numeric"){if(e instanceof gr)return zr(r,e.dtype,t,n),e;let s=_(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),zr(r,s,t,n),null==e||!E(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Lr(e,s);E(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?or(e,s):g(e,[],!0);return _r.makeTensor(i,a,s)}function Pr(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Br(e,`${t}[${s}]`,n,r)))}function Wr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{_r.startScope(n);try{const t=r(...e);return G(t)&&console.error("Cannot return a Promise inside of tidy."),_r.endScope(t),t}catch(e){throw _r.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Or.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Or.registerFlag("IS_BROWSER",(()=>Dr())),Or.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Or.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Or.registerFlag("PROD",(()=>!1)),Or.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Or.getBool("DEBUG"))),Or.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Or.registerFlag("IS_TEST",(()=>!1)),Or.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));const Ur=Wr({complex_:function(e,t){const n=Br(e,"real","complex"),r=Br(t,"imag","complex");p(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return _r.runKernel(we,s)}});function Vr(e,t,n,r){if(null==r&&(r=_(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!E(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){W(t);const e=m(t),r=m(n);d(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==m(t.slice(e));d(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return E(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?or(e,r):g(e,[],!0),_r.makeTensor(e,t,r)}function Gr(e,t,n){return Vr(e,t,Lr(e,n),n)}const Hr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function jr(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:qr(await Promise.all(r)),specs:n}}function qr(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Kr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Xr(e){return Kr?Buffer.byteLength(e):new Blob([e]).size}function Yr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Jr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Xr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Xr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Zr(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class Qr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Qr.instance&&(Qr.instance=new Qr),Qr.instance}static registerSaveRouter(e){Qr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Qr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Qr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Qr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Qr.getInstance().loadRouters:Qr.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const es="tensorflowjs",ts="models_store",ns="model_info_store";function rs(){if(!j().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ss(e){const t=e.result;t.createObjectStore(ts,{keyPath:"modelPath"}),t.createObjectStore(ns,{keyPath:"modelPath"})}class as{constructor(e){if(this.indexedDB=rs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(es,1);r.onupgradeneeded=()=>ss(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(ts,"readonly"),r=t.objectStore(ts).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Jr(t),a=s.transaction(ns,"readwrite");let i=a.objectStore(ns);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(ts,"readwrite");const o=u.objectStore(ts).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(ns);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}as.URL_SCHEME="indexeddb://";const is=e=>{return j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(as.URL_SCHEME)?(t=e.slice(as.URL_SCHEME.length),new as(t)):null;var t};Qr.registerSaveRouter(is),Qr.registerLoadRouter(is);class os{constructor(){this.indexedDB=rs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(es,1);n.onupgradeneeded=()=>ss(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(ns,"readonly"),a=s.objectStore(ns).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(as.URL_SCHEME)?t.slice(as.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(es,1);r.onupgradeneeded=()=>ss(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(ns,"readwrite"),i=a.objectStore(ns),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(ts,"readwrite");const r=u.objectStore(ts).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const us="/",ls="tensorflowjs_models",cs="info",hs="model_topology",ds="weight_specs",ps="weight_data",fs="model_metadata";function gs(e){return{info:[ls,e,cs].join(us),topology:[ls,e,hs].join(us),weightSpecs:[ls,e,ds].join(us),weightData:[ls,e,ps].join(us),modelMetadata:[ls,e,fs].join(us)}}function ms(e){const t=e.split(us);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(us)}class bs{constructor(e){if(!j().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=gs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Jr(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Kr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Kr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}bs.URL_SCHEME="localstorage://";const ys=e=>{return j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(bs.URL_SCHEME)?(t=e.slice(bs.URL_SCHEME.length),new bs(t)):null;var t};Qr.registerSaveRouter(ys),Qr.registerLoadRouter(ys);class xs{constructor(){d(j().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),d("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ls+us,n=us+cs;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[ms(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=gs(e=(t=e).startsWith(bs.URL_SCHEME)?t.slice(bs.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class vs{constructor(){this.managers={}}static getInstance(){return null==vs.instance&&(vs.instance=new vs),vs.instance}static registerManager(e,t){d(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),d(e.length>0,(()=>"scheme must not be an empty string."));const n=vs.getInstance();d(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class ws{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(j().get("IS_BROWSER")){j().setPlatform("browser",new ws);try{vs.registerManager(bs.URL_SCHEME,new xs)}catch(e){}try{vs.registerManager(as.URL_SCHEME,new os)}catch(e){}}let ks;function Is(e,t="float32",n){return t=t||"float32",W(e),new hr(e,t,n)}j().get("IS_NODE")&&j().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=j().global.fetch?j().global.fetch(e,t):(null==ks&&(ks=n(410)),ks(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const $s=Wr({cast_:function(e,t){const n=Br(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return _r.runKernel(ye,r,s)}}),Cs=Wr({clone_:function(e){const t={x:Br(e,"x","clone","string_or_numeric")};return _r.runKernel(ot,t)}});function Ns(e){return new Promise((e=>setTimeout(e))).then(e)}Ar(),pr={buffer:Is,cast:$s,clone:Cs,print:function(e,t=!1){console.log(e.toString(t))}};class Ss{constructor(e){if(!j().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ss.URL_SCHEME)&&(e=e.slice(Ss.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Ns((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ns((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Jr(e)}}}}function Es(e,t,n,r){!function(e){d(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){d(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),d(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),d(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Ts(e,t){null==t&&(t={});const n=null==t.fetchFunc?j().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Es(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Es(s,t.onProgress,.5,1)}Ss.URL_SCHEME="downloads://",Qr.registerSaveRouter((e=>j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ss.URL_SCHEME)?function(e="model"){return new Ss(e)}(e.slice(Ss.URL_SCHEME.length)):null));class Rs{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(d("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=j().platform.fetch,d(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&d(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Jr(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=r){const e=await this.loadWeights(r);[l,c]=e}const h={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=u&&(h.userDefinedMetadata=u);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Yr(await Ts(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function As(e){return null!=e.match(Rs.URL_SCHEME_REGEX)}Rs.URL_SCHEME_REGEX=/^https?:\/\//;const _s=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>As(e))):As(e),n)return Fs(e,t)}return null};function Fs(e,t){return new Rs(e,t)}let Ds;Qr.registerSaveRouter(_s),Qr.registerLoadRouter(_s);const Os=Wr({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=jn(Bn,_r.backendName)){const n={pixels:e},r={numChannels:t};return _r.runKernel(Bn,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(a||s||o)&&(null==Ds&&(Ds=document.createElement("canvas").getContext("2d")),Ds.canvas.width=u,Ds.canvas.height=l,Ds.drawImage(e,0,0,u,l),c=Ds.getImageData(0,0,u,l).data),4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(f(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Lr(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Vr(e,t,r,n)}(h,[l,u,t],"int32")}});function Ls(e,t,n){const r=e.shape.length;d(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),d(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)d(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Ms(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function zs(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Bs(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Ps(e,t,n){return n<=e?n:n-(t-1)}function Ws(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Us(e,t,n,r,s,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Vs(i,u,l,r,e),h=Gs(o,u,l,s,e),d=Bs(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=js(i,r,a,e,t,u),h[t]=qs(o,s,a,e,t,u),d[t]=Hs(a,t,u);return{begin:c,end:h,strides:d}}function Vs(e,t,n,r,s){const a=[...s],i=Ws(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Ps(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function Gs(e,t,n,r,s){const a=[...s],i=Ws(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Ps(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=c(0,a[e],s[e])}return a}function Hs(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function js(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=c(0,i,u-1),i}function qs(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?c(0,i,u):c(-1,i,u-1),i}function Ks(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Xs(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ys(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{d(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(d(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Js(e,t,n,r,s,a,i,o,u){let l=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(l.length));const d=Ms(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-l.length,f=Ms(o),g=e.slice();f.forEach((e=>{l[e]=0,c[e]=1,g.splice(e,0,1)}));const{begin:m,end:b,strides:y}=Us(g,d,p,l,c,h,s,a,i);l=m,c=b,h=y;const x=Ms(u);x.forEach((e=>{c[e]=l[e]+1,h[e]=1}));const v=zs(l,c,h),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:l,$end:c,$strides:h,size:v,newShape:g,outShape:w}}class Zs{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Qs{constructor(){this.classNameMap={}}static getMap(){return null==Qs.instance&&(Qs.instance=new Qs),Qs.instance}static register(e){Qs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ea(e){d(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),d("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),d(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Qs.register(e)}function ta(e){j().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function na(){return _r}function ra(){return _r.memory()}function sa(e,t){return _r.tidy(e,t)}function aa(e){Sr(e).forEach((e=>e.dispose()))}function ia(e){return _r.keep(e)}function oa(e,t,n=1){return _r.registerBackend(e,t,n)}function ua(e){return _r.customGrad(e)}function la(e,t){if((E(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&E(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Vr(e,[],[],t)}fr=ta;class ca extends Zs{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return aa(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){d(F(e),(()=>"The f passed in variableGrads(f) must be a function")),d(null==t||Array.isArray(t)&&t.every((e=>e instanceof mr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in _r.registeredVariables)t.push(_r.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;d((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=_r.gradients(e,t,null,!0);d(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),d(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&aa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:la(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ca,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const ha=Wr({abs_:function(e){const t=Br(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return _r.runKernel(ke,e)}{const e={x:t};return _r.runKernel(J,e)}}}),da=Wr({add_:function(e,t){let n=Br(e,"a","add"),r=Br(t,"b","add");[n,r]=Cr(n,r);const s={a:n,b:r};return _r.runKernel(ee,s)}}),pa=Wr({all_:function(e,t=null,n=!1){const r={x:Br(e,"x","all","bool")},s={axis:t,keepDims:n};return _r.runKernel(ne,r,s)}}),fa=Wr({any_:function(e,t=null,n=!1){const r={x:Br(e,"x","any","bool")},s={axis:t,keepDims:n};return _r.runKernel(re,r,s)}}),ga=Wr({argMax_:function(e,t=0){const n={x:Br(e,"x","argMax")},r={axis:t};return _r.runKernel(se,n,r)}});function ma(e,t,n,r,s="NHWC",a){return xa(e,[...t,e[3]],n,a,r,null,null,Ea(s))}function ba(e,t,n,r,s,a,i="channelsLast"){const[o,u]=ka(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return xa(e,l,n,r,s,a,!1,i)}function ya(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=Ia(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return va(e,c,n,r,s,!1,h,a)}function xa(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[g,m]=ka(n),[b,y]=ka(r),x=$a(d,b),v=$a(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=wa(e,t,n));const a=e[1];return[Ca((e[0]-t+2*r)/n+1,s),Ca((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Ca((t-a+d+p)/r+1,o),h=Ca((n-i+f+g)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,g,m,x,v,a,o),$=i?f*h:f;let C;return"channelsFirst"===o?C=[u,$,k,I]:"channelsLast"===o&&(C=[u,k,I,$]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:$,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:C,filterShape:t}}function va(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,g,,m]=t,[b,y,x]=Ia(n),[v,w,k]=Ia(r),I=$a(p,v),$=$a(f,w),C=$a(g,k),{padInfo:N,outDepth:S,outHeight:E,outWidth:T}=function(e,t,n,r,s,a,i,o,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=wa(e,t,r));const i=e[1],o=e[2];return[Ca((e[0]-t+2*s)/r+1,a),Ca((i-t+2*s)/r+1,a),Ca((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+u-n,g=(f-1)*i+l-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),x=c-y,v=Math.floor(g/2);h={top:y,bottom:x,left:v,right:g-v,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,b,y,x,I,$,C,o),R=a?m*d:m;let A;return"channelsFirst"===i?A=[u,R,S,E,T]:"channelsLast"===i&&(A=[u,S,E,T,R]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:S,outHeight:E,outWidth:T,outChannels:R,padInfo:N,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:$,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function wa(e,t,n,r=1){const s=$a(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function ka(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ia(e){return"number"==typeof e?[e,e,e]:e}function $a(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ca(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Na(e){const[t,n,r]=ka(e);return 1===t&&1===n&&1===r}function Sa(e,t){return Na(e)||Na(t)}function Ea(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const Ta=Wr({reshape_:function(e,t){const n={x:Br(e,"x","reshape","string_or_numeric")},r={shape:t};return _r.runKernel(en,n,r)}}),Ra=Wr({avgPool_:function(e,t,n,r,s){const a=Br(e,"x","avgPool","float32");d(Sa(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Ta(a,[1,a.shape[0],a.shape[1],a.shape[2]])),d(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&d(y(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=_r.runKernel(he,u,l);return c=$s(c,a.dtype),o?Ta(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Aa=Wr({avgPool3d_:function(e,t,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:ta("dilations is deprecated, this field will be gone in v3.0.0.");const o=Br(e,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=Ta(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),d("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),d(Sa(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&d(y(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let p=_r.runKernel(pe,c,h);return p=$s(p,u.dtype),l?Ta(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),_a=Wr({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),u=Br(n,"variance","batchNorm");let l,c;null!=s&&(l=Br(s,"scale","batchNorm")),null!=r&&(c=Br(r,"offset","batchNorm")),d(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Ta(e,[1,1,1,e.size]):2===e.rank?Ta(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ta(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:l,offset:c,mean:o,variance:u},f={varianceEpsilon:a},g=_r.runKernel(nt,p,f);return Ta(g,i.shape)}}),Fa=Wr({batchNorm2d_:function(e,t,n,r,s,a){const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),u=Br(n,"variance","batchNorm");let l,c;return null!=s&&(l=Br(s,"scale","batchNorm")),null!=r&&(c=Br(r,"offset","batchNorm")),d(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),d(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),d(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&d(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&d(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),_a(i,o,u,c,l,a)}}),Da=Wr({batchNorm3d_:function(e,t,n,r,s,a){const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),u=Br(n,"variance","batchNorm");let l,c;return null!=s&&(l=Br(s,"scale","batchNorm")),null!=r&&(c=Br(r,"offset","batchNorm")),d(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),d(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),d(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&d(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&d(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),_a(i,o,u,c,l,a)}}),Oa=Wr({batchNorm4d_:function(e,t,n,r,s,a){const i=Br(e,"x","batchNorm"),o=Br(t,"mean","batchNorm"),u=Br(n,"variance","batchNorm");let l,c;return null!=s&&(l=Br(s,"scale","batchNorm")),null!=r&&(c=Br(r,"offset","batchNorm")),d(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),d(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),d(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&d(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&d(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),_a(i,o,u,c,l,a)}}),La=Wr({clipByValue_:function(e,t,n){const r=Br(e,"x","clipByValue");d(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return _r.runKernel(ve,s,a)}}),Ma=Wr({concat_:function(e,t=0){d(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Pr(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Cs(n[0]);const r=n,s={axis:t};return _r.runKernel(Ie,r,s)}}),za=Wr({concat1d_:function(e){return Ma(e,0)}}),Ba=Wr({concat2d_:function(e,t){return Ma(e,t)}}),Pa=Wr({concat3d_:function(e,t){return Ma(e,t)}}),Wa=Wr({concat4d_:function(e,t){return Ma(e,t)}}),Ua=Wr({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Br(e,"x","conv2d"),u=Br(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Ta(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=i&&d(y(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];d(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),d(Sa(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:l,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=_r.runKernel($e,p,f);return c?Ta(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Va=Wr({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Br(e,"x","conv1d"),u=Br(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Ta(o,[1,o.shape[0],o.shape[1]])),d(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),d(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=i&&d(y(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),d(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),d(Sa(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),d("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Ta(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Ta(l,[l.shape[0],1,l.shape[1],l.shape[2]]),f=Ua(p,h,[1,n],r,"NHWC",[1,a],i);return Ta(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),Ga=Wr({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){d(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Ta(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),d(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),d(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),d(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];d(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),d(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&d(y(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const p={dy:u,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},g=_r.runKernel(Ne,p,f);return l?Ta(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Ha=Wr({conv2dTranspose_:function(e,t,n,r,s,a){const i=Br(e,"x","conv2dTranspose"),o=Br(t,"filter","conv2dTranspose");return Ga(n,i,o,r,s,"NHWC",a)}}),ja=Wr({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Br(e,"x","conv3d"),o=Br(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Ta(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),d(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),d(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),d(Sa(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),d("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=_r.runKernel(Se,c,h);return l?Ta(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),qa=Wr({depthToSpace_:function(e,t,n="NHWC"){const r=Br(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];d(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),d(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),d(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return _r.runKernel(Oe,o,u)}}),Ka=Wr({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Br(e,"x","depthwiseConv2d"),u=Br(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Ta(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),d(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&d(y(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=_r.runKernel(Le,h,p);return c?Ta(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Xa=Wr({floorDiv_:function(e,t){let n=Br(e,"a","floorDiv"),r=Br(t,"b","floorDiv");[n,r]=Cr(n,r);const s={a:n,b:r};return _r.runKernel(tt,s)}}),Ya=Wr({div_:function(e,t){let n=Br(e,"a","div"),r=Br(t,"b","div");if([n,r]=Cr(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Xa(n,r);const s={a:n,b:r};return _r.runKernel(Ve,s,{})}}),Ja=Wr({elu_:function(e){const t={x:Br(e,"x","elu")};return _r.runKernel(Ge,t)}});function Za(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Qa(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ei(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const ti=Wr({equal_:function(e,t){let n=Br(e,"a","equal"),r=Br(t,"b","equal");[n,r]=Cr(n,r),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(qe,s)}}),ni=Wr({expandDims_:function(e,t=0){const n=Br(e,"x","expandDims","string_or_numeric");d(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return _r.runKernel(Xe,r,s)}}),ri=Wr({tile_:function(e,t){const n=Br(e,"x","tile","string_or_numeric");d(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return _r.runKernel(An,r,s)}}),si=Wr({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Is([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Ta(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return ri(ni(i,0),[n[0],1,1]);if(2===n.length)return ri(ni(ni(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ri(ni(ni(ni(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ai(e,t,n){const r={shape:e,value:t,dtype:n};return _r.runKernel(Ze,{},r)}const ii=Wr({floor_:function(e){const t={x:Br(e,"x","floor")};return _r.runKernel(et,t)}}),oi=Wr({gather_:function(e,t,n=0,r=0){const s={x:Br(e,"x","gather"),indices:Br(t,"indices","gather","int32")},a={axis:n,batchDims:r};return _r.runKernel(rt,s,a)}}),ui=Wr({greater_:function(e,t){let n=Br(e,"a","greater"),r=Br(t,"b","greater");[n,r]=Cr(n,r),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(at,s)}}),li=Wr({greaterEqual_:function(e,t){let n=Br(e,"a","greaterEqual"),r=Br(t,"b","greaterEqual");[n,r]=Cr(n,r),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(it,s)}}),ci=Wr({leakyRelu_:function(e,t=.2){const n={x:Br(e,"x","leakyRelu")},r={alpha:t};return _r.runKernel(pt,n,r)}}),hi=Wr({log_:function(e){const t={x:Br(e,"x","log")};return _r.runKernel(bt,t)}}),di=Wr({exp_:function(e){const t={x:Br(e,"x","exp")};return _r.runKernel(Ke,t)}}),pi=Wr({max_:function(e,t=null,n=!1){const r={x:Br(e,"x","max")},s={reductionIndices:t,keepDims:n};return _r.runKernel($t,r,s)}}),fi=Wr({mul_:function(e,t){let n=Br(e,"a","mul"),r=Br(t,"b","mul");[n,r]=Cr(n,r);const s={a:n,b:r};return _r.runKernel(Mt,s)}}),gi=Wr({sub_:function(e,t){let n=Br(e,"a","sub"),r=Br(t,"b","sub");[n,r]=Cr(n,r);const s={a:n,b:r};return _r.runKernel(Nn,s)}}),mi=Wr({sum_:function(e,t=null,n=!1){let r=Br(e,"x","sum");"bool"===r.dtype&&(r=$s(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return _r.runKernel(vn,s,a)}}),bi=Wr({logSoftmax_:function(e,t=-1){const n=Br(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=ua(((e,n)=>{const r=pi(e,t,!0),s=gi(e,r),a=gi($s(s,"float32"),hi(mi(di(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=di(r);return gi(e,fi(mi(e,t,!0),s))}}}));return r(n)}}),yi=Wr({logicalAnd_:function(e,t){const n=Br(e,"a","logicalAnd","bool"),r=Br(t,"b","logicalAnd","bool");ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(xt,s)}}),xi=Wr({maxPool_:function(e,t,n,r,s){const a=Br(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Ta(a,[1,a.shape[0],a.shape[1],a.shape[2]])),d(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),d(Sa(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&d(y(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=_r.runKernel(Nt,u,l);return o?Ta(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),vi=Wr({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:ta("dilations is deprecated, this field will be gone in v3.0.0.");const o=Br(e,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=Ta(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),d("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),d(Sa(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&d(y(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},p=_r.runKernel(Et,c,h);return l?Ta(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),wi=Wr({maximum_:function(e,t){let n=Br(e,"a","maximum"),r=Br(t,"b","maximum");[n,r]=Cr(n,r),"bool"===n.dtype&&(n=$s(n,"int32"),r=$s(r,"int32")),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(Ct,s)}}),ki=Wr({mean_:function(e,t=null,n=!1){const r={x:Br(e,"x","mean")},s={axis:t,keepDims:n};return _r.runKernel(At,r,s)}}),Ii=Wr({min_:function(e,t=null,n=!1){const r={x:Br(e,"x","min")},s={axis:t,keepDims:n};return _r.runKernel(_t,r,s)}}),$i=Wr({minimum_:function(e,t){let n=Br(e,"a","minimum"),r=Br(t,"b","minimum");[n,r]=Cr(n,r),"bool"===n.dtype&&(n=$s(n,"int32"),r=$s(r,"int32")),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(Ft,s)}});function Ci(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ni(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Si(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Ei(e,t){return Ni(e,t.map((e=>1)),t)}function Ti(e,t,n){d(Ci(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ri(e,t){if(Ci(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ai(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function _i(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Fi=Wr({square_:function(e){const t=Br(e,"x","square");return _r.runKernel("Square",{x:t},{})}}),Di=Wr({moments_:function(e,t=null,n=!1){const r=I(t,(e=Br(e,"x","moments")).shape),s=ki(e,r,n);let a=s.shape;n||(a=Ei(s.shape,r));const i=Fi(gi($s(e,"float32"),Ta(s,a)));return{mean:s,variance:ki(i,r,n)}}}),Oi=Wr({neg_:function(e){const t={x:Br(e,"x","neg")};return _r.runKernel(zt,t)}}),Li=Wr({notEqual_:function(e,t){let n=Br(e,"a","notEqual"),r=Br(t,"b","notEqual");[n,r]=Cr(n,r),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(Bt,s)}}),Mi=Wr({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Br(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return _r.runKernel(Gt,s,a)}});function zi(e,t="float32"){if("complex64"===t){const t=zi(e,"float32"),n=zi(e,"float32");return Ur(t,n)}const n=B(m(e),t);return _r.makeTensor(n,e,t)}function Bi(e,t="float32"){if("complex64"===t){const t=Bi(e,"float32"),n=zi(e,"float32");return Ur(t,n)}const n=z(m(e),t);return _r.makeTensor(n,e,t)}const Pi=Wr({onesLike_:function(e){const t={x:Br(e,"x","onesLike")};return _r.runKernel(Vt,t)}}),Wi=Wr({pad_:function(e,t,n=0){const r=Br(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return _r.runKernel(jt,a,s)}}),Ui=Wr({prelu_:function(e,t){const n={x:Br(e,"x","prelu"),alpha:Br(t,"alpha","prelu")};return _r.runKernel(Kt,n)}});var Vi=n(129);class Gi{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Vi.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Hi{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Vi.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ji=Wr({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Gi(t,n,r,!1,s),i=Is(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),qi=Wr({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=Is(e,r),i=new Hi(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Ki=Wr({relu_:function(e){const t={x:Br(e,"x","relu")};return _r.runKernel(Qt,t)}}),Xi=Wr({reverse_:function(e,t){const n={x:Br(e,"x","reverse")},r={dims:t};return _r.runKernel(on,n,r)}}),Yi=Wr({selu_:function(e){const t={x:Br(e,"x","selu")};return _r.runKernel(dn,t)}}),Ji=Wr({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Br(e,"x","separableConv2d"),u=Br(t,"depthwiseFilter","separableConv2d"),l=Br(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Ta(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");d(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),d(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),d(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),d(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],f=u.shape[3];d(l.shape[2]===p*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${l.shape[2]}.`));const g=Ka(c,u,r,s,i,a),m=Ua(g,l,1,"valid",i);return h?Ta(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Zi=Wr({sigmoid_:function(e){const t={x:Br(e,"x","sigmoid")};return _r.runKernel(bn,t)}}),Qi=Wr({slice_:function(e,t,n){const r=Br(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return _r.runKernel(pn,s,a)}}),eo=Wr({slice1d_:function(e,t,n){const r=Br(e,"x","slice1d");return d(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Qi(r,[t],[n])}}),to=Wr({slice2d_:function(e,t,n){const r=Br(e,"x","slice2d");return d(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Qi(r,t,n)}}),no=Wr({slice3d_:function(e,t,n){const r=Br(e,"x","slice3d");return d(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Qi(r,t,n)}}),ro=Wr({slice4d_:function(e,t,n){const r=Br(e,"x","slice4d");return d(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Qi(r,t,n)}}),so=Wr({softmax_:function(e,t=-1){const n=Br(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return _r.runKernel(In,r,s)}}),ao=Wr({softplus_:function(e){const t={x:Br(e,"x","softplus")};return _r.runKernel(yn,t)}}),io=Wr({split_:function(e,t,n=0){const r={x:Br(e,"x","split")},s={numOrSizeSplits:t,axis:n};return _r.runKernel(kn,r,s)}}),oo=Wr({sqrt_:function(e){const t={x:Br(e,"x","sqrt")};return _r.runKernel(xn,t)}}),uo=Wr({squeeze_:function(e,t){const n=Br(e,"x","squeeze");return Ta(n,$(n.shape,t).newShape)}}),lo=Wr({stack_:function(e,t=0){const n=Pr(e,"tensors","stack","string_or_numeric");d(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&d(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return _r.runKernel(Ht,r,s)}}),co=Wr({tanh_:function(e){const t={x:Br(e,"x","tanh")};return _r.runKernel(Rn,t)}});function ho(e,t){f(e);const n=Lr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Vr(e,null,n,t)}const po=Wr({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Gi(t,n,r,!0,s),i=Is(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),fo=Wr({unstack_:function(e,t=0){const n=Br(e,"x","unstack","string_or_numeric");d(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return _r.runKernel(On,r,s)}}),go=Wr({broadcastTo_:function(e,t){let n=Br(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ta(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Cs(n);const i={x:n},o={reps:a};return _r.runKernel(An,i,o)}}),mo=Wr({where_:function(e,t,n){const r=Br(t,"a","where"),s=Br(n,"b","where"),a=Br(e,"condition","where","bool"),i=ei(r.shape,s.shape),o=go(r,i),u=go(s,i);1===a.rank&&d(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&p(a.shape,u.shape,"Error in where: ");const l={condition:a,t:o,e:u};return _r.runKernel(hn,l)}}),bo=Wr({zerosLike_:function(e){const t={x:Br(e,"x","zerosLike")};return _r.runKernel(Mn,t)}}),yo=Wr({transpose_:function(e,t){const n=Br(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),d(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{d(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return _r.runKernel(Fn,r,s)}}),xo=Wr({dropout_:function(e,t,n,r){const s=Br(e,"x","dropout");if(d("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),d(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof gr?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(b(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Ya(ii(da(qi(a,0,1,"float32",r),i)),i);return fi(s,o)}}),vo=Wr({imag_:function(e){const t={input:Br(e,"input","imag")};return _r.runKernel(lt,t)}}),wo=Wr({real_:function(e){const t={input:Br(e,"input","real")};return _r.runKernel(Jt,t)}}),ko=Wr({fft_:function(e){d("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return _r.runKernel(Je,t)}}),Io=Wr({rfft_:function(e,t){d("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Qi(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Ma([e,zi(r)],e.shape.length-1),n=t}else s=e;const a=bo(s),i=Ta(Ur(s,a),[r,n]),o=ko(i),u=Math.floor(n/2)+1,l=wo(o),c=vo(o),h=io(l,[u,n-u],l.shape.length-1),p=io(c,[u,n-u],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,Ta(Ur(h[0],p[0]),f)}}),$o=Wr({ifft_:function(e){d("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return _r.runKernel(ut,t)}}),Co=Wr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Ta(e,[n,t]);r=$o(s)}else{const s=[n,2*(t-1)],a=Ta(wo(e),[n,t]),i=Ta(vo(e),[n,t]),o=Xi(Qi(a,[0,1],[n,t-2]),1),u=fi(Xi(Qi(i,[0,1],[n,t-2]),1),la(-1)),l=Ma([a,o],1),c=Ma([i,u],1),h=Ta(Ur(l,c),[s[0],s[1]]);r=$o(h)}if(r=wo(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ta(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),No=Wr({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Ta(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ta(t,[1,t.shape[0],t.shape[1],t.shape[2]])),d(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),d(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),d(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];d(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),d(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&d(y(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:u},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return _r.runKernel(Ce,h,p)}}),So=Wr({relu6_:function(e){const t={x:Br(e,"x","relu6")};return _r.runKernel(an,t)}}),Eo=Wr({step_:function(e,t=0){const n={x:Br(e,"x","step")},r={alpha:t};return _r.runKernel(zn,n,r)}});function To(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return fi(e,Eo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ro(e,t){let n=t;const r=Qa(e.shape,t.shape);return r.length>0&&(n=mi(n,r)),Ta(n,e.shape)}function Ao(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ki(e);if("elu"===t)return Ja(e);if("relu6"===t)return So(e);if("prelu"===t)return Ui(e,n);if("leakyrelu"===t)return ci(e,r);throw new Error(`Unknown fused activation ${t}.`)}const _o=(e,t)=>!(e>0)||"linear"===t,Fo=Wr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===_o(_r.state.gradientDepth,u)){let h=Ua(e,t,n,r,s,a,i);return null!=o&&(h=da(h,o)),Ao(h,u,l,c)}const h=Br(e,"x","conv2d"),p=Br(t,"filter","conv2d");let f=h,g=!1;3===h.rank&&(g=!0,f=Ta(h,[1,h.shape[0],h.shape[1],h.shape[2]])),d(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&d(y(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),d(f.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),d(Sa(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),d("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=xa(f.shape,p.shape,n,a,r,i);let b,x;null!=o&&(b=Br(o,"bias","fused conv2d"),[b]=Cr(b,h),ei(m.outShape,b.shape)),null!=l&&(x=Br(l,"prelu weights","fused conv2d"));const v=(e,t)=>{const[s,i,o,l]=t,c=To(e,o,u);d(Na(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Ga(i.shape,c,s,n,r),No(i,c,s.shape,n,r)];if(null!=l){const e=Ro(l,c);h.push(e)}return h},w={x:f,filter:p,bias:b,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=ua(((e,t,n)=>{let r=_r.runKernel(Un,w,k);return n([t,e,r]),g&&(r=Ta(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p)}{const e=ua(((e,t,n,r)=>{let s=_r.runKernel(Un,w,k);return r([t,e,s,n]),g&&(s=Ta(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,p,b)}}}),Do=Wr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Ta(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ta(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return _r.runKernel(Me,l,c)}}),Oo=Wr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Ta(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=_r.runKernel(ze,l,c);return u?Ta(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Wr({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===_o(_r.state.gradientDepth,u)){let h=Ka(e,t,n,r,s,a,i);return null!=o&&(h=da(h,o)),Ao(h,u,l,c)}const h=Br(e,"x","depthwiseConv2d"),p=Br(t,"filter","depthwiseConv2d");let f=h,g=!1;3===h.rank&&(g=!0,f=Ta(h,[1,h.shape[0],h.shape[1],h.shape[2]])),d(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),d(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),d(Sa(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&d(y(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=xa(f.shape,p.shape,n,a,r,i,!0);let b,x;null!=o&&(b=Br(o,"bias","fused conv2d"),[b]=Cr(b,h),ei(m.outShape,b.shape)),null!=l&&(x=Br(l,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{d(Na(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,l,c]=t,h=To(e,l,u),p=Oo(o.shape,h,s,n,r,a,i),f=Do(o,h,s.shape,n,r,a,i);return null!=c?[p,f,Ro(b,h)]:[p,f]},w={x:f,filter:p,bias:b,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=ua(((e,t,n)=>{let r=_r.runKernel(Vn,w,k);return n([t,e,r]),g&&(r=Ta(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p)}{const e=ua(((e,t,n,r)=>{let s=_r.runKernel(Vn,w,k);return r([t,e,s,n]),g&&(s=Ta(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,p,b)}}});const Lo=Wr({matMul_:function(e,t,n=!1,r=!1){let s=Br(e,"a","matMul"),a=Br(t,"b","matMul");[s,a]=Cr(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return _r.runKernel(ge,i,o)}}),Mo=Wr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===_o(_r.state.gradientDepth,a)){let u=Lo(e,t,n,r);return null!=s&&(u=da(u,s)),Ao(u,a,i,o)}let u=Br(e,"a","fused matMul"),l=Br(t,"b","fused matMul");[u,l]=Cr(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],g=u.shape.slice(0,-2),y=l.shape.slice(0,-2),x=m(g),v=m(y);d(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),d(b(g,y),(()=>`Error in fused matMul: outer dimensions (${g}) and (${y}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),d(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=u.shape.slice(0,-2).concat([p,f]),k=Ta(u,n?[x,c,p]:[x,p,c]),I=Ta(l,r?[v,f,h]:[v,h,f]);let $,C;null!=s&&($=Br(s,"bias","fused matMul"),[$]=Cr($,u),ei(w,$.shape)),null!=i&&(C=Br(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,u,l]=t,c=To(Ta(e,u.shape),u,a);let h,d;return n||r?!n&&r?(h=Lo(c,o,!1,!1),d=Lo(c,i,!0,!1)):n&&!r?(h=Lo(o,c,!1,!0),d=Lo(i,c,!1,!1)):(h=Lo(o,c,!0,!0),d=Lo(c,i,!0,!0)):(h=Lo(c,o,!1,!0),d=Lo(i,c,!0,!1)),null!=s?[h,d,Ro(l,c)]:[h,d]},S={a:k,b:I,bias:$,preluActivationWeights:C},E={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=ua(((e,t,n)=>{const r=_r.runKernel(Wn,S,E);return n([e,t,r]),{value:Ta(r,w),gradFunc:N}}));return e(k,I)}{const e=ua(((e,t,n,r)=>{const s=_r.runKernel(Wn,S,E);return r([e,t,s,n]),{value:Ta(s,w),gradFunc:N}}));return e(k,I,$)}}});function zo(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return ho(s,"float32")}Wr({hammingWindow_:function(e){return zo(e,.54,.46)}});const Bo=Wr({hannWindow_:function(e){return zo(e,.5,.5)}});function Po(e,t,n){if(f(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Lr(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Vr(e,t,r,n)}const Wo=Wr({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Qi(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Ma([Qi(e,a,t-r),ai([r],s)]);i.push(o),a+=n}return 0===i.length?Po([],[0,t]):Ta(Ma(i),[i.length,t])}});function Uo(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),d(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),d(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),d(1===t.rank,(()=>"scores must be a 1D tensor")),d(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),d(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function Vo(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Go)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Go(e,t){return e>t?1:e<t?-1:0}function Ho(e,t,n,r,s){return Ko(e,t,n,r,s,0)}function jo(e,t,n,r,s,a){return Ko(e,t,n,r,s,0,!1,a,!0)}function qo(e,t,n,r,s,a){return Ko(e,t,n,r,s,a,!0)}function Ko(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Jo);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Xo(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Yo(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Vo(l,t,Jo))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),u&&(g.validOutputs=p),g}function Xo(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,l),m=Math.max(i,c),b=Math.min(o,h),y=Math.min(u,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function Yo(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Jo(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Wr({stft_:function(e,t,n,r,s=Bo){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Wo(e,t,n),o=fi(i,s(t)),u=[];for(let e=0;e<i.shape[0];e++)u.push(Io(Qi(o,[e,0],[1,t]),r));return Ma(u)}}),Wr({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Br(e,"image","cropAndResize"),o=Br(t,"boxes","cropAndResize","float32"),u=Br(n,"boxInd","cropAndResize","int32"),l=o.shape[0];d(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),d(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),d(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),d(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return _r.runKernel(Fe,c,h)}}),Wr({flipLeftRight_:function(e){const t=Br(e,"image","flipLeftRight","float32");d(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return _r.runKernel(Qe,n,{})}}),Wr({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Br(e,"image","rotateWithOffset","float32");d(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return _r.runKernel(Pn,a,i)}}),Wr({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Br(e,"boxes","nonMaxSuppression"),i=Br(t,"scores","nonMaxSuppression"),o=Uo(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return _r.runKernel(Pt,{boxes:a,scores:i},u)}}),Wr({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Br(e,"boxes","nonMaxSuppression"),o=Br(t,"scores","nonMaxSuppression"),u=Uo(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=_r.runKernel(Ut,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Wr({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Br(e,"boxes","nonMaxSuppression"),o=Br(t,"scores","nonMaxSuppression"),u=Uo(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=_r.runKernel(Wt,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Zo=Wr({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Br(e,"images","resizeBilinear");d(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),d(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),d(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Ta(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=_r.runKernel(rn,o,u);return i?Ta(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Qo=Wr({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Br(e,"images","resizeNearestNeighbor");d(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),d(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),d("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),d(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Ta(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=_r.runKernel(tn,o,u);return i?Ta(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),eu=Wr({lessEqual_:function(e,t){let n=Br(e,"a","lessEqual"),r=Br(t,"b","lessEqual");[n,r]=Cr(n,r),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(gt,s)}});function tu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return _r.runKernel(Yt,{},s)}const nu=Wr({bandPart_:function(e,t,n){d(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),d(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Br(e,"a","bandPart");d(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Ta(tu(0,a,1,"int32"),[-1,1]),u=tu(0,i,1,"int32"),l=gi(o,u),c=yi(eu(l,la(+t,"int32")),li(l,la(-n,"int32"))),h=zi([a,i],r.dtype);return Ta(lo(fo(Ta(r,[-1,a,i])).map((e=>mo(c,e,h)))),s)}}),ru=Wr({pow_:function(e,t){let n=Br(e,"base","pow"),r=Br(t,"exp","pow");[n,r]=Cr(n,r);const s={a:n,b:r};return _r.runKernel(qt,s)}});function su(e,t,n=null){if(0===e.rank)return ha(e);if(1!==e.rank&&null===n)return su(Ta(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return mi(ha(e),n);if(t===1/0)return pi(ha(e),n);if(t===-1/0)return Ii(ha(e),n);if("euclidean"===t||2===t)return oo(mi(ru(ha(e),la(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return pi(mi(ha(e),n[0]),n[1]-1);if(t===1/0)return pi(mi(ha(e),n[1]),n[0]);if(t===-1/0)return Ii(mi(ha(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return oo(mi(Fi(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const au=Wr({norm_:function(e,t="euclidean",n=null,r=!1){const s=su(e=Br(e,"x","norm"),t,n);let a=s.shape;if(r){const t=I(n,e.shape);a=Ei(s.shape,t)}return Ta(s,a)}}),iu=Wr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,d(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)d(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=io(e,e.shape[0],0).map((e=>uo(e,[0])));d(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(_r.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=fi(mi(fi(n[r],e)),n[r]);e=gi(e,t)}return Ya(e,au(e,"euclidean"))})));return t?lo(n,0):n}});function ou(e,t=!1){return _r.tidy((()=>{d(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=si(n),a=Cs(e);const i=Po([[1]],[1,1]);let o=Cs(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=_r.tidy((()=>{const t=Qi(a,[e,e],[n-e,1]),u=au(t),l=Qi(a,[e,e],[1,1]),c=mo(ui(l,0),Po([[-1]]),Po([[1]])),h=gi(l,fi(c,u)),d=Ya(t,h);o=1===d.shape[0]?Cs(i):Ma([i,Qi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Oi(Ya(Lo(c,h),u)),f=Qi(a,[e,0],[n-e,r]),g=fi(p,o),m=yo(o);if(0===e)a=gi(f,Lo(g,Lo(m,f)));else{const t=gi(f,Lo(g,Lo(m,f)));a=Ma([Qi(a,[0,0],[e,r]),t],0)}const b=yo(g),y=Qi(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=gi(y,Lo(Lo(y,o),b));else{const t=gi(y,Lo(Lo(y,o),b));s=Ma([Qi(s,[0,0],[n,e]),t],1)}return[o,a,s]})),aa([t,u,l])}return!t&&n>r&&(s=Qi(s,[0,0],[n,r]),a=Qi(a,[0,0],[r,r])),[s,a]}))}const uu=Wr({qr_:function(e,t=!1){if(d(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ou(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=fo(Ta(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=ou(e,t);s.push(n),a.push(r)})),[Ta(lo(s,0),e.shape),Ta(lo(a,0),e.shape)]}}});var lu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(lu||(lu={}));const cu=Wr({computeWeightedLoss_:function(e,t,n=lu.SUM_BY_NONZERO_WEIGHTS){const r=Br(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Br(t,"weights","computeWeightedLoss"));const a=null==s?r:fi(r,s);if(n===lu.NONE)return a;if(n===lu.SUM)return mi(a);if(n===lu.MEAN){if(null==s)return ki(a);{const e=r.size/s.size,t=Ya(mi(a),mi(s));return e>1?Ya(t,la(e)):t}}if(n===lu.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ya(mi(a),la(r.size));{const e=fi(s,Bi(r.shape)),t=$s(mi(Li(e,la(0))),"float32");return Ya(mi(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Wr({absoluteDifference_:function(e,t,n,r=lu.SUM_BY_NONZERO_WEIGHTS){const s=Br(e,"labels","absoluteDifference"),a=Br(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Br(n,"weights","absoluteDifference")),p(s.shape,a.shape,"Error in absoluteDifference: ");const o=ha(gi(s,a));return cu(o,i,r)}}),Wr({cosineDistance_:function(e,t,n,r,s=lu.SUM_BY_NONZERO_WEIGHTS){const a=Br(e,"labels","cosineDistance"),i=Br(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Br(r,"weights","cosineDistance")),p(a.shape,i.shape,"Error in cosineDistance: ");const u=la(1),l=gi(u,mi(fi(a,i),n,!0));return cu(l,o,s)}}),Wr({hingeLoss_:function(e,t,n,r=lu.SUM_BY_NONZERO_WEIGHTS){let s=Br(e,"labels","hingeLoss");const a=Br(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Br(n,"weights","hingeLoss")),p(s.shape,a.shape,"Error in hingeLoss: ");const o=la(1);s=gi(fi(la(2),s),o);const u=Ki(gi(o,fi(s,a)));return cu(u,i,r)}}),Wr({huberLoss_:function(e,t,n,r=1,s=lu.SUM_BY_NONZERO_WEIGHTS){const a=Br(e,"labels","huberLoss"),i=Br(t,"predictions","huberLoss");let o=null;null!=n&&(o=Br(n,"weights","huberLoss")),p(a.shape,i.shape,"Error in huberLoss: ");const u=la(r),l=ha(gi(i,a)),c=$i(l,u),h=gi(l,c),d=da(fi(la(.5),Fi(c)),fi(u,h));return cu(d,o,s)}}),Wr({logLoss_:function(e,t,n,r=1e-7,s=lu.SUM_BY_NONZERO_WEIGHTS){const a=Br(e,"labels","logLoss"),i=Br(t,"predictions","logLoss");let o=null;null!=n&&(o=Br(n,"weights","logLoss")),p(a.shape,i.shape,"Error in logLoss: ");const u=la(1),l=la(r),c=Oi(fi(a,hi(da(i,l)))),h=fi(gi(u,a),hi(da(gi(u,i),l))),d=gi(c,h);return cu(d,o,s)}});const hu=Wr({squaredDifference_:function(e,t){let n=Br(e,"a","squaredDifference"),r=Br(t,"b","squaredDifference");[n,r]=Cr(n,r),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel($n,s,{})}});Wr({meanSquaredError_:function(e,t,n,r=lu.SUM_BY_NONZERO_WEIGHTS){const s=Br(e,"labels","meanSquaredError"),a=Br(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Br(n,"weights","meanSquaredError")),p(s.shape,a.shape,"Error in meanSquaredError: ");const o=hu(s,a);return cu(o,i,r)}});const du=Wr({log1p_:function(e){const t={x:Br(e,"x","log1p")};return _r.runKernel(yt,t)}});Wr({sigmoidCrossEntropy_:function(e,t,n,r=0,s=lu.SUM_BY_NONZERO_WEIGHTS){let a=Br(e,"multiClassLabels","sigmoidCrossEntropy");const i=Br(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Br(n,"weights","sigmoidCrossEntropy")),p(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=la(r),t=la(1),n=la(.5);a=da(fi(a,gi(t,e)),fi(n,e))}const u=function(e,t){const n=Br(e,"labels","sigmoidCrossEntropyWithLogits"),r=Br(t,"logits","sigmoidCrossEntropyWithLogits");p(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ki(r),a=fi(r,n),i=du(di(Oi(ha(r))));return da(gi(s,a),i)}(a,i);return cu(u,o,s)}});const pu=Wr({logSumExp_:function(e,t=null,n=!1){const r=Br(e,"x","logSumExp"),s=I(t,r.shape),a=pi(r,s,!0),i=gi(r,a),o=di(i),u=mi(o,s),l=hi(u),c=da(Ta(a,l.shape),l);if(n){const e=Ei(c.shape,s);return Ta(c,e)}return c}});Wr({softmaxCrossEntropy_:function(e,t,n,r=0,s=lu.SUM_BY_NONZERO_WEIGHTS){let a=Br(e,"onehotLabels","softmaxCrossEntropy");const i=Br(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Br(n,"weights","softmaxCrossEntropy")),p(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=la(r),t=la(1),n=la(a.shape[1]);a=da(fi(a,gi(t,e)),Ya(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=ua(((e,t,r)=>{const s=pu(t,[n],!0),a=gi($s(t,"float32"),s);r([e,a]);const i=Oi(fi(a,e));return{value:mi(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Ei(e.shape,[n]);return[fi(Ta(e,a),gi($s(r,"float32"),di(s))),fi(Ta(e,a),gi(di(s),$s(r,"float32")))]}}}));return r(e,t)}(a,i);return cu(u,o,s)}});const fu={bandPart:nu,gramSchmidt:iu,qr:uu};class gu extends ca{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=_r.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:sa((()=>bo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:sa((()=>bo(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;sa((()=>{const e=da(fi(a,this.rho),fi(Fi(s),1-this.rho)),t=fi(Ya(oo(da(i,this.epsilon)),oo(da(a,this.epsilon))),s),n=da(fi(i,this.rho),fi(Fi(t),1-this.rho));a.assign(e),i.assign(n);const o=da(fi(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(aa(this.accumulatedGrads.map((e=>e.variable))),aa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}gu.className="Adadelta",ea(gu);class mu extends ca{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:sa((()=>ai(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;sa((()=>{const e=da(a,Fi(s));a.assign(e);const t=da(fi(Ya(s,oo(da(e,_r.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&aa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}mu.className="Adagrad",ea(mu);class bu extends ca{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],sa((()=>{this.accBeta1=la(t).variable(),this.accBeta2=la(n).variable()})),null==r&&(this.epsilon=_r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);sa((()=>{const n=gi(1,this.accBeta1),r=gi(1,this.accBeta2);t.forEach(((t,s)=>{const a=_r.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:sa((()=>bo(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:sa((()=>bo(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=da(fi(o,this.beta1),fi(i,1-this.beta1)),c=da(fi(u,this.beta2),fi(Fi(i),1-this.beta2)),h=Ya(l,n),d=Ya(c,r);o.assign(l),u.assign(c);const p=da(fi(Ya(h,da(oo(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(fi(this.accBeta1,this.beta1)),this.accBeta2.assign(fi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&aa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&aa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),sa((()=>{this.accBeta1.assign(ru(this.beta1,this.iterations_+1)),this.accBeta2.assign(ru(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}bu.className="Adam",ea(bu);class yu extends ca{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],sa((()=>{this.iteration=la(0).variable(),this.accBeta1=la(t).variable()})),null==r&&(this.epsilon=_r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);sa((()=>{const n=gi(1,this.accBeta1),r=Ya(-this.learningRate,da(fi(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=_r.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:bo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:bo(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=da(fi(o,this.beta1),fi(i,1-this.beta1)),c=fi(u,this.beta2),h=ha(i),d=wi(c,h);o.assign(l),u.assign(d);const p=da(fi(Ya(r,n),Ya(l,da(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(da(this.iteration,1)),this.accBeta1.assign(fi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&aa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&aa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}yu.className="Adamax",ea(yu);class xu extends ca{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=_r.registeredVariables[t];sa((()=>{const e=da(fi(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ia(la(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}xu.className="SGD",ea(xu);class vu extends xu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=la(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:sa((()=>bo(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&sa((()=>{let e;const t=da(fi(this.m,s),a);e=this.useNesterov?da(fi(this.c,da(a,fi(t,this.m))),r):da(fi(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&aa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}vu.className="Momentum",ea(vu);class wu extends ca{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=_r.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:sa((()=>bo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:sa((()=>bo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:sa((()=>bo(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;sa((()=>{const e=da(fi(i,this.decay),fi(Fi(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=da(fi(t,this.decay),fi(a,1-this.decay)),u=Ya(fi(a,this.learningRate),oo(gi(e,da(Fi(s),this.epsilon)))),l=da(fi(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=gi(r,l);r.assign(c)}else{const e=da(fi(i,this.decay),fi(Fi(a),1-this.decay)),t=da(fi(o,this.momentum),Ya(fi(a,this.learningRate),oo(da(e,this.epsilon))));i.assign(e),o.assign(t);const n=gi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&aa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&aa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&aa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}wu.className="RMSProp",ea(wu);class ku{static sgd(e){return new xu(e)}static momentum(e,t,n=!1){return new vu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new wu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new bu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new gu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new yu(e,t,n,r,s)}static adagrad(e,t=.1){return new mu(e,t)}}const Iu={sgd:ku.sgd,momentum:ku.momentum,adadelta:ku.adadelta,adagrad:ku.adagrad,rmsprop:ku.rmsprop,adamax:ku.adamax,adam:ku.adam},$u="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Cu(){return new Promise((e=>$u((()=>e()))))}function Nu(e,t){const n=e[0].length;e.forEach(((e,t)=>{d(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),d(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)d(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Su(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Eu=30;function Tu(e){return e<=Eu?e:D(e,Math.floor(Math.sqrt(e)))}function Ru(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Au(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function _u(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Fu(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Du(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Ou(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Lu(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===m(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...O(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}function Mu(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function zu(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Mu(n,t,e)}function Bu(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:m(t.shape)/o,sliceSize:i,strides:[...O(n.slice(0,s)),1],outputSize:m(n)}}const Pu=1.7580993408473768,Wu=1.0507009873554805,Uu=.3275911,Vu=.254829592,Gu=-.284496736,Hu=1.421413741,ju=-1.453152027,qu=1.061405429;function Ku(...e){j().getBool("IS_TEST")||console.warn(...e)}function Xu(...e){j().getBool("IS_TEST")||console.log(...e)}function Yu(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ju(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Zu(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Qu(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function el(e,t){return{real:e[2*t],imag:e[2*t+1]}}function tl(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function nl(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function rl(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function sl(e,t,n=0){let r=[];if("number"==typeof t)d(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);d(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}d(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function al(e,t){let n,r=!1;for(e<=Eu?(n=e,r=!0):n=D(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=D(e,n+1);return n}function il(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function ol(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function ul(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=zi(e.shape),r=$s(e,"float32"),s=n.complex(r,t);return t.dispose(),r.dispose(),s}if(!S(e.dtype,t))return _r.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),s=$s(r,t);return r.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){const t=la(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function ll(e,t){return _r.makeTensorFromDataId(e.dataId,t,e.dtype)}function cl(e){try{return e.map((e=>cr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function hl(e){return e.map((e=>lr(e)))}function dl(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Is(e,"int32"),s=Is([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const pl={kernelName:J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,Eo($s(n,"float32"),-1))}}},fl={kernelName:Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Fi($s(n,"float32")),r=oo(gi(la(1),t));return Oi(Ya(e,r))}}}},gl={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=oo(gi(Fi($s(n,"float32")),1));return Ya(e,t)}}}},ml={kernelName:ee,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n.shape,r.shape);return{a:()=>{let t=e;const r=Qa(n.shape,s);return r.length>0&&(t=mi(t,r)),Ta(t,n.shape)},b:()=>{let t=e;const n=Qa(r.shape,s);return n.length>0&&(t=mi(t,n)),Ta(t,r.shape)}}}},bl={kernelName:te,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},yl={kernelName:se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>bo(n)}}},xl={kernelName:ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>bo(n)}}},vl={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,oo(gi(la(1),Fi($s(n,"float32")))))}}},wl={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=oo(da(la(1),Fi($s(n,"float32"))));return Ya(e,t)}}}},kl={kernelName:ce,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n.shape,r.shape);return{a:()=>{const t=da(Fi(n),Fi(r));let a=fi(e,Ya(r,t));const i=Qa(n.shape,s);return i.length>0&&(a=mi(a,i)),Ta(a,n.shape)},b:()=>{const t=da(Fi(n),Fi(r));let a=Oi(fi(e,Ya(n,t)));const i=Qa(r.shape,s);return i.length>0&&(a=mi(a,i)),Ta(a,r.shape)}}}},Il={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,da(Fi($s(n,"float32")),1))}}},$l={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,gi(la(1),Fi($s(n,"float32"))))}}},Cl=Wr({avgPool3dGrad_:function(e,t,n,r,s=[1,1,1],a,i){const o=Br(e,"dy","avgPool3dGrad"),u=Br(t,"input","avgPool3dGrad");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=Ta(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Ta(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),d(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),d(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),d(Sa(r,s),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&d(y(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:l,input:c},f={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},g=_r.runKernel(fe,p,f);return h?Ta(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Nl={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>Cl(e,r,s,a,l,o,u)}}},Sl=Wr({avgPoolGrad_:function(e,t,n,r,s){const a=Br(e,"dy","avgPoolGrad"),i=Br(t,"input","avgPoolGrad");d(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=Ta(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Ta(a,[1,a.shape[0],a.shape[1],a.shape[2]])),d(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),d(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},p=_r.runKernel(de,c,h);return l?Ta(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),El={kernelName:he,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Sl(e,r,s,a,i)}}},Tl={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Lo(e,s,!1,!1),b:()=>Lo(e,r,!0,!1)}:a&&!i?{a:()=>Lo(s,e,!1,!0),b:()=>Lo(r,e,!1,!1)}:{a:()=>Lo(s,e,!0,!0),b:()=>Lo(e,r,!0,!0)}:{a:()=>Lo(e,s,!1,!0),b:()=>Lo(r,e,!0,!1)}}},Rl=Wr({spaceToBatchND_:function(e,t,n){const r=Br(e,"x","spaceToBatchND");d(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),d(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),d(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return _r.runKernel(wn,s,a)}}),Al={kernelName:me,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Rl(e,r,s)}}},_l={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>mi(e,o,!0)}}},Fl={kernelName:ye,gradFunc:e=>({x:()=>e.clone()})},Dl={kernelName:xe,gradFunc:e=>({x:()=>bo(e)})},Ol={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>mo(yi(li(r,s),eu(r,a)),e,bo(e))}}},Ll={kernelName:ke,inputsToSave:["x"],gradFunc:pl.gradFunc},Ml={kernelName:Ie,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=I(s,t[0].shape)[0],i=r.map((e=>e[a]));return io(e,i,a).map((e=>()=>e))}},zl={kernelName:$e,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return d(Na(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ga(r.shape,e,s,i,o,u),filter:()=>No(r,e,s.shape,i,o,u)}}},Bl={kernelName:Ne,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Ua(e,s,a,i,o,1,u),filter:()=>No(e,r,s.shape,a,i,o,u)}}},Pl=Wr({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Ta(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ta(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),d(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),d(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),d(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),d(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),d(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return _r.runKernel(Ee,o,u)}}),Wl=Wr({conv3DBackpropInput_:function(e,t,n,r,s){d(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ta(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=i.shape[4];d(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),d(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),d(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),d(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),d(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=_r.runKernel(Te,c,h);return o?Ta(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ul={kernelName:Se,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;d(Na(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Wl(i.shape,e,o,s,a),filter:()=>Pl(i,e,o.shape,s,a)}}},Vl=Wr({sin_:function(e){const t={x:Br(e,"x","sin")};return _r.runKernel(fn,t)}}),Gl={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(Oi(Vl($s(n,"float32"))),e)}}},Hl=Wr({sinh_:function(e){const t={x:Br(e,"x","sinh")};return _r.runKernel(gn,t)}}),jl={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(Hl($s(n,"float32")),e)}}},ql=Wr({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Br(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return _r.runKernel(_e,s,a)}}),Kl={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Ri([s],r.rank);let n=ql(e,s,a,!i);return null!=t&&(n=yo(n,t)),n}}}},Xl={kernelName:Le,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;d(Na(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return d(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),d(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),d(Sa(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&d(y(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Oo(u.shape,e,l,s,a,r,i),filter:()=>Do(u,e,l.shape,s,a,r,i)}}},Yl={kernelName:Pe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>_r.runKernel(We,a,n),filter:()=>_r.runKernel(Ue,i,n)}}},Jl={kernelName:Ge,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>_r.runKernel(He,r)}}},Zl={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=fi(di(Oi(Fi(n))),2/Math.sqrt(Math.PI));return{x:()=>fi(e,r)}}},Ql={kernelName:Ke,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,n)}}},ec={kernelName:Xe,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ta(e,n.shape)}}},tc={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,di(n))}}},nc={kernelName:et,gradFunc:e=>({x:()=>bo(e)})},rc={kernelName:tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n.shape,r.shape);return{a:()=>{const t=Ya(e,$s(r,"float32")),a=Qa(n.shape,s);return a.length>0?Ta(mi(t,a),n.shape):t},b:()=>{let t=fi(e,$s(n,"float32"));const a=Qa(r.shape,s);a.length>0&&(t=Ta(mi(t,a),r.shape));const i=Fi(r);return Oi(Ya(t,$s(i,"float32")))}}}},sc=Wr({rsqrt_:function(e){const t={x:Br(e,"x","rsqrt")};return _r.runKernel(ln,t)}}),ac={kernelName:nt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?la(1):o,l=Qa(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=gi(s,a),d=fi(e,u),p=sc(da(i,la(r))),f=fi(fi(fi(p,p),p),la(-.5));return{x:()=>1===a.rank?Ta(fi(fi(e,ri(Ta(p,[1,1,1,a.shape[0]]),c)),u),s.shape):Ta(fi(fi(e,p),u),s.shape),mean:()=>{let e=fi(fi(p,la(-1)),d);return 1===a.rank&&(e=mi(e,l)),Ta(e,a.shape)},variance:()=>{let e=fi(fi(f,h),d);return 1===a.rank&&(e=mi(e,l)),Ta(e,a.shape)},scale:()=>{const t=fi(h,p);let n=fi(e,t);return 1===a.rank&&(n=mi(n,l)),Ta(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=mi(t,l)),Ta(t,a.shape)}}}},ic=Wr({unsortedSegmentSum_:function(e,t,n){const r=Br(e,"x","unsortedSegmentSum"),s=Br(t,"segmentIds","unsortedSegmentSum","int32");d(y(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return _r.runKernel(Ln,a,i)}}),oc={kernelName:rt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=I(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=uc(0,u),d=uc(u+1,u+1+c),p=lc([o,[n],l]),f=Ta(e,p),g=Ta(s,[n]),m=lc([[u],h,d]),b=yo(f,m);let y=ic(b,g,r.shape[i]);const x=Ai(m);return y=yo(y,x),y},indices:()=>s}}};function uc(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function lc(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const cc={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>bo(n),b:()=>bo(r)}}},hc={kernelName:ot,gradFunc:e=>({x:()=>$s(e,"float32")})},dc={kernelName:ct,gradFunc:e=>({x:()=>bo(e)})},pc={kernelName:ht,gradFunc:e=>({x:()=>bo(e)})},fc={kernelName:dt,gradFunc:e=>({x:()=>bo(e)})},gc={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ui(r,0);return{x:()=>mo(a,e,fi(e,s))}}},mc={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,da(n,1))}}},bc={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,$s(n,"float32"))}}},yc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=di(r);return gi(e,fi(mi(e,s,!0),t))}}}},xc=Wr({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return _r.runKernel(It,o,u)}}),vc={kernelName:kt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>xc(r,s,e,a,i,o,u)}}};function wc(e,t,n,r){return t.rank<n.rank&&(t=Ta(t,Ei(t.shape,r))),e.rank<n.rank&&(e=Ta(e,Ei(e.shape,r))),{x:()=>fi(e,$s(ti(n,t),e.dtype))}}const kc={kernelName:$t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=wc(e,t[1],a,I(s,a.shape));return{x:()=>i.x()}}},Ic=Wr({less_:function(e,t){let n=Br(e,"a","less"),r=Br(t,"b","less");[n,r]=Cr(n,r),ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(ft,s)}}),$c={kernelName:Ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>fi(e,$s(li(n,r),"float32")),b:()=>fi(e,$s(Ic(n,r),"float32"))}}},Cc=Wr({maxPool3dGrad_:function(e,t,n,r,s,a=[1,1,1],i,o){const u=Br(e,"dy","maxPool3dGrad"),l=Br(t,"input","maxPool3dGrad"),c=Br(n,"output","maxPool3dGrad");let h=u,p=l,f=c,g=!1;4===l.rank&&(g=!0,h=Ta(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Ta(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=Ta(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),d(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),d(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),d(5===f.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`)),d(Sa(s,a),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&d(y(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:h,input:p,output:f},b={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},x=_r.runKernel(Tt,m,b);return g?Ta(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),Nc={kernelName:Et,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>Cc(e,r,s,a,i,c,u,l)}}},Sc=Wr({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Br(e,"dy","maxPoolGrad"),u=Br(t,"input","maxPoolGrad"),l=Br(n,"output","maxPoolGrad");d(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),d(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),d(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&d(y(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return _r.runKernel(St,c,h)}}),Ec={kernelName:Nt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Sc(e,r,s,a,i,o)}}},Tc={kernelName:At,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=I(s,r.shape),i=m(Si(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=Ta(e,t);return Ya(fi(n,Bi(r.shape,"float32")),i)}}}},Rc={kernelName:_t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=wc(e,i,a,I(s,a.shape));return{x:()=>o.x()}}},Ac={kernelName:Ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>fi(e,$s(eu(n,r),"float32")),b:()=>fi(e,$s(ui(n,r),"float32"))}}},_c={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Qi(e,a,r.shape)}}},Fc={kernelName:Ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n.shape,r.shape);return{a:()=>{const t=Qa(n.shape,s);return t.length>0?Ta(mi(e,t),n.shape):e},b:()=>{const t=fi(e,Oi(ii(Ya(n,r)))),a=Qa(r.shape,s);return a.length>0?Ta(mi(t,a),r.shape):t}}}},Dc={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n.shape,r.shape);return{a:()=>{const t=fi(e,$s(r,"float32")),a=Qa(n.shape,s);return a.length>0?Ta(mi(t,a),n.shape):t},b:()=>{const t=fi(e,$s(n,"float32")),a=Qa(r.shape,s);return a.length>0?Ta(mi(t,a),r.shape):t}}}},Oc={kernelName:zt,gradFunc:e=>({x:()=>Oi(e)})},Lc={kernelName:Gt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>zi(n.shape,"float32")}}},Mc={kernelName:Vt,gradFunc:e=>({x:()=>bo(e)})},zc={kernelName:Ht,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return fo(e,r).map((e=>()=>e))}},Bc={kernelName:jt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Qi(e,a,r.shape)}}},Pc={kernelName:qt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=ei(a.shape,i.shape);return{a:()=>{const t=$s(i,"float32");let n=fi(e,fi(t,ru(a,gi(t,la(1)))));const r=Qa(a.shape,o);return r.length>0&&(n=mi(n,r)),Ta(n,a.shape)},b:()=>{const t=ui(a,0),n=mo(t,hi(a),bo(a));let r=fi(e,fi(s,n));const u=Qa(i.shape,o);return u.length>0&&(r=mi(r,u)),Ta(r,i.shape)}}}},Wc={kernelName:Kt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ui(n,0);return{x:()=>mo(s,e,fi(e,r)),alpha:()=>{let t=mo(s,bo(e),fi(e,n));const a=Qa(r.shape,e.shape);return a.length>0&&(t=mi(t,a)),Ta(t,r.shape)}}}},Uc={kernelName:Ve,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n.shape,r.shape);return{a:()=>{const t=Ya(e,$s(r,"float32")),a=Qa(n.shape,s);return a.length>0?Ta(mi(t,a),n.shape):t},b:()=>{let t=fi(e,$s(n,"float32"));const a=Qa(r.shape,s);a.length>0&&(t=Ta(mi(t,a),r.shape));const i=Fi(r);return Oi(Ya(t,$s(i,"float32")))}}}},Vc={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,Oi(Fi(n)))}}},Gc={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=fi(eu(n,6),Eo(n));return{x:()=>fi(e,$s(r,"float32"))}}},Hc={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,$s(Eo(n),"float32"))}}},jc={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ta(e,n.shape)}}},qc={kernelName:rn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>_r.runKernel(sn,s,n)}}},Kc={kernelName:tn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>_r.runKernel(nn,s,n)}}},Xc={kernelName:on,gradFunc:(e,t,n)=>{const{dims:r}=n,s=I(r,e.shape);return{x:()=>Xi(e,s)}}},Yc={kernelName:un,gradFunc:e=>({x:()=>bo(e)})},Jc={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oi(Ya(e,fi(ru(n,1.5),2)))}}},Zc=Wr({logicalNot_:function(e){const t={x:Br(e,"x","logicalNot","bool")};return _r.runKernel(vt,t)}}),Qc={kernelName:hn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>$s(bo(n),"float32"),t:()=>fi(e,$s(n,e.dtype)),e:()=>fi(e,$s(Zc(n),e.dtype))}}},eh={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ui(n,la(0)),r=la(Pu),s=la(Wu),a=fi(e,s),i=fi(fi(e,r),di($s(n,"float32")));return mo(t,a,i)}}}},th={kernelName:bn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,fi(n,gi(la(1),n)))}}},nh={kernelName:mn,gradFunc:e=>({x:()=>bo(e)})},rh=Wr({cos_:function(e){const t={x:Br(e,"x","cos")};return _r.runKernel(Re,t)}}),sh={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(rh($s(n,"float32")),e)}}},ah=Wr({cosh_:function(e){const t={x:Br(e,"x","cosh")};return _r.runKernel(Ae,t)}}),ih={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(ah($s(n,"float32")),e)}}},oh={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=Ys(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Wi(e,l)}}},uh={kernelName:In,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=fi(e,r);return{logits:()=>gi(a,fi(mi(a,[s],!0),r))}}},lh={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,Zi(n))}}},ch=Wr({batchToSpaceND_:function(e,t,n){const r=Br(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));d(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),d(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),d(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return _r.runKernel(me,a,i)}}),hh={kernelName:wn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>ch(e,r,s)}}},dh={kernelName:kn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Ma(e,r)}}},ph=[pl,fl,gl,ml,bl,yl,xl,vl,wl,kl,Il,$l,Nl,El,Tl,Al,_l,Fl,Dl,Ol,Ll,Ml,Bl,zl,Ul,Gl,jl,Kl,Xl,Yl,Uc,Jl,Zl,Ql,ec,tc,rc,nc,ac,oc,cc,hc,dc,pc,fc,gc,mc,bc,yc,vc,kc,kc,$c,Nc,Ec,Tc,Rc,Ac,_c,Fc,Dc,Oc,Lc,Mc,zc,Bc,Bc,Pc,Wc,Vc,Gc,Hc,jc,qc,Kc,Xc,Yc,Jc,Qc,eh,th,nh,sh,ih,oh,uh,lh,hh,hh,dh,dh,{kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,fi(oo($s(n,"float32")),2))}}},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=la(2);return{a:()=>fi(e,fi(s,gi(n,r))),b:()=>fi(e,fi(s,gi(r,n)))}}},{kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,fi($s(n,"float32"),2))}}},{kernelName:zn,gradFunc:e=>({x:()=>bo(e)})},{kernelName:Nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n.shape,r.shape);return{a:()=>{let t=e;const r=Qa(n.shape,s);return r.length>0&&(t=mi(t,r)),Ta(t,n.shape)},b:()=>{let t=e;const n=Qa(r.shape,s);return n.length>0&&(t=mi(t,n)),Ta(Oi(t),r.shape)}}}},{kernelName:vn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;I(a,r.shape).forEach((e=>{s[e]=1}));const i=Ta(e,s),o=fi(i,Bi(r.shape,"float32"));return{x:()=>o}}},{kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,Fi(rh(n)))}}},{kernelName:Rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(gi(la(1),Fi(n)),e)}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=bo(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=da(t,Qi(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=da(t,Qi(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=da(t,Qi(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=da(t,Qi(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Fn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Ai(s);return{x:()=>yo(e,a)}}},{kernelName:On,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>lo(e,s)}}},{kernelName:Ln,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=wi(t,bo(t)),r=oi(e,n);let s=li(t,la(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=ni(s,e+1);s=yi(s,Bi(r.shape,"bool"));const i=bo(r);return mo(s,r,i)}(e,n)}}},{kernelName:Mn,gradFunc:e=>({x:()=>bo(e)})}];for(const e of ph)Yn(e);gr.prototype.abs=function(){return this.throwIfDisposed(),ha(this)};const fh=Wr({acos_:function(e){const t={x:Br(e,"x","acos")};return _r.runKernel(Z,t)}});gr.prototype.acos=function(){return this.throwIfDisposed(),fh(this)};const gh=Wr({acosh_:function(e){const t={x:Br(e,"x","acosh")};return _r.runKernel(Q,t)}});gr.prototype.acosh=function(){return this.throwIfDisposed(),gh(this)};const mh=Wr({mod_:function(e,t){let n=Br(e,"a","mod"),r=Br(t,"b","mod");[n,r]=Cr(n,r);const s={a:n,b:r};return _r.runKernel(Ot,s)}}),bh=Wr({addStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","addStrict"),r=Br(t,"b","addStrict");return p(n.shape,r.shape,"Error in addStrict: "),da(n,r)}}),yh=Wr({divStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","div"),r=Br(t,"b","div");return p(n.shape,r.shape,"Error in divideStrict: "),Ya(n,r)}}),xh=Wr({maximumStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","maximumStrict"),r=Br(t,"b","maximumStrict");return p(n.shape,r.shape,"Error in maximumStrict: "),wi(n,r)}}),vh=Wr({minimumStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","minimumStrict"),r=Br(t,"b","minimumStrict");return p(n.shape,r.shape,"Error in minimumStrict: "),$i(n,r)}}),wh=Wr({modStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","modStrict"),r=Br(t,"b","modStrict");return p(n.shape,r.shape,"Error in modStrict: "),mh(n,r)}}),kh=Wr({mulStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","mul"),r=Br(t,"b","mul");return p(n.shape,r.shape,"Error in multiplyStrict: "),fi(n,r)}}),Ih=Wr({powStrict_:function(e,t){return ta("strict variants of ops have been deprecated and will be removed in future"),p(e.shape,t.shape,"Error in powStrict: "),ru(e,t)}}),$h=Wr({squaredDifferenceStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","squaredDifferenceStrict"),r=Br(t,"b","squaredDifferenceStrict");return p(n.shape,r.shape,"Error in squaredDifferenceStrict: "),hu(n,r)}}),Ch=Wr({subStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","subStrict"),r=Br(t,"b","subStrict");return p(n.shape,r.shape,"Error in subStrict: "),gi(n,r)}});gr.prototype.addStrict=function(e){return this.throwIfDisposed(),bh(this,e)},gr.prototype.add=function(e){return this.throwIfDisposed(),da(this,e)},gr.prototype.all=function(e,t){return this.throwIfDisposed(),pa(this,e,t)},gr.prototype.any=function(e,t){return this.throwIfDisposed(),fa(this,e,t)},gr.prototype.argMax=function(e){return this.throwIfDisposed(),ga(this,e)};const Nh=Wr({argMin_:function(e,t=0){const n={x:Br(e,"x","argMin")},r={axis:t};return _r.runKernel(ae,n,r)}});gr.prototype.argMin=function(e){return this.throwIfDisposed(),Nh(this,e)},gr.prototype.asScalar=function(){return this.throwIfDisposed(),d(1===this.size,(()=>"The array must have only 1 element.")),Ta(this,[])},gr.prototype.asType=function(e){return this.throwIfDisposed(),$s(this,e)},gr.prototype.as1D=function(){return this.throwIfDisposed(),Ta(this,[this.size])},gr.prototype.as2D=function(e,t){return this.throwIfDisposed(),Ta(this,[e,t])},gr.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ta(this,[e,t,n])},gr.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ta(this,[e,t,n,r])},gr.prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Ta(this,[e,t,n,r,s])};const Sh=Wr({asin_:function(e){const t={x:Br(e,"x","asin")};return _r.runKernel(ie,t)}});gr.prototype.asin=function(){return this.throwIfDisposed(),Sh(this)};const Eh=Wr({asinh_:function(e){const t={x:Br(e,"x","asinh")};return _r.runKernel(oe,t)}});gr.prototype.asinh=function(){return this.throwIfDisposed(),Eh(this)};const Th=Wr({atan_:function(e){const t={x:Br(e,"x","atan")};return _r.runKernel(ue,t)}});gr.prototype.atan=function(){return this.throwIfDisposed(),Th(this)};const Rh=Wr({atan2_:function(e,t){let n=Br(e,"a","atan2"),r=Br(t,"b","atan2");[n,r]=Cr(n,r);const s={a:n,b:r};return _r.runKernel(ce,s)}});gr.prototype.atan2=function(e){return this.throwIfDisposed(),Rh(this,e)};const Ah=Wr({atanh_:function(e){const t={x:Br(e,"x","atanh")};return _r.runKernel(le,t)}});gr.prototype.atanh=function(){return this.throwIfDisposed(),Ah(this)},gr.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Ra(this,e,t,n,r)},gr.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ch(this,e,t)},gr.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),_a(this,e,t,n,r,s)},gr.prototype.broadcastTo=function(e){return this.throwIfDisposed(),go(this,e)},gr.prototype.cast=function(e){return this.throwIfDisposed(),$s(this,e)};const _h=Wr({ceil_:function(e){const t={x:Br(e,"x","ceil")};return _r.runKernel(xe,t)}});gr.prototype.ceil=function(){return this.throwIfDisposed(),_h(this)},gr.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),La(this,e,t)},gr.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof gr&&(e=[e]),Ma([this,...e],t)},gr.prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Va(this,e,t,n,r,s,a)},gr.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Ha(this,e,t,n,r,s)},gr.prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ua(this,e,t,n,r,s,a)},gr.prototype.cos=function(){return this.throwIfDisposed(),rh(this)},gr.prototype.cosh=function(){return this.throwIfDisposed(),ah(this)},gr.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ql(this,e,t,n)},gr.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),qa(this,e,t)},gr.prototype.depthwiseConv2D=function(e,t,n,r,s,a){return ta("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Ka(this,e,t,n,r,s,a)},gr.prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ka(this,e,t,n,r,s,a)};const Fh=Wr({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Br(e,"x","dilation2d"),o=Br(t,"filter","dilation2d");d(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),d(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),d("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=i,l=!1;3===i.rank&&(u=Ta(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},p=_r.runKernel(Pe,c,h);return l?Ta(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});gr.prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Fh(this,e,t,n,r,s)};const Dh=Wr({divNoNan_:function(e,t){let n=Br(e,"a","div"),r=Br(t,"b","div");[n,r]=Cr(n,r);const s=Ya(n,r),a=bo(s),i=ti(r,a);return mo(i,a,s)}});gr.prototype.divNoNan=function(e){return this.throwIfDisposed(),Dh(this,e)},gr.prototype.divStrict=function(e){return this.throwIfDisposed(),yh(this,e)},gr.prototype.div=function(e){return this.throwIfDisposed(),Ya(this,e)};const Oh=Wr({dot_:function(e,t){const n=Br(e,"t1","dot"),r=Br(t,"t2","dot");d(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(d(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=Ta(n,[1,-1]),t=Ta(r,[-1,1]),s=Lo(e,t);return Ta(s,[])}if(1===n.rank&&2===r.rank){const e=Ta(n,[1,-1]),t=Ta(r,[r.shape[0],r.shape[1]]),s=Lo(e,t);return Ta(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Ta(r,[-1,1]),t=Lo(n,e);return Ta(t,[t.size])}{const e=Ta(r,[r.shape[0],r.shape[1]]);return Lo(n,e)}}});gr.prototype.dot=function(e){return this.throwIfDisposed(),Oh(this,e)},gr.prototype.elu=function(){return this.throwIfDisposed(),Ja(this)};const Lh=Wr({equalStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","equalStrict"),r=Br(t,"b","equalStrict");return p(n.shape,r.shape,"Error in equalStrict: "),ti(n,r)}}),Mh=Wr({greaterEqualStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","greaterEqualStrict"),r=Br(t,"b","greaterEqualStrict");return p(n.shape,r.shape,"Error in greaterEqualStrict: "),li(n,r)}}),zh=Wr({greaterStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","greaterStrict"),r=Br(t,"b","greaterStrict");return p(n.shape,r.shape,"Error in greaterStrict: "),ui(n,r)}}),Bh=Wr({lessEqualStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","lessEqualStrict"),r=Br(t,"b","lessEqualStrict");return p(n.shape,r.shape,"Error in lessEqualStrict: "),eu(n,r)}}),Ph=Wr({lessStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","lessStrict"),r=Br(t,"b","lessStrict");return p(n.shape,r.shape,"Error in lessStrict: "),Ic(n,r)}}),Wh=Wr({notEqualStrict_:function(e,t){ta("strict variants of ops have been deprecated and will be removed in future");const n=Br(e,"a","notEqualStrict"),r=Br(t,"b","notEqualStrict");return p(n.shape,r.shape,"Error in notEqualStrict: "),Li(n,r)}});gr.prototype.equalStrict=function(e){return this.throwIfDisposed(),Lh(this,e)},gr.prototype.equal=function(e){return this.throwIfDisposed(),ti(this,e)};const Uh=Wr({erf_:function(e){let t=Br(e,"x","erf");d("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=$s(t,"float32"));const n={x:t};return _r.runKernel(je,n)}});gr.prototype.erf=function(){return this.throwIfDisposed(),Uh(this)},gr.prototype.exp=function(){return this.throwIfDisposed(),di(this)},gr.prototype.expandDims=function(e){return this.throwIfDisposed(),ni(this,e)};const Vh=Wr({expm1_:function(e){const t={x:Br(e,"x","expm1")};return _r.runKernel(Ye,t)}});gr.prototype.expm1=function(){return this.throwIfDisposed(),Vh(this)},gr.prototype.fft=function(){return this.throwIfDisposed(),ko(this)},gr.prototype.flatten=function(){return this.throwIfDisposed(),Ta(this,[this.size])},gr.prototype.floor=function(){return this.throwIfDisposed(),ii(this)},gr.prototype.floorDiv=function(e){return this.throwIfDisposed(),Xa(this,e)},gr.prototype.gather=function(e,t){return this.throwIfDisposed(),oi(this,e,t)},gr.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Mh(this,e)},gr.prototype.greaterEqual=function(e){return this.throwIfDisposed(),li(this,e)},gr.prototype.greaterStrict=function(e){return this.throwIfDisposed(),zh(this,e)},gr.prototype.greater=function(e){return this.throwIfDisposed(),ui(this,e)},gr.prototype.ifft=function(){return this.throwIfDisposed(),$o(this)},gr.prototype.irfft=function(){return this.throwIfDisposed(),Co(this)};const Gh=Wr({isFinite_:function(e){const t={x:Br(e,"x","isFinite")};return _r.runKernel(ct,t)}});gr.prototype.isFinite=function(){return this.throwIfDisposed(),Gh(this)};const Hh=Wr({isInf_:function(e){const t={x:Br(e,"x","isInf")};return _r.runKernel(ht,t)}});gr.prototype.isInf=function(){return this.throwIfDisposed(),Hh(this)};const jh=Wr({isNaN_:function(e){const t={x:Br(e,"x","isNaN")};return _r.runKernel(dt,t)}});gr.prototype.isNaN=function(){return this.throwIfDisposed(),jh(this)},gr.prototype.leakyRelu=function(e){return this.throwIfDisposed(),ci(this,e)},gr.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Bh(this,e)},gr.prototype.lessEqual=function(e){return this.throwIfDisposed(),eu(this,e)},gr.prototype.lessStrict=function(e){return this.throwIfDisposed(),Ph(this,e)},gr.prototype.less=function(e){return this.throwIfDisposed(),Ic(this,e)};const qh=Wr({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Br(e,"x","localResponseNormalization");d(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),d(y(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Ta(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:s},c=_r.runKernel(kt,u,l);return o?Ta(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});gr.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),qh(this,e,t,n,r)};const Kh=Wr({logSigmoid_:function(e){const t=Br(e,"x","logSigmoid"),n=ua((e=>({value:Oi(ao(Oi(e))),gradFunc:t=>fi(t,Zi(Oi(e)))})));return n(t)}});gr.prototype.logSigmoid=function(){return this.throwIfDisposed(),Kh(this)},gr.prototype.logSoftmax=function(e){return this.throwIfDisposed(),bi(this,e)},gr.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),pu(this,e,t)},gr.prototype.log=function(){return this.throwIfDisposed(),hi(this)},gr.prototype.log1p=function(){return this.throwIfDisposed(),du(this)},gr.prototype.logicalAnd=function(e){return this.throwIfDisposed(),yi(this,e)},gr.prototype.logicalNot=function(){return this.throwIfDisposed(),Zc(this)};const Xh=Wr({logicalOr_:function(e,t){const n=Br(e,"a","logicalOr","bool"),r=Br(t,"b","logicalOr","bool");ei(n.shape,r.shape);const s={a:n,b:r};return _r.runKernel(wt,s)}});gr.prototype.logicalOr=function(e){return this.throwIfDisposed(),Xh(this,e)};const Yh=Wr({logicalXor_:function(e,t){const n=Br(e,"a","logicalXor","bool"),r=Br(t,"b","logicalXor","bool");return ei(n.shape,r.shape),yi(Xh(e,t),Zc(yi(e,t)))}});gr.prototype.logicalXor=function(e){return this.throwIfDisposed(),Yh(this,e)},gr.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Lo(this,e,t,n)},gr.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),xi(this,e,t,n,r)},gr.prototype.max=function(e,t){return this.throwIfDisposed(),pi(this,e,t)},gr.prototype.maximumStrict=function(e){return this.throwIfDisposed(),xh(this,e)},gr.prototype.maximum=function(e){return this.throwIfDisposed(),wi(this,e)},gr.prototype.mean=function(e,t){return this.throwIfDisposed(),ki(this,e,t)},gr.prototype.min=function(e,t){return this.throwIfDisposed(),Ii(this,e,t)},gr.prototype.minimumStrict=function(e){return this.throwIfDisposed(),vh(this,e)},gr.prototype.minimum=function(e){return this.throwIfDisposed(),$i(this,e)};const Jh=Wr({mirrorPad_:function(e,t,n){d("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Br(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");d(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)d(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),d(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return _r.runKernel(Dt,i,a)}});gr.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Jh(this,e,t)},gr.prototype.modStrict=function(e){return this.throwIfDisposed(),wh(this,e)},gr.prototype.mod=function(e){return this.throwIfDisposed(),mh(this,e)},gr.prototype.mulStrict=function(e){return this.throwIfDisposed(),kh(this,e)},gr.prototype.mul=function(e){return this.throwIfDisposed(),fi(this,e)},gr.prototype.neg=function(){return this.throwIfDisposed(),Oi(this)},gr.prototype.norm=function(e,t,n){return this.throwIfDisposed(),au(this,e,t,n)},gr.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Wh(this,e)},gr.prototype.notEqual=function(e){return this.throwIfDisposed(),Li(this,e)},gr.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Mi(this,e,t,n)},gr.prototype.onesLike=function(){return this.throwIfDisposed(),Pi(this)},gr.prototype.pad=function(e,t){return this.throwIfDisposed(),Wi(this,e,t)};const Zh=Wr({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Br(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=Ta(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(Sa(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const l=ba(o.shape,t,a,s,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[f,g]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,h),m=p?r:"valid",b=p?o:Rl(o,c,f),y=("avg"===n?()=>Ra(b,t,a,m):()=>xi(b,t,a,m))(),x=p?y:ch(y,c,g);return u?Ta(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});gr.prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),Zh(this,e,t,n,r,s)},gr.prototype.powStrict=function(e){return this.throwIfDisposed(),Ih(this,e)},gr.prototype.pow=function(e){return this.throwIfDisposed(),ru(this,e)},gr.prototype.prelu=function(e){return this.throwIfDisposed(),Ui(this,e)};const Qh=Wr({prod_:function(e,t=null,n=!1){let r=Br(e,"x","prod");"bool"===r.dtype&&(r=$s(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return _r.runKernel(Xt,s,a)}});gr.prototype.prod=function(e,t){return this.throwIfDisposed(),Qh(this,e,t)};const ed=Wr({reciprocal_:function(e){const t={x:Br(e,"x","reciprocal")};return _r.runKernel(Zt,t)}});gr.prototype.reciprocal=function(){return this.throwIfDisposed(),ed(this)},gr.prototype.relu=function(){return this.throwIfDisposed(),Ki(this)},gr.prototype.relu6=function(){return this.throwIfDisposed(),So(this)},gr.prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ta(this,e.shape)},gr.prototype.reshape=function(e){return this.throwIfDisposed(),Ta(this,e)},gr.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Zo(this,e,t,n)},gr.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Qo(this,e,t,n)},gr.prototype.reverse=function(e){return this.throwIfDisposed(),Xi(this,e)},gr.prototype.rfft=function(){return this.throwIfDisposed(),Io(this)};const td=Wr({round_:function(e){const t={x:Br(e,"x","round")};return _r.runKernel(un,t)}});gr.prototype.round=function(){return this.throwIfDisposed(),td(this)},gr.prototype.rsqrt=function(){return this.throwIfDisposed(),sc(this)},gr.prototype.selu=function(){return this.throwIfDisposed(),Yi(this)},gr.prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ji(this,e,t,n,r,s,a)},gr.prototype.sigmoid=function(){return this.throwIfDisposed(),Zi(this)};const nd=Wr({sign_:function(e){const t={x:Br(e,"x","sign")};return _r.runKernel(mn,t)}});gr.prototype.sign=function(){return this.throwIfDisposed(),nd(this)},gr.prototype.sin=function(){return this.throwIfDisposed(),Vl(this)},gr.prototype.sinh=function(){return this.throwIfDisposed(),Hl(this)},gr.prototype.slice=function(e,t){return this.throwIfDisposed(),Qi(this,e,t)},gr.prototype.softmax=function(e){return this.throwIfDisposed(),so(this,e)},gr.prototype.softplus=function(){return this.throwIfDisposed(),ao(this)},gr.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Rl(this,e,t)},gr.prototype.split=function(e,t){return this.throwIfDisposed(),io(this,e,t)},gr.prototype.sqrt=function(){return this.throwIfDisposed(),oo(this)},gr.prototype.square=function(){return this.throwIfDisposed(),Fi(this)},gr.prototype.squaredDifference=function(e){return this.throwIfDisposed(),hu(this,e)},gr.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),$h(this,e)},gr.prototype.squeeze=function(e){return this.throwIfDisposed(),uo(this,e)},gr.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof gr?[this,e]:[this,...e];return lo(n,t)},gr.prototype.step=function(e){return this.throwIfDisposed(),Eo(this,e)};const rd=Wr({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){const l={x:Br(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return _r.runKernel(En,l,c)}});gr.prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),rd(this,e,t,n,r,s,a,i,o)},gr.prototype.subStrict=function(e){return this.throwIfDisposed(),Ch(this,e)},gr.prototype.sub=function(e){return this.throwIfDisposed(),gi(this,e)},gr.prototype.sum=function(e,t){return this.throwIfDisposed(),mi(this,e,t)};const sd=Wr({tan_:function(e){const t={x:Br(e,"x","tan")};return _r.runKernel(Tn,t)}});gr.prototype.tan=function(){return this.throwIfDisposed(),sd(this)},gr.prototype.tanh=function(){return this.throwIfDisposed(),co(this)},gr.prototype.tile=function(e){return this.throwIfDisposed(),ri(this,e)},gr.prototype.toBool=function(){return this.throwIfDisposed(),$s(this,"bool")},gr.prototype.toFloat=function(){return this.throwIfDisposed(),$s(this,"float32")},gr.prototype.toInt=function(){return this.throwIfDisposed(),$s(this,"int32")};const ad=Wr({topk_:function(e,t=1,n=!0){const r=Br(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,u]=_r.runKernel(_n,a,i);return{values:o,indices:u}}});gr.prototype.topk=function(e,t){return this.throwIfDisposed(),ad(this,e,t)},gr.prototype.transpose=function(e){return this.throwIfDisposed(),yo(this,e)};const id=Wr({unique_:function(e,t=0){const n=Br(e,"x","unique","string_or_numeric");d(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=_r.runKernel(Dn,r,s);return{values:a,indices:i}}});let od;function ud(){return null==od&&(od=_r.backend.epsilon()),od}gr.prototype.unique=function(e){return this.throwIfDisposed(),id(this,e)},gr.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ic(this,e,t)},gr.prototype.unstack=function(e){return this.throwIfDisposed(),fo(this,e)},gr.prototype.where=function(e,t){return this.throwIfDisposed(),mo(e,this,t)},gr.prototype.zerosLike=function(){return this.throwIfDisposed(),bo(this)};class ld extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ld.prototype)}}class cd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cd.prototype)}}class hd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hd.prototype)}}class dd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dd.prototype)}}class pd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pd.prototype)}}function fd(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function gd(e,t){if(!e)throw new pd(t)}function md(e,t){let n=0;for(const r of e)r===t&&n++;return n}function bd(e){return 1===e.length?e[0]:e}function yd(e){return Array.isArray(e)?e:[e]}function xd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function vd(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let wd={};function kd(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Id(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Id(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Id(t):e[n]=t.value)}}}function $d(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in wd)a=wd[s];else if(a=t[s],null==a)throw new hd(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new hd(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in wd?[o,u]=wd.className:i in t&&([o,u]=t[i]),null==o)throw new hd(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(wd))e[t]=wd[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},wd);for(const e of Object.keys(n))wd[e]=n[e];Id(a.config);const r=u(o,a.config,n,s);return wd=Object.assign({},t),r}{const e=Object.assign({},wd);for(const e of Object.keys(n))wd[e]=n[e];const t=new o(a.config);return wd=Object.assign({},e),t}}}function Cd(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Nd(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Sd(e){if(null==e)throw new hd(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ed(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new hd(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Td(e,t,n=0,r=1/0){return gd(n>=0),gd(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Rd(e,t){Array.isArray(e)?(d(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Rd(e,`element ${n+1} of ${t}`)))):d(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Ad(e)}.`))}function Ad(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ad(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function _d(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Fd(e,t){return sa((()=>oo(mi(fi(e,e),t,!0))))}class Dd extends Zs{getConfig(){return{}}}class Od extends Dd{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sa((()=>{const t=Fd(e,this.axis),n=La(t,0,this.maxValue);return fi(e,Ya(n,da(ud(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Od.className="MaxNorm",ea(Od);class Ld extends Dd{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sa((()=>Ya(e,da(ud(),Fd(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ld.className="UnitNorm",ea(Ld);class Md extends Dd{apply(e){return Ki(e)}}Md.className="NonNeg",ea(Md);class zd extends Dd{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sa((()=>{const t=Fd(e,this.axis),n=da(fi(this.rate,La(t,this.minValue,this.maxValue)),fi(1-this.rate,t));return fi(e,Ya(n,da(ud(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}zd.className="MinMaxNorm",ea(zd);const Bd={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Pd(e){return kd(e)}function Wd(e,t={}){return $d(e,Qs.getMap().classNameMap,t,"constraint")}function Ud(e){return null==e?null:"string"==typeof e?Wd({className:e in Bd?Bd[e]:e,config:{}}):e instanceof Dd?e:Wd(e)}const Vd=["channelsFirst","channelsLast"],Gd=["nearest","bilinear"],Hd=["valid","same","causal"],jd=["max","avg"],qd=["sum","mul","concat","ave"],Kd=new Map;function Xd(e){Ed(Vd,"DataFormat",e)}function Yd(e){Ed(Hd,"PaddingMode",e)}function Jd(e){Ed(jd,"PoolMode",e)}const Zd=[];function Qd(e,t){Zd.push(e);try{const e=t();return Zd.pop(),e}catch(e){throw Zd.pop(),e}}function ep(e){if(!rp(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Zd.length?"":Zd.join("/")+"/")+e}function tp(e){if(!rp(e))throw new Error("Not a valid tensor name: '"+e+"'");Kd.has(e)||Kd.set(e,0);const t=Kd.get(e);if(Kd.set(e,Kd.get(e)+1),t>0){const n=`${e}_${t}`;return Kd.set(n,1),n}return e}const np=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function rp(e){return!!e.match(np)}function sp(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function ap(e){return ho(e=Array.isArray(e)?new Float32Array(e):e)}function ip(e){return Ii(ap(e)).dataSync()[0]}function op(e){return pi(ap(e)).dataSync()[0]}function up(e,t){if(t<e)throw new hd(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function lp(e,t){return e.asType(t)}function cp(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function hp(e,t,n){return sa((()=>{switch(e.rank){case 1:return eo(e,t,n);case 2:return to(e,[t,0],[n,e.shape[1]]);case 3:return no(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ro(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Qi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Qi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new hd(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function dp(e,t,n){return sa((()=>{switch(e.rank){case 1:return eo(e,t,n);case 2:return to(e,[0,t],[e.shape[0],n]);case 3:return no(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ro(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new hd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function pp(e,t,n,r){return sa((()=>{switch(e.rank){case 1:return eo(e,t,n);case 2:switch(r){case 1:return hp(e,t,n);case 2:return dp(e,t,n);default:throw new hd(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return hp(e,t,n);case 2:return no(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return dp(e,t,n);default:throw new hd(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return hp(e,t,n);case 2:return ro(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ro(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return dp(e,t,n);default:throw new hd(`The axis is not within the rank of the tensor ${r}`)}default:throw new hd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function fp(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Ma(e,t)}function gp(e,t){switch(e.rank){case 1:return za([e,t]);case 2:return Ba([e,t],0);case 3:return Pa([e,t],0);case 4:return Wa([e,t],0);default:throw new hd(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function mp(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new hd(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ri(e,t)}function bp(e,t=0,n=1,r,s){return ji(e,t,n,r,s)}function yp(e,t,n,r){if(e.rank<2||t.rank<2)throw new dd(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new dd(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Mo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?wp(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([u,-1]);const h=[...s,...l];return Mo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?wp(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function xp(e,t,n){return sa((()=>(t=Array.isArray(t)?ho(t,"int32"):t.toInt(),oi(e,t,n))))}function vp(e){return fi(e,e)}function wp(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new hd(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new hd(`Unsupported input rank by biasAdd: ${t.rank}`)}function kp(e,t,n){return sa((()=>(null==n&&(n="channelsLast"),Xd(n),e.add(wp(e.rank,t,n)))))}function Ip(e,t,n,r){return sa((()=>xo(e,t,n,r)))}function $p(e,t,n=!1){return n?e():t()}const Cp=["fanIn","fanOut","fanAvg"],Np=["normal","uniform","truncatedNormal"];class Sp extends Zs{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ep extends Sp{apply(e,t){return zi(e,t)}}Ep.className="Zeros",ea(Ep);class Tp extends Sp{apply(e,t){return Bi(e,t)}}Tp.className="Ones",ea(Tp);class Rp extends Sp{constructor(e){if(super(),"object"!=typeof e)throw new hd(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new hd(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return sa((()=>fi(la(this.value),Bi(e,t))))}getConfig(){return{value:this.value}}}Rp.className="Constant",ea(Rp);class Ap extends Sp{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return qi(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ap.className="RandomUniform",ea(Ap);class _p extends Sp{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dd(`randomNormal does not support dType ${t}.`);return bp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_p.className="RandomNormal",ea(_p);class Fp extends Sp{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dd(`truncatedNormal does not support dType ${t}.`);return po(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Fp.className="TruncatedNormal",ea(Fp);class Dp extends Sp{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return sa((()=>{if(2!==e.length||e[0]!==e[1])throw new hd("Identity matrix initializer can only be used for 2D square matrices.");return fi(this.gain,si(e[0]))}))}getConfig(){return{gain:this.gain}}}Dp.className="Identity",ea(Dp);class Op extends Sp{constructor(e){if(super(),e.scale<0)throw new hd(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Ed(Cp,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Ed(Np,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Xd(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=sp(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=sp(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=sp(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dd(`${this.getClassName()} does not support dType ${t}.`);return po(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return qi(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Op.className="VarianceScaling",ea(Op);class Lp extends Op{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Op.className}}Lp.className="GlorotUniform",ea(Lp);class Mp extends Op{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Op.className}}Mp.className="GlorotNormal",ea(Mp);class zp extends Op{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Op.className}}zp.className="HeNormal",ea(zp);class Bp extends Op{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Op.className}}Bp.className="HeUniform",ea(Bp);class Pp extends Op{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Op.className}}Pp.className="LeCunNormal",ea(Pp);class Wp extends Op{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Op.className}}Wp.className="LeCunNormal",ea(Wp);class Up extends Sp{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new dd("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return sa((()=>{if(e.length<2)throw new dd("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=bp(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=fu.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),fi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Up.className="Orthogonal",ea(Up);const Vp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Gp(e,t={}){return $d(e,Qs.getMap().classNameMap,t,"initializer")}function Hp(e){return kd(e)}function jp(e){if("string"==typeof e){const t=e in Vp?Vp[e]:e;if("GlorotNormal"===t)return new Mp;if("GlorotUniform"===t)return new Lp;if("HeNormal"===t)return new zp;if("HeUniform"===t)return new Bp;if("LeCunNormal"===t)return new Pp;if("LeCunUniform"===t)return new Wp;{const e={};return e.className=t,e.config={},Gp(e)}}return e instanceof Sp?e:Gp(e)}let qp=0;function Kp(){return qp++}const Xp={};function Yp(e=""){return e in Xp||(Xp[e]=0),Xp[e]+=1,e+Xp[e].toString()}function Jp(e){return Array.isArray(e)&&Array.isArray(e[0])}function Zp(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Qp(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new hd(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ef(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new hd(`Expected exactly 1 Shape; got ${e.length}`)}return e}function tf(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class nf{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Kp(),n=null==n?"Variable":n,this.originalName=ep(n),this.name=tp(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return _r.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function rf(e){return e.map((e=>e.read()))}function sf(e){e.forEach((e=>{e[0].write(e[1])}))}class af{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class of{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Kp(),null!=a&&(this.originalName=ep(a),this.name=tp(this.originalName)),this.rank=t.length}}let uf=0;class lf{constructor(e,t){this.callArgs=t,this.id=uf++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let cf=0;class hf extends Zs{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=cf++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=xd(e)+"_"+Yp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new cd(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new hd(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return bd(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return bd(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ld(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ld(`Layer ${this.name} is not connected, no input to return.`);return bd(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ld(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ld(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return bd(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=yd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=yd(this.inputSpec);if(e.length!==t.length)throw new hd(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new hd(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new hd(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new hd(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new hd(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new hd(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new hd(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=yd(e);let r=!0;for(const e of n)if(!(e instanceof of)){r=!1;break}let s=!0;for(const e of n)if(e instanceof of){s=!1;break}if(r===s)throw new hd("Arguments to apply() must be all SymbolicTensors or all Tensors");return Qd(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of yd(e))t.push(n.shape);this.build(bd(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=yd(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=bd(a),null!=this.activityRegularizer)throw new dd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=yd(e);const t=[];for(const n of e)t.push(n.shape);return bd(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new of(a,n,this,yd(e),t,this.name,r))):new of(a,r,this,yd(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new dd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ld(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ld(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cd(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return tf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return rf(e?this.trainableWeights:this.weights)}setWeights(e){sa((()=>{const t=this.weights;if(t.length!==e.length)throw new hd(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=rf(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!b(a.shape,o.shape))throw new hd(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}sf(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new hd(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=jp("zeros"));const o=r.apply(t,n),u=new nf(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=yd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=yd(e);t=yd(t),n=yd(n),r=yd(r),s=Zp(s),a=Zp(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new lf({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function df(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=df(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class pf extends hf{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Yp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new hd("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new hd("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new hd("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new of(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new lf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new hd(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function ff(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];aa(r)}}function gf(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var mf;pf.className="InputLayer",ea(pf),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(mf||(mf={}));class bf{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class yf{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class xf extends bf{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=sa((()=>da(this.totals[e],fi(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:sa((()=>{const n=fi(Ya(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ia(t[e])})))}}class vf extends bf{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class wf extends bf{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");A(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=ur();return(...s)=>{const a=ur();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await ff(n),r.push(this.yield(e,t,n))),r.push(Cu()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ff(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ff(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Cu()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ff(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ff(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Cu()):A(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ff(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ff(e),await this.trainEnd(e))}}function kf(e,t){return null==e&&(e={}),e instanceof bf?[e]:Array.isArray(e)&&e[0]instanceof bf?e:yd(e).map((e=>new wf(e,t)))}class If{constructor(){}static registerCallbackConstructor(e,t){d(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),If.checkForDuplicate(t),null==If.constructors[e]&&(If.constructors[e]=[]),If.constructors[e].push(t)}static checkForDuplicate(e){for(const t in If.constructors)If.constructors[+t].forEach((t=>{if(t===e)throw new hd("Duplicate callback constructor.")}))}static clear(){If.constructors={}}static createCallbacks(e){const t=[];for(const n in If.constructors){const r=+n;e>=r&&t.push(...If.constructors[r])}return t.map((e=>new e))}}function $f(e,t,n,r,s,a,i,o,u){const l=new vf,c=[new xf,...If.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new yf(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Cf(e,t={},n=!1){return $d(e,Qs.getMap().classNameMap,t,"layer",n)}function Nf(e,t){return sa((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=mi(vp(e),t,!0),r=ai(n.shape,ud()),s=oo(wi(n,r));return Ya(e,s)}))}function Sf(e,t){return sa((()=>ki(vp(gi(t,e)),-1)))}function Ef(e,t){return sa((()=>ki(ha(gi(t,e)),-1)))}function Tf(e,t){return sa((()=>{const n=gi(e,t),r=La(ha(e),ud(),Number.MAX_VALUE),s=ha(Ya(n,r));return fi(100,ki(s,-1))}))}function Rf(e,t,n=!1){return sa((()=>{if(n)t=so(t);else{const e=mi(t,t.shape.length-1,!0);t=Ya(t,e)}return t=La(t,ud(),1-ud()),Oi(mi(fi(e.toFloat(),hi(t)),t.shape.length-1))}))}function Af(e,t,n=!1){return sa((()=>{const r=ii(function(e){const t=[sp(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=La(t,ud(),1-ud())).shape;return Rf(Mi(r,s[s.length-1]).reshape(s),t,n)}))}function _f(e,t){return sa((()=>{let n;return n=La(t,ud(),1-ud()),n=hi(Ya(n,gi(1,n))),ki(function(e,t){if(!b(e.shape,t.shape))throw new hd(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return sa((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Ff(e,t){return sa((()=>{const n=Nf(e,-1),r=Nf(t,-1),s=fi(n,r);return Oi(mi(s,-1))}))}If.constructors={};const Df={meanSquaredError:Sf,meanAbsoluteError:Ef,meanAbsolutePercentageError:Tf,meanSquaredLogarithmicError:function(e,t){return sa((()=>{const n=La(t,ud(),Number.MAX_VALUE),r=hi(da(1,n)),s=La(e,ud(),Number.MAX_VALUE),a=hi(da(1,s));return ki(vp(gi(r,a)),-1)}))},squaredHinge:function(e,t){return sa((()=>{const n=wi(0,gi(1,fi(e,t)));return ki(vp(n),-1)}))},hinge:function(e,t){return sa((()=>{const n=wi(0,gi(1,fi(e,t)));return ki(n,-1)}))},categoricalHinge:function(e,t){return sa((()=>{const n=mi(fi(e,t),-1),r=pi(fi(gi(1,e),t),-1);return wi(0,da(1,gi(r,n)))}))},logcosh:function(e,t){return sa((()=>{const n=Math.log(2),r=gi(t,e),s=gi(da(r,ao(fi(-2,r))),n);return ki(s,-1)}))},categoricalCrossentropy:Rf,sparseCategoricalCrossentropy:Af,binaryCrossentropy:_f,kullbackLeiblerDivergence:function(e,t){return sa((()=>{const n=La(e,ud(),1),r=La(t,ud(),1);return mi(fi(e,hi(Ya(n,r))),-1)}))},poisson:function(e,t){return sa((()=>{const n=hi(da(ud(),t));return ki(gi(t,fi(e,n)),-1)}))},cosineProximity:Ff};function Of(e){if("string"==typeof e){if(e in Df)return Df[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new hd(t)}return e}function Lf(e,t){return sa((()=>{const n=fi(.5,Pi(t)),r=lp(ui(t,n),e.dtype);return ki(ti(e,r),-1)}))}function Mf(e,t){return sa((()=>lp(ti(ga(e,-1),ga(t,-1)),"float32")))}function zf(e,t){return _f(e,t)}function Bf(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),ti(e,t).asType("float32")}const Pf=Rf,Wf=Af,Uf={binaryAccuracy:Lf,categoricalAccuracy:Mf,precision:function(e,t){return sa((()=>{const n=function(e,t){return sa((()=>yi(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return sa((()=>yi(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return mo(ui(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:Pf,sparseCategoricalCrossentropy:Wf,mse:Sf,MSE:Sf,mae:Ef,MAE:Ef,mape:Tf,MAPE:Tf,cosine:Ff};function Vf(e){if("string"==typeof e&&e in Uf)return Uf[e];if("string"!=typeof e&&null!=e)return e;throw new hd(`Unknown metric ${e}`)}function Gf(e){if(gd(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Df))if(Df[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Uf))if(Uf[n]===e){t=n;break}return void 0!==t?t:e.name}}function Hf(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!jf(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function jf(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!jf(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!jf(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function qf(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Kf(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}qf([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Xf(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),u=0===a.length?"":a[0];qf([`${i} (${o})`,s,e.countParams().toString(),u],t,r);for(let e=1;e<a.length;++e)qf(["","","",a[e]],t,r)}function Yf(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Jf(e,t){if(null===e)return null;if("string"==typeof e)return vd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Yf(t,s,r)?n.push(r):n.push(Jf(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=vd(n);t[e]=Jf(r,e)}}return t}}function Zf(e,t){if(null==e)return null;if("string"==typeof e)return xd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Yf(t,s,r)?n.push(r):n.push(Zf(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[xd(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Zf(r,n):r}return t}}class Qf{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Qf)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new hd(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return $s(t,e.dtype)}catch(n){throw new hd(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof of){if(null==this.id2Value[e.id])throw new hd(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new hd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof of){if(null==this.id2Value[e.id])throw new hd(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new hd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&aa(this.id2Mask)}}const eg={},tg={};function ng(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==eg[c]){const e=function(e,t){d(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=sg(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=sg(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:rg(r)}}(i,t);h=e.sorted,p=e.recipientCounts,eg[c]=h,tg[c]=p}h=eg[c],p={},s||Object.assign(p,tg[c]);const f=new Qf(t);for(let e=0;e<h.length;++e){if(null!=r){const e=ra().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof pf)continue;const l=[],c=[],d=[];let g=!1;for(const e of a.inputs){const n=f.getValue(e),r=f.getMask(e);l.push(n),c.push(r),null!=r&&(g=!0),s||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||d.push(n))}g&&((n=n||{}).mask=c[0]);const m=yd(i.apply(l,n));let b=null;i.supportsMasking&&(b=i.computeMask(l,c));const y=ag(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=m[e])}s||aa(d)}return f.disposeMasks(),a?u:u[0]}function rg(e){const t={};for(const n in e)t[n]=e[n].size;return t}function sg(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function ag(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class ig extends hf{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Yp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Nd(this.inputs).length!==this.inputs.length)throw new hd(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Nd(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;gd(0===n,"input layer has >1 nodes"),gd(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof pf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new cd(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(ig.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Cd);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof ig&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Cd);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new cd(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new cd(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new lf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new hd("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new hd(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new hd(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new hd(`${e.length} of ${r} weights are not set: ${e}`)}sf(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 2.8.6",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Zf(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return sa((()=>{e=yd(e);const n=new Qf;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ng(this.outputs,n,t)}))}computeMask(e,t){return sa((()=>{let n;return e=yd(e),n=null==t?fd(null,e.length):yd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Zp(e);if(t.length!==this.inputLayers.length)throw new hd(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Cd);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Zp(t.computeOutputShape(bd(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];gd(t in n),s.push(n[t])}return bd(s)}runInternalGraph(e,t){null==t&&(t=fd(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Cd);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=yd(t.call(e,l)),u=yd(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=yd(t.call(r,l)),u=yd(t.computeMask(r,i));if(t.activityRegularizer)throw new dd("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){gd(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof ig?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=ig.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new hd(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new hd("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new hd(`No such layer: ${e}`)}calculateLosses(){return sa((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=ig.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=ig.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[ig.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=ig.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=ig.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(bd(n),r)}function u(e){const n=e.name,a=Cf(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new hd(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Sd(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];gd(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];gd(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new hd("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){sa((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function og(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function ug(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=sa((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());aa(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),ho(s,"float32")}return null}function lg(e,t){return fi(e,t)}function cg(e,t){let n,r;const s=t;n=s.xs,r=s.ys,d(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=hg("input",e.inputNames,n),i=hg("output",e.outputNames,r),o=a[0].shape[0];d(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),d(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)d(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)d(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function hg(e,t,n){if(n instanceof gr)return[n];if(Array.isArray(n))return d(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new hd(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function dg(e){return"function"==typeof e.iterator}function pg(e){d(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function fg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>hp(e,t,n-t))):hp(e,t,n-t)}function gg(e,t){return sa((()=>null==e?null:Array.isArray(e)?e.map((e=>gg(e,t))):xp(e,"int32"===t.dtype?t:t.toInt())))}function mg(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function bg(e){const t=[];e instanceof gr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(cp(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function yg(e,t){if(null==e)return;const n=[];if(t instanceof gr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof gr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function xg(e){return Array.isArray(e)}function vg(e){return!function(e){return e instanceof gr}(e)&&!xg(e)}function wg(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(xg(e)&&e.length>0)t=!0;else if(vg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new hd(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(vg(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new hd(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(xg(e)){if((e=e).length!==t.length)throw new hd(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new hd(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=bg(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new hd(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u>=0&&o!==u)throw new hd(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function kg(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new hd(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new hd(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new hd(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new hd(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Ig extends ig{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new hd("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),qf(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Kf(o[e],n,r):Xf(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?tf(e.collectedTrainableWeights):tf(e.trainableWeights),t}(e),l=tf(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Iu.adagrad(.01),Adadelta:()=>Iu.adadelta(1,.95,ud()),Adam:()=>Iu.adam(.001,.9,.999,ud()),Adamax:()=>Iu.adamax(.002,.9,.999,ud(),0),RMSProp:()=>Iu.rmsprop(.001,.9,0,ud()),SGD:()=>Iu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new hd(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ca))throw new hd("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new hd(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Of(e)))}else{const n=Of(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new hd(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Of(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Qd("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Qd("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===_f?-1!==["accuracy","acc"].indexOf(i)?r=Lf:-1!==["crossentropy","ce"].indexOf(i)&&(r=zf):this.lossFunctions[e]===Af?-1!==["accuracy","acc"].indexOf(i)?r=Bf:-1!==["crossentropy","ce"].indexOf(i)&&(r=Wf):-1!==["accuracy","acc"].indexOf(i)?r=Mf:-1!==["crossentropy","ce"].indexOf(i)&&(r=Pf),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Vf(i);a=e,n=""+Gf(i)}let t;Qd(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;pg(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return bd(this.testLoop(i,a,r,n.verbose,n.steps))}finally{yg(s[0],e),yg(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new dd("Verbose mode is not implemented yet.");d(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=sa((()=>{if(t.value){const{xs:n,ys:r}=cg(e,t.value),i=n.concat(r),l=sa((()=>s(i)));if(aa(i),0===u)for(let e=0;e<l.length;++e)a.push(la(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=sa((()=>da(a[e],fi(c,t)))),u>0&&aa(n)}aa(l),o+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ya(a[e],o),aa(t)}return bd(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new hd(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new hd(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new hd("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Qf;if(e instanceof gr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new hd(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new hd(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=ng(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=fd(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new hd(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return sa((()=>{const r=this.checkNumSamples(e);if(n)throw new dd("Verbose predictLoop() is not implemented yet.");const s=mg(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)sa((()=>{const n=s[t][0],r=s[t][1],a=fg(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Qf(i);return ng(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return bd(a.map((e=>Ma(e,0))))}))}predict(e,t={}){const n=bg(e);kg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return pg(r),this.predictLoop(n,r)}finally{yg(n,e)}}predictOnBatch(e){kg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new cd("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Af?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=Nd(e.map((e=>e.shape[0])));r.sort();const s=Nd(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new hd(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new hd(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!b(r,s))throw new hd(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=wg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=wg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Sf,_f,Rf];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Rf&&1===a.shape[a.shape.length-1])throw new hd(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new hd(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new hd(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=og(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await ug(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return sa((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new dd("Verbose mode is not implemented yet.");if(null!=s)throw new dd("steps mode in testLoop() is not implemented yet");{const r=mg(a,n),s=ho(up(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=hp(s,a,o-a),l=gg(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(la(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=da(i[e],fi(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ya(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;md(e,r)>1&&(s+=`_${md(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Qf(e),o=ng(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=lg(n,s[e]));const a=ki(n);t.push(a),u=0===e?n:da(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=ki(t(r[s],o[s]))}ia(n),a.push(n)}return u=ki(u),this.calculateLosses().forEach((e=>{u=da(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>sa((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Qf(a),o=ng(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=ki(r(s[e],o[e]));n=0===e?a:da(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=ki(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,u,c,h;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;pg(d);const p=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,d);s=f[0],a=f[1],h=f[2];let g,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new dd("validationData including sample weights is not supported yet."):new hd(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);u=n[0],c=n[1],g=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];u=fg(s,e,t),s=fg(s,0,e),c=fg(a,e,t),a=fg(a,0,e),g=u.concat(c)}else null!=r.validationSteps&&(m=!0);const b=s.concat(a).concat(h);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;m?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,g=[],w=x.slice());const k=kf(r.callbacks,r.yieldEvery),I=await async function(e,t,n,r,s,a,i,o,u,c,h,d,p,f,g){null==s&&(s=32),null==a&&(a=1),null==h&&(h=!0),null==p&&(p=0);let m=!1;null!=u&&null!=c&&(m=!0);const b=e.checkNumSamples(n,s,f,"steps_per_epoch");let y;null!=b&&(y=up(0,b)),null==i&&(i=1);const{callbackList:x,history:v}=$f(o,i,a,p,b,f,s,m,d);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await x.onEpochBegin(i);const a={};{if("batch"===h)throw new dd("batch shuffling is not implemneted yet");h&&l(y);const i=ho(y),o=mg(b,s);for(let l=0;l<o.length;++l){const h={};if(await x.onBatchBegin(l,h),sa((()=>{const d=o[l][0],p=o[l][1],f=hp(i,d,p-d);h.batch=l,h.size=p-d;const g=gg(n,f),b=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,ia(n)}if(l===o.length-1&&m){const t=e.testLoop(u,c,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];ia(s),a["val_"+n]=s}}})),await x.onBatchEnd(l,h),gf(h),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(i,a),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,y,b,x,d,r.epochs,r.verbose,k,v,g,r.shuffle,w,r.initialEpoch,null);return I}finally{e.isTraining=!1,yg(s,t),yg(a,n),yg(u,i),yg(c,o),null!=h&&aa(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(d(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),d(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),d(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),d(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),d(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(dg(n.validationData))d(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new dd("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=kf(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=$f(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;g<n.epochs;){const l={};await p.onEpochBegin(g);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=cg(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=og(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ug(s[e],null,t[e]))}const l=r.concat(s).concat(i),d=o(l);aa(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,ia(n)}await p.onBatchEnd(h,a),gf(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=dg(n.validationData)?yd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):yd(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(g,l),g++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return aa(a),bd(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ra().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ra().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=xd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>xd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=xd(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[xd(Gf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>xd(Gf(e))));{const e={};for(const t in this.metrics)e[t]=xd(Gf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Cf(Jf(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=vd(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>vd(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=vd(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>vd(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=vd(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Qr.getSaveHandlers(n));if(0===t.length)throw new hd(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new hd(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new hd("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await jr(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.8.6",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await jr(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Yr([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Hf(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){Hf(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ig.className="Model",ea(Ig);class $g extends Ig{}async function Cg(e,t){if(null==t&&(t={}),"string"==typeof e){const s=(n=e,r=t,Qr.getLoadHandlers(n,r));if(0===s.length)s.push(function(e,t){return Fs(e,t)}(e,t));else if(s.length>1)throw new hd(`Found more than one (${s.length}) load handlers for URL '${e}'`);e=s[0]}var n,r;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new hd("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=Cf(Jf(s),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new hd("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=m(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Hr[n.dtype],c=e.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Zr()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*o}else if("string"===i){const t=m(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=Hr[i],a=e.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=Gr(e,o,"float32"),i=Gr(r,o,"float32");n[t]=Ur(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[t]=Gr(l,o,i))}return n}(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),aa(e),aa(t.map((e=>e.tensor)))}return o}(e,0,t)}$g.className="Functional",ea($g);class Ng extends Ig{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Yp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new hd(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Ng||e instanceof Ig;let n;if(t){if(n=e,1!==n.outputs.length)throw new hd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new hd("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new hd("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new hd("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new pf({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new hd(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new hd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=df(this.outputs[0])}this.inboundNodes=[],new lf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fd(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ef(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ig({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new cd("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new cd("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new cd("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new cd("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new hd("Legacy serialization format not supported yet.");s=t}else d(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Ng))throw new dd(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Cf(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new hd("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new hd("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ng.className="Sequential",ea(Ng);class Sg extends Zs{getConfig(){return{}}}class Eg extends Sg{apply(e,t=1){return function(e,t=1){if(1!==t)throw new dd(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ja(e)}(e,t)}}Eg.className="elu",ea(Eg);class Tg extends Sg{apply(e){return Yi(e)}}Tg.className="selu",ea(Tg);class Rg extends Sg{apply(e){return Ki(e)}}Rg.className="relu",ea(Rg);class Ag extends Sg{apply(e){return sa((()=>$i(6,Ki(e))))}}Ag.className="relu6",ea(Ag);class _g extends Sg{apply(e){return e}}_g.className="linear",ea(_g);class Fg extends Sg{apply(e){return Zi(e)}}Fg.className="sigmoid",ea(Fg);class Dg extends Sg{apply(e){return function(e){return sa((()=>{const t=da(.5,fi(.2,e));return La(t,0,1)}))}(e)}}Dg.className="hardSigmoid",ea(Dg);class Og extends Sg{apply(e){return ao(e)}}Og.className="softplus",ea(Og);class Lg extends Sg{apply(e){return function(e){return sa((()=>Ya(e,ha(e).add(1))))}(e)}}Lg.className="softsign",ea(Lg);class Mg extends Sg{apply(e){return co(e)}}Mg.className="tanh",ea(Mg);class zg extends Sg{apply(e,t=-1){return so(e,t)}}zg.className="softmax",ea(zg);class Bg extends Sg{apply(e,t=-1){return bi(e,t)}}Bg.className="logSoftmax",ea(Bg);class Pg extends Sg{apply(e,t=1){return sa((()=>Zi(e.mul(t)).mul(e)))}}function Wg(e){return e.getClassName()}function Ug(e,t={}){return $d(e,Qs.getMap().classNameMap,t,"activation")}function Vg(e){if(null==e){return Ug({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Ug(t)}return e instanceof Sg?e:Ug(e)}Pg.className="swish",ea(Pg);class Gg extends Zs{}class Hg extends Gg{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return sa((()=>{let t=zi([1]);return this.hasL1&&(t=da(t,mi(fi(this.l1,ha(e))))),this.hasL2&&(t=da(t,mi(fi(this.l2,vp(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Hg.className="L1L2",ea(Hg);const jg={l1l2:"L1L2"};function qg(e){return kd(e)}function Kg(e,t={}){return $d(e,Qs.getMap().classNameMap,t,"regularizer")}function Xg(e){return null==e?null:"string"==typeof e?Kg({className:e in jg?jg[e]:e,config:{}}):e instanceof Gg?e:Kg(e)}class Yg extends hf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Qp(e);let n=Ki(e);return null!=this.maxValue&&(n=La(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Yg.className="ReLU",ea(Yg);class Jg extends hf{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qp(e);return ci(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Jg.className="LeakyReLU",ea(Jg);class Zg extends hf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jp(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Xg(e.alphaRegularizer),this.alphaConstraint=Ud(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new hd(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ef(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new af({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Qp(e),Ui(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Hp(this.alphaInitializer),alphaRegularizer:qg(this.alphaRegularizer),alphaConstraint:Pd(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Zg.className="PReLU",ea(Zg);class Qg extends hf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new dd(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qp(e);return Ja(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Qg.className="ELU",ea(Qg);class em extends hf{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Qp(e);return n.mul(lp(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}em.className="ThresholdedReLU",ea(em);class tm extends hf{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new zg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Qp(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function nm(e,t,n){if("number"==typeof e)return fd(e,t);if(e.length!==t)throw new hd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new hd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function rm(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function sm(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+op([n-t,0]);else{if("same"!==r)throw new hd(`Unsupport padding mode: ${r}.`);e*=t}return e}function am(e,t){return sa((()=>(Xd(t),"channelsFirst"===t?yo(e,[0,2,3,1]):e)))}function im(e,t){return sa((()=>(Xd(t),"channelsFirst"===t?yo(e,[0,2,3,4,1]):e)))}function om(e,t,n,r=[1,1],s="valid",a,i,o=null){return sa((()=>{if(null==a&&(a="channelsLast"),Xd(a),3!==e.rank&&4!==e.rank)throw new hd(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new hd(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=am(e,a);if("causal"===s)throw new dd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Fo({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=yo(u,[0,3,1,2])),u}))}tm.className="Softmax",ea(tm);class um extends hf{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",um.verifyArgs(t),this.rank=e,Rd(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new dd(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=nm(t.kernelSize,e,"kernelSize"),this.strides=nm(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Yd(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Xd(this.dataFormat),this.activation=Vg(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=jp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ud(t.biasConstraint),this.biasRegularizer=Xg(t.biasRegularizer),this.activityRegularizer=Xg(t.activityRegularizer),this.dilationRate=nm(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new hd(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new hd(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new hd(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(gd("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Td(e.kernelSize,"number",1,3))throw new hd(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wg(this.activation),useBias:this.useBias,biasInitializer:Hp(this.biasInitializer),biasRegularizer:qg(this.biasRegularizer),activityRegularizer:qg(this.activityRegularizer),biasConstraint:Pd(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class lm extends um{constructor(e,t){super(e,t),this.kernel=null,lm.verifyArgs(t),this.filters=t.filters,Rd(this.filters,"filters"),this.kernelInitializer=jp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ud(t.kernelConstraint),this.kernelRegularizer=Xg(t.kernelRegularizer)}build(e){e=ef(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hd(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return sa((()=>{let t;e=Qp(e);const n=null==this.bias?null:this.bias.read(),r=_d(this.activation.getClassName());if(null!=r&&2===this.rank)t=om(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return sa((()=>{if(null==a&&(a="channelsLast"),Xd(a),3!==e.shape.length)throw new hd(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new hd(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new hd(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=yo(e,[0,2,1])),"causal"===s)throw new dd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Va(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=kp(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=om(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new dd("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return sa((()=>{if(null==a&&(a="channelsLast"),Xd(a),4!==e.rank&&5!==e.rank)throw new hd(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new hd(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=im(e,a);if("causal"===s)throw new dd("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ja(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=kp(o,n)),"channelsFirst"===a&&(o=yo(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ef(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=rm(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Hp(this.kernelInitializer),kernelRegularizer:qg(this.kernelRegularizer),kernelConstraint:Pd(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new hd(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class cm extends lm{constructor(e){super(2,e),cm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Td(e.kernelSize,"number",1,2))throw new hd(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}cm.className="Conv2D",ea(cm);class hm extends lm{constructor(e){super(3,e),hm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new hd(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}hm.className="Conv3D",ea(hm);class dm extends cm{constructor(e){if(super(e),this.inputSpec=[new af({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new hd(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ef(e)).length)throw new hd("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new af({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return sa((()=>{let t=Qp(e);if(4!==t.shape.length)throw new hd(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,sm(i,c,u,this.padding),sm(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=yo(t,[0,2,3,1]));let p=Ha(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=yo(p,[0,3,1,2])),null!=this.bias&&(p=kp(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=ef(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=sm(t[r],o,a,this.padding),t[s]=sm(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dm.className="Conv2DTranspose",ea(dm);class pm extends lm{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new hd("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new hd("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new hd(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=jp(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Xg(t.depthwiseRegularizer),this.depthwiseConstraint=Ud(t.depthwiseConstraint),this.pointwiseInitializer=jp(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Xg(t.pointwiseRegularizer),this.pointwiseConstraint=Ud(t.pointwiseConstraint)}build(e){if((e=ef(e)).length<this.rank+2)throw new hd(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new hd(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new af({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return sa((()=>{let t;if(e=Qp(e),1===this.rank)throw new dd("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=yo(e,[0,2,3,1])),t=Ji(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=kp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=yo(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Hp(this.depthwiseInitializer),e.pointwiseInitializer=Hp(this.pointwiseInitializer),e.depthwiseRegularizer=qg(this.depthwiseRegularizer),e.pointwiseRegularizer=qg(this.pointwiseRegularizer),e.depthwiseConstraint=Pd(this.depthwiseConstraint),e.pointwiseConstraint=Pd(this.pointwiseConstraint),e}}pm.className="SeparableConv";class fm extends pm{constructor(e){super(2,e)}}fm.className="SeparableConv2D",ea(fm);class gm extends lm{constructor(e){super(1,e),gm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Td(e.kernelSize,"number",1,1))throw new hd(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}gm.className="Conv1D",ea(gm);class mm extends hf{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return sa((()=>{if(e=Qp(e),"channelsLast"===this.dataFormat){const t=pp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return pp(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=pp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return pp(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}mm.className="Cropping2D",ea(mm);class bm extends hf{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Xd(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Ed(Gd,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return sa((()=>{let t=Qp(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=yo(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return yo(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}bm.className="UpSampling2D",ea(bm);class ym extends um{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=jp(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ud(e.depthwiseConstraint),this.depthwiseRegularizer=Xg(e.depthwiseRegularizer)}build(e){if((e=ef(e)).length<4)throw new hd(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new hd(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sa((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return sa((()=>{null==s&&(s="channelsLast"),Xd(s);let i=am(e,s);if(4!==e.rank)throw new hd(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new hd(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ka(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=yo(i,[0,3,1,2])),i}))}(e=Qp(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=kp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ef(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=rm(t,this.kernelSize[0],this.padding,this.strides[0]),a=rm(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Hp(this.depthwiseInitializer),e.depthwiseRegularizer=qg(this.depthwiseRegularizer),e.depthwiseConstraint=Pd(this.depthwiseRegularizer),e}}function xm(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new hd("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function vm(e,t,n,r=!1,s,a,i=!1,o=!1){return sa((()=>{const u=t.shape.length;if(u<3)throw new hd(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(up(2,u));if(t=yo(t,l),null!=a)throw new dd("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=ni(s,-1)),s=yo(s,l)),r&&(t=Xi(t,0),null!=s&&(s=Xi(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=fo(t);let g,m;null!=s&&(g=fo(s));for(let t=0;t<p;++t){const n=f[t],r=sa((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=sa((()=>{const e=g[t],n=Pi(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=lo(c,1)),[h,m,d]}))}ym.className="DepthwiseConv2D",ea(ym);class wm extends hf{constructor(e){let t;if(super(e),null==e.cell)throw new hd("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Tm({cells:e.cell}):e.cell,null==t.stateSize)throw new hd("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new af({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?up(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Jp(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return sa((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new dd("Constants support is not implemented in RNN yet.");Jp(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new af({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!b(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new hd(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new af({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){sa((()=>{if(!this.stateful)throw new ld("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new hd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>zi([n,e]))):this.states_=[zi([n,this.cell.stateSize])];else if(null==e)aa(this.states_),null!=this.keptStates&&(aa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>zi([n,e]))):this.states_[0]=zi([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):aa(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!b(r.shape,a))throw new hd(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ia(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=xm(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new af({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof of){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return sa((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Qp(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new hd(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=vm(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return sa((()=>{let t=zi(e.shape);return t=mi(t,[1,2]),t=cp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?mp(t,[1,e]):t)):this.cell.stateSize>1?[mp(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===wm.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Cf(t.cell,n);return new e(Object.assign(t,{cell:r}))}}wm.className="RNN",ea(wm);class km extends hf{}class Im extends km{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Rd(this.units,"units"),this.activation=Vg(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xg(e.kernelRegularizer),this.recurrentRegularizer=Xg(e.recurrentRegularizer),this.biasRegularizer=Xg(e.biasRegularizer),this.kernelConstraint=Ud(e.kernelConstraint),this.recurrentConstraint=Ud(e.recurrentConstraint),this.biasConstraint=Ud(e.biasConstraint),this.dropout=ip([1,op([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ip([1,op([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ef(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sa((()=>{if(2!==(e=e).length)throw new hd(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rm({ones:()=>Pi(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rm({ones:()=>Pi(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=yp(null!=a?fi(e,a):e,this.kernel.read()),null!=this.bias&&(s=kp(s,this.bias.read())),null!=i&&(n=fi(n,i));let o=da(s,yp(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wg(this.activation),useBias:this.useBias,kernelInitializer:Hp(this.kernelInitializer),recurrentInitializer:Hp(this.recurrentInitializer),biasInitializer:Hp(this.biasInitializer),kernelRegularizer:qg(this.kernelRegularizer),recurrentRegularizer:qg(this.recurrentRegularizer),biasRegularizer:qg(this.biasRegularizer),activityRegularizer:qg(this.activityRegularizer),kernelConstraint:Pd(this.kernelConstraint),recurrentConstraint:Pd(this.recurrentConstraint),biasConstraint:Pd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Im.className="SimpleRNNCell",ea(Im);class $m extends wm{constructor(e){e.cell=new Im(e),super(e)}call(e,t){return sa((()=>{null!=this.cell.dropoutMask&&(aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}$m.className="SimpleRNN",ea($m);class Cm extends km{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new hd("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Rd(this.units,"units"),this.activation=Vg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xg(e.kernelRegularizer),this.recurrentRegularizer=Xg(e.recurrentRegularizer),this.biasRegularizer=Xg(e.biasRegularizer),this.kernelConstraint=Ud(e.kernelConstraint),this.recurrentConstraint=Ud(e.recurrentConstraint),this.biasConstraint=Ud(e.biasConstraint),this.dropout=ip([1,op([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ip([1,op([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ef(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sa((()=>{if(2!==(e=e).length)throw new hd(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rm({ones:()=>Pi(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rm({ones:()=>Pi(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=fi(e,s[0]));let l=yp(e,this.kernel.read());this.useBias&&(l=kp(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=fi(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=io(c,[2*this.units,this.units],c.rank-1),p=yp(r,h),[f,g,m]=io(l,3,l.rank-1),[b,y]=io(p,2,p.rank-1);i=this.recurrentActivation.apply(da(f,b)),o=this.recurrentActivation.apply(da(g,y));const x=yp(fi(o,r),d);u=this.activation.apply(da(m,x));const v=da(fi(i,r),fi(da(1,Oi(i)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wg(this.activation),recurrentActivation:Wg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hp(this.kernelInitializer),recurrentInitializer:Hp(this.recurrentInitializer),biasInitializer:Hp(this.biasInitializer),kernelRegularizer:qg(this.kernelRegularizer),recurrentRegularizer:qg(this.recurrentRegularizer),biasRegularizer:qg(this.biasRegularizer),activityRegularizer:qg(this.activityRegularizer),kernelConstraint:Pd(this.kernelConstraint),recurrentConstraint:Pd(this.recurrentConstraint),biasConstraint:Pd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Cm.className="GRUCell",ea(Cm);class Nm extends wm{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Cm(e),super(e)}call(e,t){return sa((()=>{null!=this.cell.dropoutMask&&(aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Nm.className="GRU",ea(Nm);class Sm extends km{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Rd(this.units,"units"),this.activation=Vg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Xg(e.kernelRegularizer),this.recurrentRegularizer=Xg(e.recurrentRegularizer),this.biasRegularizer=Xg(e.biasRegularizer),this.kernelConstraint=Ud(e.kernelConstraint),this.recurrentConstraint=Ud(e.recurrentConstraint),this.biasConstraint=Ud(e.biasConstraint),this.dropout=ip([1,op([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ip([1,op([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ef(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Sp{apply(t,r){const s=e.apply([n]),a=(new Tp).apply([n]),i=e.apply([2*n]);return gp(gp(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return sa((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new hd(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rm({ones:()=>Pi(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rm({ones:()=>Pi(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=fi(e,a[0]));let h=yp(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=fi(r,i[0])),h=da(h,yp(r,this.recurrentKernel.read())),this.useBias&&(h=kp(h,this.bias.read()));const[d,p,f,g]=io(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=da(fi(u,s),fi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=fi(c,this.activation.apply(l));return[m,m,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wg(this.activation),recurrentActivation:Wg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hp(this.kernelInitializer),recurrentInitializer:Hp(this.recurrentInitializer),biasInitializer:Hp(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:qg(this.kernelRegularizer),recurrentRegularizer:qg(this.recurrentRegularizer),biasRegularizer:qg(this.biasRegularizer),activityRegularizer:qg(this.activityRegularizer),kernelConstraint:Pd(this.kernelConstraint),recurrentConstraint:Pd(this.recurrentConstraint),biasConstraint:Pd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Sm.className="LSTMCell",ea(Sm);class Em extends wm{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sm(e),super(e)}call(e,t){return sa((()=>{null!=this.cell.dropoutMask&&(aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Em.className="LSTM",ea(Em);class Tm extends km{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return sa((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Jp(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Qd(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Cf(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return rf(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}sf(t)}}function Rm(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>Ip(t(),n),i=()=>$p(a,t,r);return!s||s<=1?ia(i().clone()):Array(s).fill(void 0).map(i).map((e=>ia(e.clone())))}Tm.className="StackedRNNCells",ea(Tm);var Am,_m;class Fm extends wm{constructor(e){if(e.unroll)throw new dd("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new dd("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new af({ndim:5})]}call(e,t){return sa((()=>{if(null!=this.cell.dropoutMask&&(aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new hd("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return sa((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=zi([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){sa((()=>{if(!this.stateful)throw new ld("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new hd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>zi(s))):this.states_=[zi(s)];else if(null==e)aa(this.states_),null!=this.keptStates&&(aa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>zi(s))):this.states_[0]=zi(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):aa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!b(n.shape,r))throw new hd(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ia(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=rm(u,r[0],s,a[0],i[0]),h=rm(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Fm.className="ConvRNN2D";class Dm extends Sm{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Rd(this.filters,"filters"),this.kernelSize=nm(n,2,"kernelSize"),this.kernelSize.forEach((e=>Rd(e,"kernelSize"))),this.strides=nm(r||1,2,"strides"),this.strides.forEach((e=>Rd(e,"strides"))),this.padding=s||"valid",Yd(this.padding),this.dataFormat=a||"channelsLast",Xd(this.dataFormat),this.dilationRate=nm(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Rd(e,"dilationRate")))}build(e){var t;e=ef(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new hd(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Sp{apply(e,t){return fp([n.apply([r]),Bi([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return sa((()=>{if(3!==e.length)throw new hd(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rm({ones:()=>Pi(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?fi(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rm({ones:()=>Pi(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[b,y,x,v]=io(this.kernel.read(),4,3),[w,k,I,$]=this.useBias?io(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,w,this.padding),l=this.inputConv(l,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,$,this.padding);const[C,N,S,E]=io(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),g=this.recurrentConv(g,S),m=this.recurrentConv(m,E);const T=this.recurrentActivation.apply(da(u,p)),R=this.recurrentActivation.apply(da(l,f)),A=da(fi(R,a),fi(T,this.activation.apply(da(c,g)))),_=fi(this.recurrentActivation.apply(da(h,m)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=Ua(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?kp(s,n,this.dataFormat):s}recurrentConv(e,t){return Ua(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Dm.className="ConvLSTM2DCell",ea(Dm);class Om extends Fm{constructor(e){const t=new Dm(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Om.className="ConvLSTM2D",ea(Om);class Lm extends hf{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return sa((()=>{this.invokeCallHook(e,t);const n=Qp(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return $p((()=>Ip(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Lm.className="Dropout",ea(Lm);class Mm extends Lm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Mm.className="SpatialDropout1D",ea(Mm);class zm extends hf{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Rd(this.units,"units"),this.activation=Vg(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=jp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ud(e.kernelConstraint),this.biasConstraint=Ud(e.biasConstraint),this.kernelRegularizer=Xg(e.kernelRegularizer),this.biasRegularizer=Xg(e.biasRegularizer),this.activityRegularizer=Xg(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ef(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ef(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return sa((()=>{this.invokeCallHook(e,t);const n=Qp(e),r=_d(this.activation.getClassName());let s;return null!=r?s=yp(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=yp(n,this.kernel.read()),null!=this.bias&&(s=kp(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Wg(this.activation),useBias:this.useBias,kernelInitializer:Hp(this.kernelInitializer),biasInitializer:Hp(this.biasInitializer),kernelRegularizer:qg(this.kernelRegularizer),biasRegularizer:qg(this.biasRegularizer),activityRegularizer:qg(this.activityRegularizer),kernelConstraint:Pd(this.kernelConstraint),biasConstraint:Pd(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}zm.className="Dense",ea(zm);class Bm extends hf{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ef(e);for(const t of e.slice(1))if(null==t)throw new hd(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],sp(e,1)]}call(e,t){return sa((()=>{this.invokeCallHook(e,t);let n=Qp(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new hd(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],sp(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Bm.className="Flatten",ea(Bm);class Pm extends hf{constructor(e){super(e),this.supportsMasking=!0,this.activation=Vg(e.activation)}call(e,t){return sa((()=>{this.invokeCallHook(e,t);const n=Qp(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Wg(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Pm.className="Activation",ea(Pm);class Wm extends hf{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return sa((()=>{return e=Qp(e),t=e,n=this.n,sa((()=>{if(2!==t.shape.length)throw new hd(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return mp(cp(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Wm.className="RepeatVector",ea(Wm);class Um extends hf{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new hd("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=sp(e);if(null!==a){if(0===s||i%s!=0)throw new hd(n);r[a]=i/s}else if(i!==s)throw new hd(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return sa((()=>{this.invokeCallHook(e,t);const n=Qp(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Um.className="Reshape",ea(Um);class Vm extends hf{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=up(1,e.dims.length+1);if(!b(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new af({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ef(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return yo(Qp(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Vm.className="Permute",ea(Vm);class Gm extends hf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Qp(e);return fa(Li(n,this.maskValue),-1)}call(e,t){return sa((()=>{this.invokeCallHook(e,t);const n=Qp(e),r=fa(Li(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Gm.className="Masking",ea(Gm);class Hm extends hf{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(yd(e.inputLength))}this.inputDim=e.inputDim,Rd(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Rd(this.outputDim,"outputDim"),this.embeddingsInitializer=jp(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Xg(e.embeddingsRegularizer),this.activityRegularizer=Xg(e.activityRegularizer),this.embeddingsConstraint=Ud(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return sa((()=>this.maskZero?(e=Qp(e),Li(e,bo(e))):null))}computeOutputShape(e){if(e=ef(e),null==this.inputLength)return[...e,this.outputDim];const t=yd(this.inputLength);if(t.length!==e.length-1)throw new hd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new hd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return sa((()=>{this.invokeCallHook(e,t);let n=Qp(e);return"int32"!==n.dtype&&(n=lp(n,"int32")),xp(this.embeddings.read(),n.as1D()).reshape(ef(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Hp(this.embeddingsInitializer),embeddingsRegularizer:qg(this.embeddingsRegularizer),activityRegularizer:qg(this.activityRegularizer),embeddingsConstraint:Pd(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Hm.className="Embedding",ea(Hm);class jm extends hf{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new dd}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new hd("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ef(e)]),(e=e).length<2)throw new hd(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Nd(t),t.length>1)throw new hd(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Nd(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return sa((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=op(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=cp(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat(sp(e.slice(1))));i=yo(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=up(1,e).concat([0]);t.push(yo(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=yo(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(up(0,s-1));r=yo(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Nd(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return sa((()=>{if(null==t)return null;if(!Array.isArray(t))throw new hd("`mask` should be an Array");if(!Array.isArray(e))throw new hd("`inputs` should be an Array");if(t.length!==e.length)throw new hd(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ni(e,0))))[0];for(let e=1;e<t.length-1;++e)n=yi(n,t[e]);return n}))}}class qm extends jm{constructor(e){super(e)}mergeFunction(e){return sa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=da(t,e[n]);return t}))}}qm.className="Add",ea(qm);class Km extends jm{constructor(e){super(e)}mergeFunction(e){return sa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=fi(t,e[n]);return t}))}}Km.className="Multiply",ea(Km);class Xm extends jm{constructor(e){super(e)}mergeFunction(e){return sa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=da(t,e[n]);return fi(1/e.length,t)}))}}Xm.className="Average",ea(Xm);class Ym extends jm{constructor(e){super(e)}mergeFunction(e){return sa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wi(t,e[n]);return t}))}}Ym.className="Maximum",ea(Ym);class Jm extends jm{constructor(e){super(e)}mergeFunction(e){return sa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$i(t,e[n]);return t}))}}Jm.className="Minimum",ea(Jm);class Zm extends jm{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new hd("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(b(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new hd("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return sa((()=>fp(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new hd("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new hd("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new hd("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new hd(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return sa((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Pi(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(ni(t[n],-1)):r.push(t[n]);const s=Ma(r,this.axis);return pa(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Qm(e,t){for(;e<0;)e+=t;return e}Zm.className="Concatenate",ea(Zm);class eb extends jm{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){d(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new dd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new hd(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new hd(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Qm(t,e[n].shape.length))):[Qm(this.axes,n.shape.length),Qm(this.axes,r.shape.length)],this.normalize&&(n=Nf(n,t[0]),r=Nf(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new dd("batchDot is not implemented for tensors of 4D or higher rank yet");if(d(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),d(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new dd("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return sa((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Qm(this.axes,e.length),Qm(this.axes,t.length)],n}computeOutputShape(e){d(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new dd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}eb.className="Dot",ea(eb);class tb extends hf{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return sa((()=>{this.invokeCallHook(e,t);const n=Qp(e);return $p((()=>bp(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}tb.className="GaussianNoise",ea(tb);class nb extends hf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return sa((()=>{this.invokeCallHook(e,t);const n=Qp(e);return this.rate>0&&this.rate<1?$p((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(bp(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}nb.className="GaussianDropout",ea(nb);class rb extends hf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Qp(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return sa((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return $p((()=>{const t=Qp(e),r=-1.7580993408473766;let s=li(qi(n),this.rate);s=lp(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>Qp(e)),t.training||!1)}return e}))}}function sb(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Fa(e,t,n,r,s,a);else if(3===e.rank)i=Da(e,t,n,r,s,a);else{if(4!==e.rank)throw new dd(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Oa(e,t,n,r,s,a)}return i}rb.className="AlphaDropout",ea(rb);class ab extends hf{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jp(e.betaInitializer||"zeros"),this.gammaInitializer=jp(e.gammaInitializer||"ones"),this.movingMeanInitializer=jp(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jp(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ud(e.betaConstraint),this.gammaConstraint=Ud(e.gammaConstraint),this.betaRegularizer=Xg(e.betaRegularizer),this.gammaRegularizer=Xg(e.gammaRegularizer)}build(e){e=ef(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new hd(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new af({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return sa((()=>{const n=null!=t.training&&t.training,r=Qp(e),s=r.shape,a=s.length,i=up(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=fd(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!b(l,up(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return sb(r,e,t,n,s,this.epsilon)}return sb(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return b(r.slice().sort(),up(0,e.rank-1))?function(e,t,n,r,s=.001){return sa((()=>{const a=Di(e,r),i=a.mean,o=a.variance;return[sb(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return sa((()=>{const a=Di(e,r),i=a.mean,o=a.variance,u=[];for(const t of up(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),c=o.reshape(u),h=null==t?null:t.reshape(u),d=null==n?null:n.reshape(u);return[sb(e,l,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{sa((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hp(this.betaInitializer),gammaInitializer:Hp(this.gammaInitializer),movingMeanInitializer:Hp(this.movingMeanInitializer),movingVarianceInitializer:Hp(this.movingVarianceInitializer),betaRegularizer:qg(this.betaRegularizer),gammaRegularizer:qg(this.gammaRegularizer),betaConstraint:Pd(this.betaConstraint),gammaConstraint:Pd(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ab.className="BatchNormalization",ea(ab);class ib extends hf{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jp(e.betaInitializer||"zeros"),this.gammaInitializer=jp(e.gammaInitializer||"ones"),this.betaRegularizer=Xg(e.betaRegularizer),this.gammaRegularizer=Xg(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ef(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Nd(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Qp(e),r=n.shape,s=r.length;return sa((()=>{let{mean:e,variance:t}=Di(n,this.axis,!0);const a=fd(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=e.tile(l),t=t.tile(l),o=o.tile(c),u=u.tile(c),sb(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hp(this.betaInitializer),gammaInitializer:Hp(this.gammaInitializer),betaRegularizer:qg(this.betaRegularizer),gammaRegularizer:qg(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ib.className="LayerNormalization",ea(ib);class ob extends hf{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new hd(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new hd(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new hd(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new af({ndim:4})]}computeOutputShape(e){let t,n;return e=ef(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return sa((()=>{return t=Qp(e),n=this.padding,r=this.dataFormat,sa((()=>{if(4!==t.rank)throw new hd(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new hd("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new hd(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Wi(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ub(e,t,n,r,s,a){return sa((()=>{let i;Xd(s),Jd(a),Yd(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=am(e,s);const o="same"===r?"same":"valid";return i="max"===a?xi(e,t,n,o):Ra(e,t,n,o),"channelsFirst"===s&&(i=yo(i,[0,3,1,2])),i}))}function lb(e,t,n,r,s,a){return sa((()=>{let i;Xd(s),Jd(a),Yd(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=im(e,s);const o="same"===r?"same":"valid";return i="max"===a?vi(e,t,n,o):Aa(e,t,n,o),"channelsFirst"===s&&(i=yo(i,[0,4,1,2,3])),i}))}ob.className="ZeroPadding2D",ea(ob);class cb extends hf{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new hd(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Rd(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new hd(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Rd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Yd(this.padding),this.inputSpec=[new af({ndim:3})]}computeOutputShape(e){const t=rm((e=ef(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return sa((()=>{this.invokeCallHook(e,t),e=cp(Qp(e),2);const n=this.poolingFunction(Qp(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return uo(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class hb extends cb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Xd(s),Yd(r),ub(e,t,n,r,s,"max")}}hb.className="MaxPooling1D",ea(hb);class db extends cb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Xd(s),Yd(r),ub(e,t,n,r,s,"avg")}}db.className="AveragePooling1D",ea(db);class pb extends hf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new hd(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Rd(this.poolSize,"poolSize"),Rd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Xd(this.dataFormat),Yd(this.padding),this.inputSpec=[new af({ndim:4})]}computeOutputShape(e){e=ef(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=rm(t,this.poolSize[0],this.padding,this.strides[0]),n=rm(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return sa((()=>(this.invokeCallHook(e,t),this.poolingFunction(Qp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class fb extends pb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Xd(s),Yd(r),ub(e,t,n,r,s,"max")}}fb.className="MaxPooling2D",ea(fb);class gb extends pb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Xd(s),Yd(r),ub(e,t,n,r,s,"avg")}}gb.className="AveragePooling2D",ea(gb);class mb extends hf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new hd(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Rd(this.poolSize,"poolSize"),Rd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Xd(this.dataFormat),Yd(this.padding),this.inputSpec=[new af({ndim:5})]}computeOutputShape(e){e=ef(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=rm(t,this.poolSize[0],this.padding,this.strides[0]),n=rm(n,this.poolSize[1],this.padding,this.strides[1]),r=rm(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return sa((()=>(this.invokeCallHook(e,t),this.poolingFunction(Qp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class bb extends mb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Xd(s),Yd(r),lb(e,t,n,r,s,"max")}}bb.className="MaxPooling3D",ea(bb);class yb extends mb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Xd(s),Yd(r),lb(e,t,n,r,s,"avg")}}yb.className="AveragePooling3D",ea(yb);class xb extends hf{constructor(e){super(e),this.inputSpec=[new af({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new dd}}class vb extends xb{constructor(e){super(e||{})}call(e,t){return sa((()=>{const t=Qp(e);return ki(t,1)}))}}vb.className="GlobalAveragePooling1D",ea(vb);class wb extends xb{constructor(e){super(e||{})}call(e,t){return sa((()=>{const t=Qp(e);return pi(t,1)}))}}wb.className="GlobalMaxPooling1D",ea(wb);class kb extends hf{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Xd(this.dataFormat),this.inputSpec=[new af({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new dd}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ib extends kb{call(e,t){return sa((()=>{const t=Qp(e);return"channelsLast"===this.dataFormat?ki(t,[1,2]):ki(t,[2,3])}))}}Ib.className="GlobalAveragePooling2D",ea(Ib);class $b extends kb{call(e,t){return sa((()=>{const t=Qp(e);return"channelsLast"===this.dataFormat?pi(t,[1,2]):pi(t,[2,3])}))}}$b.className="GlobalMaxPooling2D",ea($b);class Cb extends hf{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Cf(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Nb extends Cb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ef(e)).length<3)throw new hd(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ef(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return sa((()=>vm(((e,n)=>[Qp(this.layer.call(e,t)),[]]),e=Qp(e),[],!1,null,null,!1,!0)[1]))}}Nb.className="TimeDistributed",ea(Nb);class Sb extends Cb{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Cf(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Cf(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Ed(qd,"BidirectionalMergeMode",s),e.weights)throw new dd("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):bd(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=xm(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new hd("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new af({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new dd("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof of;for(const e of a)if(e instanceof of!==o)throw new hd("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return sa((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Xi(s,1)),"concat"===this.mergeMode?i=fp([r,s]):"sum"===this.mergeMode?i=da(r,s):"ave"===this.mergeMode?i=fi(.5,da(r,s)):"mul"===this.mergeMode?i=fi(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Qd(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Qd(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Cf(t.layer);if(delete t.layer,null!=t.numConstants)throw new dd("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Sb.className="Bidirectional",ea(Sb),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Am||(Am={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(_m||(_m={}));var Eb,Tb,Rb=n(377);function Ab(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Ob(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Ab(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function _b(e,t=Db){return Fb(e,t)}function Fb(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Ob(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Fb(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Db(e){return null===e?null:Ob(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Ob(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof gr))}function Lb(e){return Ab(e,Mb)}function Mb(e){return e instanceof gr?{value:e.clone(),recurse:!1}:Ob(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class zb{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Bb extends zb{constructor(){super(Bb.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Bb.INITIAL_CAPACITY=32;class Pb{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Xb(this,e)}filter(e){return new qb(this,e)}map(e){return new Kb(this,e)}mapAsync(e){return new Yb(this,e)}serialMapAsync(e){return new Yb(this,e).serial()}flatmap(e){return new Zb(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new jb(this,e,t)}columnMajorBatch(e,t=!0,n=Db){return this.rowMajorBatch(e,t).map((e=>_b(e,n)))}concatenate(e,t){return new Qb(new Wb([this,e]),t)}take(e){return e<0||null==e?this:new Hb(this,e)}skip(e){return e<0||null==e?this:new Gb(this,e)}prefetch(e){return new ey(this,e)}shuffle(e,t){return new ty(this,e,t)}serial(){return new Vb(this)}}class Wb extends Pb{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Lb(e),done:!1}}}class Ub extends Pb{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Vb extends Pb{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Gb extends Pb{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;aa(e.value)}return this.upstream.next()}}class Hb extends Pb{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class jb extends Pb{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class qb extends Pb{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;aa(e.value)}}}class Kb extends Pb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Sr(e.value),n=this.transform(e.value),r=Sr(n);for(const e of t)Nr(e,r)||e.dispose();return{value:n,done:!1}}}class Xb extends Pb{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Yb extends Pb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Sr(e.value),n=await this.transform(e.value),r=Sr(n);for(const e of t)Nr(e,r)||e.dispose();return{value:n,done:!1}}}class Jb extends Pb{constructor(){super(),this.outputQueue=new Bb,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Zb extends Jb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Sr(e.value),n=this.transform(e.value),r=Sr(n);this.outputQueue.pushAll(n);for(const e of t)Nr(e,r)||e.dispose();return!0}}class Qb extends Pb{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Tb=Eb||(Eb={}))[Tb.FAIL=0]="FAIL",Tb[Tb.SHORTEST=1]="SHORTEST",Tb[Tb.LONGEST=2]="LONGEST";class ey extends Pb{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new zb(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class ty extends ey{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Rb.alea(n||ur().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class ny{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return d(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ry((async()=>(await n.iterator()).columnMajorBatch(e,t,sy)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ry((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ry((async()=>(await t.iterator()).filter((t=>sa((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ry((async()=>(await t.iterator()).map((t=>sa((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ry((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ry((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ry((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new Ub(s)).take(e),new Qb(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ry((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Rb.alea(t||ur().toString());return ry((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ry((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ry(e,t=null){return new class extends ny{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function sy(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof gr||E(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof gr?lo(e):Gr(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function ay(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&d("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}ny.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const iy=dl;class oy extends o{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,na())}write(e,t,n){this.firstUse&&(this.firstUse=!1,j().get("IS_NODE")&&Ku("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>lr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Yu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>cr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Is(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return na().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=ur();return e(),{kernelMs:ur()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ay([e],"where");const t=this.readSync(e.dataId);return iy(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function uy(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(ay(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=m(i.shape),c=n||i.dtype,h=N(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],s);return o.makeTensorInfo(i.shape,c,h)}}function ly(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(ay(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}oa("cpu",(()=>new oy),1);const cy=uy(Ge,(e=>e>=0?e:Math.exp(e)-1)),hy={kernelName:Ge,backendName:"cpu",kernelFunc:cy};function dy(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const py={kernelName:ot,backendName:"cpu",kernelFunc:dy};function fy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;ay([s],"leakyRelu");const i=m(s.shape),o=n.data.get(s.dataId).values,u=C("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const gy={kernelName:pt,backendName:"cpu",kernelFunc:fy};function my(e){return(t,n,r,s,a)=>{const i=ei(t,n),o=i.length,u=O(i),l=C(a,m(i)),c=t.length,h=n.length,d=O(t),p=O(n),f=Za(t,i),g=Za(n,i);if(f.length+g.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=V(t,o,u),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=U(a,c,d),m=n.slice(-h);g.forEach((e=>m[e]=0));const b=U(m,h,p);l[t]=e(r[i],s[b])}return[l,i]}}const by=my(((e,t)=>e<0?t*e:e));function yy(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;ay([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=by(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const xy={kernelName:Kt,backendName:"cpu",kernelFunc:yy},vy=uy(Qt,(e=>Math.max(0,e))),wy={kernelName:Qt,backendName:"cpu",kernelFunc:vy},ky=uy(an,(e=>Math.min(Math.max(0,e),6))),Iy={kernelName:an,backendName:"cpu",kernelFunc:ky};function $y(e,t,n,r,s){if("linear"===n)return dy({inputs:{x:t},backend:e});if("relu"===n)return vy({inputs:{x:t},backend:e});if("elu"===n)return cy({inputs:{x:t},backend:e});if("relu6"===n)return ky({inputs:{x:t},backend:e});if("prelu"===n)return yy({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return fy({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Cy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Ny={kernelName:we,backendName:"cpu",kernelFunc:Cy};function Sy(e,t,n="float32"){if("complex64"===n)return Cy({inputs:{real:Sy(e,t,"float32"),imag:Sy(e,t,"float32")},backend:e});const r=B(m(t),n);return e.makeTensorInfo(t,n,r)}function Ey(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Ty={kernelName:Jt,backendName:"cpu",kernelFunc:Ey};function Ry(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return dy({inputs:{x:s},backend:n});const e=Sy(n,s.shape,s.dtype),t=Ry({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Cy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=Ey({inputs:{input:s},backend:n}),t=Ry({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!S(s.dtype,a)){const e=dy({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=or([0],s.dtype),[r,a]=my(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const Ay={kernelName:ye,backendName:"cpu",kernelFunc:Ry};function _y(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;ay([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c=r||a.dtype,[h,d]=t(a.shape,i.shape,u,l,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a:a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=Ry({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=Ry({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(a.shape,i.shape,u,l,f,g),x=o.makeTensorInfo(y,"float32",m),v=o.makeTensorInfo(y,"float32",b),w=Cy({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function Fy(e){return(t,n,r,s,a,i)=>{const o=ei(t,n),u=m(o),l=o.length,c=O(o),h=C("float32",u),d=C("float32",u),p=Za(t,o),f=Za(n,o),g=Yu(r,s),b=Yu(a,i),y=t.length,x=O(t),v=n.length,w=O(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%b.length,s=e(g[2*n],g[2*n+1],b[2*r],b[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=V(t,l,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=U(r,y,x),a=n.slice(-v);f.forEach((e=>a[e]=0));const i=U(a,v,w),o=e(g[2*s],g[2*s+1],b[2*i],b[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const Dy=my(((e,t)=>e+t)),Oy=Fy(((e,t,n,r)=>({real:e+n,imag:t+r}))),Ly=_y(ee,Dy,Oy),My={kernelName:ee,backendName:"cpu",kernelFunc:Ly};function zy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=m(s.shape),o=k(a,i),u=m(o);d(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const By={kernelName:en,backendName:"cpu",kernelFunc:zy};function Py(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;ay([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],f=o?a.shape[l-2]:a.shape[l-1],g=s.shape.slice(0,-2),b=a.shape.slice(0,-2),y=m(g),x=m(b);d(u>=2&&l>=2&&(y===x||1===y||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${b}).`));const v=(y>x?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,f]);d(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[x,f,h]:[x,h,f],k=zy({inputs:{x:s},backend:n,attrs:{shape:i?[y,c,p]:[y,p,c]}}),I=zy({inputs:{x:a},backend:n,attrs:{shape:w}}),$=i?k.shape[1]:k.shape[2],C=i?k.shape[2]:k.shape[1],N=o?I.shape[1]:I.shape[2],S=Math.max(y,x),E=n.data.get(k.dataId).values,T=n.data.get(I.dataId).values,R=O(k.shape),A=O(I.shape),[_,F,D]=i?[R[0],1,R[1]]:[R[0],R[1],1],[L,M,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],B=C*N,P=Is([S,C,N],k.dtype),W=P.values,U=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<C;t+=U)for(let n=0;n<N;n+=U)for(let r=0;r<$;r+=U){const s=Math.min(t+U,C),a=Math.min(n+U,N),i=Math.min(r+U,$);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,y-1)*_,a=Math.min(e,x-1)*z;n+=E[r+o*F+s*D]*T[s*L+t*M+a]}W[e*B+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,P.dtype,P.values)}const Wy={kernelName:ge,backendName:"cpu",kernelFunc:Py},Uy={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=Py({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=Ly({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=$y(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function Vy(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Gy={kernelName:J,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;ay(t,"abs");let r=new Float32Array(m(t.shape));return r=Vy(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},Hy=uy(Z,(e=>Math.acos(e))),jy={kernelName:Z,backendName:"cpu",kernelFunc:Hy},qy=uy(Q,(e=>Math.acosh(e))),Ky={kernelName:Q,backendName:"cpu",kernelFunc:qy},Xy={kernelName:te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;ay(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=Is(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Yy(e,t,n,r,s){const a=t.length,i=m(t),o=O(t),u=O(s),l=C(n,m(s));for(let t=0;t<i;++t){const n=V(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[U(s,a,u)]=e[t]}return l}function Jy(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;ay(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=Yy(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Zy={kernelName:Fn,backendName:"cpu",kernelFunc:Jy},Qy={kernelName:ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;ay(s,"all");const o=I(a,s.shape);let u=o;const l=Ri(u,s.shape.length);let c=s;null!=l&&(c=Jy({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_i(u.length,s.shape.length)),Ti("all",u,c.shape.length);const[h,d]=Si(c.shape,u),p=m(d),f=B(m(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=zy({inputs:{x:b},backend:n,attrs:{shape:Ei(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},ex={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;ay(s,"any");const o=I(a,s.shape);let u=o;const l=Ri(u,s.shape.length);let c=s;null!=l&&(c=Jy({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_i(u.length,s.shape.length)),Ti("any",u,c.shape.length);const[h,d]=Si(c.shape,u),p=m(d),f=B(m(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=zy({inputs:{x:b},backend:n,attrs:{shape:Ei(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},tx={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;ay(s,"argMax");let i=I(a,s.shape);const o=Ri(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Jy({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=_i(i.length,u.shape.length)),i=[i[0]],Ti("argMax",i,u.shape.length);const[c,h]=Si(u.shape,i),d=B(m(c),"int32"),p=m(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},nx={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;ay(s,"argMin");let i=I(a,s.shape);const o=Ri(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Jy({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=_i(i.length,u.shape.length)),i=[i[0]],Ti("argMin",i,u.shape.length);const[c,h]=Si(u.shape,i),d=B(m(c),"int32"),p=m(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},rx=uy(ie,(e=>Math.asin(e))),sx={kernelName:ie,backendName:"cpu",kernelFunc:rx},ax=uy(oe,(e=>Math.asinh(e))),ix={kernelName:oe,backendName:"cpu",kernelFunc:ax},ox=uy(ue,(e=>Math.atan(e))),ux={kernelName:ue,backendName:"cpu",kernelFunc:ox},lx=my(((e,t)=>Math.atan2(e,t))),cx=_y(ce,lx),hx={kernelName:ce,backendName:"cpu",kernelFunc:cx},dx=uy(le,(e=>Math.atanh(e))),px={kernelName:le,backendName:"cpu",kernelFunc:dx};function fx(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Is(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,v=0;for(let n=w;n<k;n+=u){const s=g+n*r[1];for(let n=c;n<d;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,v++)}if(isNaN(b))break}m[I+n*x+t]="avg"===a?y/v:b}}}return g}function gx(e,t,n,r,s=!1,a=!1){const i=Is(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=Is(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=l;const y=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=l){const i=n-m;for(let o=p;o<x;o+=c){const u=o-h,l=g.get(e,n,o,t);l>v&&(v=l,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(w,e,n,o,t)}}return i}function mx(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Is(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],$=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const C=w*i-g;let N=C;for(;N<0;)N+=l;const S=Math.min(s.inDepth,d+C),E=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+i),w=E+n*I;for(let n=0;n<s.outWidth;++n){const i=n*u-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),m=w+n*$;let k=y,I=0,C=0;for(let n=N;n<S;n+=l){const s=x+n*r[1];for(let n=d;n<g;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+t]="avg"===a?I/C:k}}}}return x}const bx={kernelName:he,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ay(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;d(Sa(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ba(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))c=dy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=fx(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},yx={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l,dilations:c}=r;ay(s,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const d=ya(s.shape,a,i,h,o,u,l),p=mx(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},xx={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;ay([s,a],"avgPool3DGrad");const h=ya(a.shape,i,o,l,u,c),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,I=h.effectiveFilterWidth,$=w-1-h.padInfo.front,C=I-1-h.padInfo.left,N=k-1-h.padInfo.top,S=Is(a.shape,"float32"),E=1/(g*m*b),T=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const a=n-$,i=r-N,o=s-C;let u=0;for(let n=0;n<w;n+=y){const r=(a+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const s=(i+n)/p;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<I;n+=v){const a=(o+n)/f;a<0||a>=h.outWidth||Math.floor(a)!==a||(u+=T.get(e,r,s,a,t))}}}S.set(u*E,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},vx={kernelName:de,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;ay([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=ba(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=Is(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,$=Is(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<b;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=m){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=$.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},wx={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;d(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),ay([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),g=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),b=g.length,y=f.length,x=p.length,v=h.length;let w=0,k=0,I=0,$=0;for(let e=0;e<c.length;++e)m[e]=g[w++]+(c[e]-h[k++])*f[I++]/Math.sqrt(p[$++]+l),w>=b&&(w=0),k>=v&&(k=0),I>=y&&(I=0),$>=x&&($=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function kx(e,t,n,r,s){const a=Ks(r,t,n),i=m(n),o=O(r);if(a){const n=Xs(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u=Is(r,s,"string"===s?cl(e):e),l=Is(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?hl(l.values):l.values}function Ix(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;ay(s,"slice");const[o,u]=Ys(s,a,i);Ls(s,o,u);const l=kx(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const $x={kernelName:pn,backendName:"cpu",kernelFunc:Ix},Cx={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;ay([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=Au(s.shape,a,o),l=_u(u.length,a.length),c=Fu(s.shape,a,o),h=Du(i,a.length),d=Ou(c,i,a.length),p=zy({inputs:{x:s},backend:n,attrs:{shape:u}}),f=Jy({inputs:{x:p},backend:n,attrs:{perm:l}}),g=zy({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Ix({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function Nx(e,t,n,r,s){const a=m(r),i=B(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function Sx(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=Is([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const Ex={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=Nx(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function Tx(e){return(t,n,r)=>{const s=C(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const Rx=Tx((e=>Math.ceil(e))),Ax=ly(xe,Rx),_x={kernelName:xe,backendName:"cpu",kernelFunc:Ax},Fx=uy(ve,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Dx={kernelName:ve,backendName:"cpu",kernelFunc:Fx},Ox={kernelName:ke,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(m(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Lx(e,t,n,r){const s=N(n,m(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=m(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?cl(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function Mx(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const zx={kernelName:lt,backendName:"cpu",kernelFunc:Mx};function Bx(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=I(s,t[0].shape)[0];let i=Su(t.map((e=>e.shape)),a);if(0===m(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>m(e.shape)>0));if(1===o.length)return dy({inputs:{x:o[0]},backend:n});if(Nu(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>Ey({inputs:{input:e},backend:n}))),t=o.map((e=>Mx({inputs:{input:e},backend:n}))),r=Bx({inputs:e,backend:n,attrs:{axis:a}}),s=Bx({inputs:t,backend:n,attrs:{axis:a}}),i=Cy({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((e=>{const t=m(e.shape.slice(a));return zy({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Su(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=Lx(l,i,t[0].dtype,c),d=Su(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Px={kernelName:Ie,backendName:"cpu",kernelFunc:Bx};function Wx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;ay([s,a],"conv2d");const h=Ea(u),d=xa(s.shape,a.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new hr(d.outShape,s.dtype),w=O(s.shape),k=O(a.shape),I=w[0],$=x?w[1]:w[2],C=x?w[2]:1,N=x?1:w[1],S=v.strides[0],E=x?v.strides[1]:v.strides[2],T=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,F=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*S;for(let e=0;e<d.outHeight;++e){const r=n+e*E,s=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*$;for(let e=0;e<d.outWidth;++e){const t=r+e*T,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+r*C;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*N];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const Ux={kernelName:$e,backendName:"cpu",kernelFunc:Wx},Vx={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;ay([s,a],"conv2dBackpropFilter");const h=Ea(u),d=xa(s.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,y=new hr(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new hr(s.shape,s.dtype,w),$=new hr(a.shape,a.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;u+=b?I.get(l,t,n,i)*$.get(l,c,e,o):I.get(l,i,t,n)*$.get(l,o,c,e)}}y.set(u,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Gx={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;ay([s,a],"conv2dBackpropInput");const h=O(a.shape),d=O(s.shape);let p=Ea(l);const f=xa(i,a.shape,o,1,u,c,!1,p),g=new hr(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:$,inChannels:C,inHeight:N,inWidth:S,outChannels:E,outHeight:T,outWidth:R,strideHeight:A,strideWidth:_}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=$-1-f.padInfo.left,L="channelsLast"===p,M=g.strides[0],z=L?g.strides[1]:g.strides[2],B=L?g.strides[2]:1,P=L?1:g.strides[1],W=d[0],U=L?d[1]:d[2],V=L?d[2]:1,G=L?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<C;++t)for(let n=0;n<N;++n){const r=n-F,s=Math.max(0,Math.ceil(r/A)),a=Math.min(T,(I+r)/A);for(let i=0;i<S;++i){const o=i-D,u=Math.max(0,Math.ceil(o/_)),l=Math.min(R,($+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*A-r;for(let r=u;r<l;++r){const a=W*e+U*n+V*r,i=x*(I-1-s)+v*($-1-(r*_-o))+w*t;for(let e=0;e<E;++e)c+=b[a+G*e]*y[i+e]}}m[M*e+z*n+B*i+P*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Hx={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;ay([s,a],"conv3d");const l=va(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=l,b=m.front,y=m.left,x=m.top,v=new hr(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,$=O(s.shape),C=O(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*$[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],s=e*l.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=l.inDepth)continue;const a=e*C[0],i=t+n*$[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*C[1],o=i+r*$[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=l.inWidth)continue;const a=s+e*C[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},jx={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;ay([s,a],"conv3dBackpropFilterV2");const l=O(s.shape),c=O(a.shape),h=va(s.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=new hr(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,$=n.data.get(a.dataId).values,[C,N,S,E]=c,T=n.data.get(s.dataId).values,[R,A,_,F]=l,D=h.padInfo.front,L=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let s=0;s<m;++s){const a=Math.max(0,Math.ceil((M-s)/p)),i=Math.min(h.outHeight,(h.inHeight+M-s)/p),o=s*w+r;for(let r=0;r<b;++r){const u=Math.max(0,Math.ceil((L-r)/f)),l=Math.min(h.outWidth,(h.inWidth+L-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*R,b=g*C;for(let g=t;g<n;++g){const t=(e+g*d-D)*A+h,n=g*N+b;for(let e=a;e<i;++e){const a=(s+e*p-M)*_+t,i=e*S+n;for(let e=u;e<l;++e){const t=e*E+i;m+=T[(r+e*f-L)*F+a+o]*$[t+c]}}}}x[g+c]=m}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},qx={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;ay([s],"conv3dBackpropInputV2");const l=O(s.shape),c=O(a.shape),h=va(u,a.shape,o,1,i),d=new hr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,y=n.data.get(s.dataId).values,[x,v,w,k]=l,I=n.data.get(a.dataId).values,[$,C,N,S]=c,{batchSize:E,filterDepth:T,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:L,outChannels:M,outDepth:z,outHeight:B,outWidth:P,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=T-1-h.padInfo.front,H=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),a=Math.min(z,(T+r)/W);for(let i=0;i<D;++i){const o=i-H,u=Math.max(0,Math.ceil(o/U)),l=Math.min(B,(R+o)/U);for(let c=0;c<L;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),E=Math.min(P,(A+h)/V);let _=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=u;r<l;++r){const a=r*U-o;for(let i=d;i<E;++i){const o=x*e+v*n+w*r+k*i,u=$*(T-1-s)+C*(R-1-a)+N*(A-1-(i*V-h))+S*t;for(let e=0;e<M;++e)_+=y[o+e]*I[u+e]}}}p[f*e+g*n+m*i+b*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Kx=uy(Re,(e=>Math.cos(e))),Xx={kernelName:Re,backendName:"cpu",kernelFunc:Kx},Yx=uy(Ae,(e=>Math.cosh(e))),Jx={kernelName:Ae,backendName:"cpu",kernelFunc:Yx},Zx={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=s.shape,f=a.shape[0],[g,m]=o,b=Is([f,g,m,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=O(s.shape),k=O(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],s=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(a-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<m;u++){const c=m>1?r*(d-1)+u*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];b.values[r]=l}continue}const h=Math.floor(c),g=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const l=v[a];a=r+g*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+g*w[2]+s*w[1]+i*w[0];const p=l+(c-l)*y,f=d+(v[a]-d)*y;a=r+u*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+u*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Qx={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;ay(s,"cumsum");const u=Ri([a],s.shape.length);let l=s;null!=u&&(l=Jy({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=_i(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Ir(l.dtype,"int32"),d=B(m(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?0:p[n];else{const r=g(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const b=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=Jy({inputs:{x:b},backend:n,attrs:{perm:Ai(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),e}return b}},ev={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=Nx(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=Sx(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},tv={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;d("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),d(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,p=l*a,f=c/(a*a),g=n.data.get(s.dataId).values,m=new Float32Array(o*h*p*f);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<p;++t){const s=Math.floor(t/a),i=(r*a+t%a)*f;for(let t=0;t<f;++t){const r=t+i+c*(s+l*(n+u*e));m[b++]=g[r]}}}return n.makeTensorInfo([o,h,p,f],s.dtype,m)}};function nv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;ay([s,a],"depthwiseConv2DNative");const c=O(s.shape),h=O(a.shape);let p=u;null==p&&(p=[1,1]),d(Sa(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const f=xa(s.shape,a.shape,i,p,o,l,!0),{filterHeight:g,filterWidth:m,dilationHeight:b,dilationWidth:y,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new hr(f.outShape,s.dtype),$=n.data.get(s.dataId).values,C=n.data.get(a.dataId).values,N=I.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*I.strides[1],s=e*f.strideHeight-v;for(let e=0;e<g;++e){const n=s+e*b;if(n<0||n>=f.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-w;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const s=a+e*h[1],o=i+r*f.inChannels;let u=t,l=s;for(let e=0;e<f.inChannels;++e){const t=$[o+e];for(let e=0;e<k;++e)N[u+e]+=t*C[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const rv={kernelName:Le,backendName:"cpu",kernelFunc:nv},sv={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;ay([s,a],"depthwiseConv2dNativeBackpropFilter");const h=xa(s.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new hr(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new hr(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new hr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=s;e<a;++e){const n=r+e*p-b;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}m.set(l,e,r,o,u)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},av={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;ay([s,a],"depthwiseConv2DNativeBackpropInput");const h=O(s.shape),d=O(a.shape),p=xa(c,a.shape,i,o,u,l,!0),f=new hr(p.inShape,"float32"),g=f.values,[m,b,y]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[$,C,N]=d,{batchSize:S,filterHeight:E,filterWidth:T,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:L,strideHeight:M,strideWidth:z}=p,B=E-1-p.padInfo.top,P=T-1-p.padInfo.left,W=F/R;for(let e=0;e<S;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-B,s=Math.max(0,Math.ceil(r/M)),a=Math.min(D,(E+r)/M);for(let i=0;i<_;++i){const o=i-P,u=Math.max(0,Math.ceil(o/z)),l=Math.min(L,(T+o)/z);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=u;r<l;++r){const a=v*e+w*n+k*r,i=$*(E-1-s)+C*(T-1-(r*z-o))+N*t;for(let e=0;e<W;++e)c+=x[a+(t*W+e)]*I[i+e]}}g[m*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},iv={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=m(r.shape),a=n.data.get(r.dataId).values,i=Is([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},ov={kernelName:Pe,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:b,outHeight:y,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:$,dilationHeight:C,dilationWidth:S,outShape:E}=ma(r.shape,s.shape,a,i,"NHWC",o),T=m(E),R=E.length,A=N(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-v.top;for(let a=0;a<x;++a){const i=a*k-v.left;for(let o=0;o<b;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*C;if(a>=0&&a<f)for(let n=0;n<$;++n){const p=i+n*S;if(p>=0&&p<g){const i=U([e,a,p,o],c,O(r.shape)),f=U([t,n,o],d,O(s.shape)),g=l[i]+h[f];g>u&&(u=g)}}}A[U([e,t,a,o],R,O(E))]=u}}}return{dataId:u.write(or(A,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},uv={kernelName:Ue,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=M(r.shape,l.data.get(r.dataId).values),h=M(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:C,outShape:N}=ma(r.shape,s.shape,i,o,"NHWC",u);d(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const S=M(N,l.data.get(a.dataId).values),E=P(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let r=0;r<y;++r){const s=r*w-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*$;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=s+n*C;if(l>=0&&l<g){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=t,u=n)}}}E[o][u][a]+=S[e][t][r][a]}}}return{dataId:l.write(or(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},lv={kernelName:We,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=M(r.shape,l.data.get(r.dataId).values),h=M(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:C,outShape:N}=ma(r.shape,s.shape,i,o,"NHWC",u);d(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const S=M(N,l.data.get(a.dataId).values),E=P(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let r=0;r<y;++r){const s=r*w-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*$;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=s+n*C;if(l>=0&&l<g){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=r,u=l)}}}E[e][o][u][a]+=S[e][t][r][a]}}}return{dataId:l.write(or(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},cv={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;ay([r,s],"eluGrad");const a=new Float32Array(m(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},hv=my(((e,t)=>e===t?1:0)),dv=_y(qe,hv,null,"bool"),pv={kernelName:qe,backendName:"cpu",kernelFunc:dv},fv=Uu,gv=Vu,mv=Gu,bv=Hu,yv=ju,xv=qu,vv=uy(je,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+fv*n);return t*(1-((((xv*r+yv)*r+bv)*r+mv)*r+gv)*r*Math.exp(-n*n))})),wv={kernelName:je,backendName:"cpu",kernelFunc:vv},kv=Tx((e=>Math.exp(e))),Iv=ly(Ke,kv),$v={kernelName:Ke,backendName:"cpu",kernelFunc:Iv};function Cv(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(d(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),zy({inputs:{x:s},backend:n,attrs:{shape:o}})}const Nv={kernelName:Xe,backendName:"cpu",kernelFunc:Cv},Sv=Tx((e=>Math.expm1(e))),Ev=ly(Ye,Sv),Tv={kernelName:Ye,backendName:"cpu",kernelFunc:Ev},Rv=my(((e,t)=>e*t)),Av=Fy(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),_v=_y(Mt,Rv,Av),Fv={kernelName:Mt,backendName:"cpu",kernelFunc:_v},Dv=my(((e,t)=>e/t)),Ov=_y(Ve,Dv),Lv={kernelName:Ve,backendName:"cpu",kernelFunc:Ov},Mv=my(((e,t)=>e-t)),zv=Fy(((e,t,n,r)=>({real:e-n,imag:t-r}))),Bv=_y(Nn,Mv,zv),Pv={kernelName:Nn,backendName:"cpu",kernelFunc:Bv};function Wv(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=m(l),h=C("float32",c),d=C("float32",c);for(let e=0;e<s;e++){const r=Ix({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=Ix({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=Cy({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=Uv(i,t,n),p=Yu(l,c);for(let t=0;t<a;t++){const n=el(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),g=Cy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function Uv(e,t,n){const r=m(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=Vv(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",ir(r,"float32")),i=dy({inputs:{x:a},backend:n}),u=Lv.kernelFunc({inputs:{a:e,b:a},backend:n}),l=Lv.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=rl(s*r,t,n),u=el(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),tl(r,a,i,s)}return r}(Yu(a,i),r,t);return Ju(e)}var o}function Vv(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Yu(e,t),i=n/2,o=Zu(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),p=Cy({inputs:{real:h,imag:d},backend:s}),f=Qu(a),g=f.real,m=f.imag,b=[g.length],y=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",m),v=Cy({inputs:{real:y,imag:x},backend:s}),w=Vv(u,l,i,r,s),k=w.real,I=w.imag,$=[k.length],C=s.makeTensorInfo($,"float32",k),N=s.makeTensorInfo($,"float32",I),S=Cy({inputs:{real:C,imag:N},backend:s}),E=Vv(g,m,i,r,s),T=E.real,R=E.imag,A=[T.length],_=s.makeTensorInfo(A,"float32",T),F=s.makeTensorInfo(A,"float32",R),D=Cy({inputs:{real:_,imag:F},backend:s}),O=nl(n,r),L=[O.real.length],M=s.makeTensorInfo(L,"float32",O.real),z=s.makeTensorInfo(L,"float32",O.imag),B=Cy({inputs:{real:M,imag:z},backend:s}),P=_v({inputs:{a:B,b:D},backend:s}),W=Ly({inputs:{a:S,b:P},backend:s}),U=Bv({inputs:{a:S,b:P},backend:s}),V=Ey({inputs:{input:W},backend:s}),G=Ey({inputs:{input:U},backend:s}),H=Mx({inputs:{input:W},backend:s}),j=Mx({inputs:{input:U},backend:s}),q=Bx({inputs:[V,G],backend:s,attrs:{axis:0}}),K=Bx({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Gv={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=m(r.shape),a=r.shape[r.shape.length-1],i=zy({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Wv(i,!1,n),u=zy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Hv(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||_(s),o=N(i,m(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const jv={kernelName:Ze,backendName:"cpu",kernelFunc:Hv},qv={kernelName:Qe,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=C(r.dtype,m(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let o=0;o<l;o++){const h=[i,e,r,o][2],d=Math.round(u-h),p=t+n+s+o;let f=c[p];d>=0&&d<u&&(f=c[t+n+d*l+o]),a[p]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Kv=Tx((e=>Math.floor(e))),Xv=ly(et,Kv),Yv={kernelName:et,backendName:"cpu",kernelFunc:Xv},Jv=my(((e,t)=>Math.floor(e/t))),Zv=_y(tt,Jv,null,"int32"),Qv={kernelName:tt,backendName:"cpu",kernelFunc:Zv},ew={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Wx({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=Ly({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=$y(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}},tw={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=nv({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=Ly({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=$y(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}},nw={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=m(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=Lu(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=Is([l,c],r.dtype),p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=[];let n=0;for(let r=0;r<o;r++){const s=p[e*o+r];n+=s*h[r],t.push(s)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)d.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(u,d.dtype,d.values)}};function rw(e,t,n){const r=Is(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);r.values[n]=e.values[u]}return r}const sw={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;ay([s,a],"gatherV2");let u=o;null==o&&(u=0);const l=m(a.shape),c=ol(s,a,I(i,s.shape)[0],u),h=zy({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=zy({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}}),p=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize],f=n.bufferSync(d),g=rw(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,g.dtype,g.values)}},aw=my(((e,t)=>e>t?1:0)),iw=_y(at,aw,null,"bool"),ow={kernelName:at,backendName:"cpu",kernelFunc:iw},uw=my(((e,t)=>e>=t?1:0)),lw=_y(it,uw,null,"bool"),cw={kernelName:it,backendName:"cpu",kernelFunc:lw},hw={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=m(r.shape),a=r.shape[r.shape.length-1],i=zy({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Wv(i,!0,n),u=zy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},dw=uy(ct,(e=>Number.isFinite(e)?1:0),"bool"),pw={kernelName:ct,backendName:"cpu",kernelFunc:dw},fw=uy(ht,(e=>Math.abs(e)===1/0?1:0),"bool"),gw={kernelName:ht,backendName:"cpu",kernelFunc:fw},mw=uy(dt,(e=>Number.isNaN(e)?1:0),"bool"),bw={kernelName:dt,backendName:"cpu",kernelFunc:mw},yw=my(((e,t)=>e<t?1:0)),xw=_y(ft,yw,null,"bool"),vw={kernelName:ft,backendName:"cpu",kernelFunc:xw},ww=my(((e,t)=>e<=t?1:0)),kw=_y(gt,ww,null,"bool"),Iw={kernelName:gt,backendName:"cpu",kernelFunc:kw};function $w(e,t,n){const r=(t-e)/(n-1),s=B(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const Cw={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=$w(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Nw=Tx((e=>Math.log(e))),Sw=ly(bt,Nw),Ew={kernelName:bt,backendName:"cpu",kernelFunc:Sw},Tw=uy(yt,(e=>Math.log1p(e))),Rw={kernelName:yt,backendName:"cpu",kernelFunc:Tw},Aw=my(((e,t)=>e&&t)),_w=_y(xt,Aw,null,"bool"),Fw={kernelName:xt,backendName:"cpu",kernelFunc:_w},Dw=uy(vt,(e=>e?0:1),"bool"),Ow={kernelName:vt,backendName:"cpu",kernelFunc:Dw},Lw=my(((e,t)=>e||t)),Mw=_y(wt,Lw,null,"bool"),zw={kernelName:wt,backendName:"cpu",kernelFunc:Mw},Bw={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;ay(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,d=m(s.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},Pw={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;ay(i,"LRNGrad");const h=m(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(a.dataId).values,b=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],b[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,b)}};function Ww(e,t,n,r){const s=C(r,m(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}function Uw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=I(a,u);let h=c;const d=Ri(h,l);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=Yy(p,u,s.dtype,d,e),h=_i(h.length,l),u=e}ay(s,"max"),Ti("max",h,l);const[f,g]=Si(u,h),b=Ww(p,m(g),f,s.dtype),y=o.write(b,f,s.dtype);let x=f;return i&&(x=Ei(f,c)),{dataId:y,shape:x,dtype:s.dtype}}const Vw={kernelName:$t,backendName:"cpu",kernelFunc:Uw},Gw=my(((e,t)=>Math.max(e,t))),Hw=_y(Ct,Gw),jw={kernelName:Ct,backendName:"cpu",kernelFunc:Hw},qw={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ay(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;d(Sa(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ba(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))c=dy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=fx(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},Kw={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l,dilations:c}=r;ay(s,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const d=ya(s.shape,a,i,h,o,u,l),p=mx(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Xw={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;ay([s,a],"maxPool3DGrad");const h=ya(a.shape,i,o,l,u,c),d=function(e,t){const n=Is(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*s-p;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let $=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=d;r<w;r+=o){const s=r-l;for(let a=k;a<I;a+=u){const i=a-p,o=e.get(g,t,r,a,m);o>=$&&($=o,C=n*c*h+s*c+i)}}}n.set(C,g,b,r,s,m)}}}return n}(n.bufferSync(a),h),p=h.strideDepth,f=h.strideHeight,g=h.strideWidth,m=h.dilationDepth,b=h.dilationHeight,y=h.dilationWidth,x=h.effectiveFilterDepth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=x-1-h.padInfo.front,I=w-1-h.padInfo.left,$=v-1-h.padInfo.top,C=Is(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const a=n-k,i=r-$,o=s-I;let u=0;for(let n=0;n<x;n+=m){const r=(a+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const a=(i+s)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const l=(o+i)/g;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;const c=x*v*w-1-d.get(e,r,a,l,t)===n*v*w+s*w+i?1:0;0!==c&&(u+=N.get(e,r,a,l,t)*c)}}}C.set(u,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},Yw={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;ay([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=ba(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=Is(d.outShape,o.dtype,gx(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Is(o.shape,"float32"),$=n.data.get(s.dataId).values,C=Is(s.shape,"float32",$);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=b){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const o=(a+s)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==u&&(i+=C.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Jw={kernelName:Rt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;ay(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=ba(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=fx(e,0,n,O(t),s,"max"),i=gx(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function Zw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;ay(s,"sum"),o="bool"===s.dtype?Ry({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):dy({inputs:{x:s},backend:n});const u=o.shape.length,l=I(a,o.shape),c=Ri(l,u);let h=l,d=o;null!=c&&(d=Jy({inputs:{x:o},backend:n,attrs:{perm:c}}),h=_i(h.length,u)),Ti("sum",h,d.shape.length);const[p,f]=Si(d.shape,h);let g=Sy(n,p,Ir(d.dtype,"int32"));const b=m(f),y=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=x[t+e];y[e]=n}if(i){const e=g;g=zy({inputs:{x:g},backend:n,attrs:{shape:Ei(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const Qw={kernelName:vn,backendName:"cpu",kernelFunc:Zw},ek={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=I(a,s.shape),u=m(Si(s.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=Ry({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=Ov({inputs:{a:h,b:c},backend:n});l.push(d);const p=Zw({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},tk={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;ay(s,"min");const o=I(a,s.shape);let u=o;const l=Ri(u,s.shape.length);let c=s;null!=l&&(c=Jy({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_i(u.length,s.shape.length)),Ti("min",u,c.shape.length);const[h,d]=Si(c.shape,u),p=m(d),f=B(m(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];r<n&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=zy({inputs:{x:b},backend:n,attrs:{shape:Ei(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},nk=my(((e,t)=>Math.min(e,t))),rk=_y(Ft,nk),sk={kernelName:Ft,backendName:"cpu",kernelFunc:rk},ak={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;ay(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=O(s.shape),f=m(o),g=o.length,b=O(o),y=C(s.dtype,f);for(let e=0;e<f;e++){let t=V(e,g,b);for(let e=0;e<g;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=U(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},ik=my(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),ok=_y(Ot,ik),uk={kernelName:Ot,backendName:"cpu",kernelFunc:ok};var lk=n(948);function ck(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=I([o],s.shape),l=Uw({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Ei(l.shape,u),h=zy({inputs:{x:l},backend:n,attrs:{shape:c}}),d=Bv({inputs:{a:s,b:h},backend:n}),p=Iv({inputs:{x:d},backend:n}),f=Zw({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),g=zy({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Ov({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const hk={kernelName:In,backendName:"cpu",kernelFunc:ck},dk={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;ay(s,"multinomial");const u=o?s:ck({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,a],p=B(m(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=lk.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}};function pk(e,t,n){const r=ir(-1,n);return Rv([],t,r,e,n)}const fk={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;ay(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=pk(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},gk=Ho,mk={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;ay(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=gk(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},bk=jo,yk={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;ay(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=bk(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},xk=qo,vk={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;ay(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=u,g=l,{selectedIndices:m,selectedScores:b}=xk(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},wk=my(((e,t)=>e!==t?1:0)),kk=_y(Bt,wk,null,"bool"),Ik={kernelName:Bt,backendName:"cpu",kernelFunc:kk},$k={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;ay(s,"oneHot");const u=m(s.shape),l=new Float32Array(u*a);l.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<a&&(l[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",l)}};function Ck(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Ey({inputs:{input:r},backend:n}),t=Ck({inputs:{x:e},backend:n}),s=Mx({inputs:{input:r},backend:n}),a=Ck({inputs:{x:s},backend:n}),i=Cy({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return Hv({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Nk={kernelName:Mn,backendName:"cpu",kernelFunc:Ck},Sk={kernelName:Vt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=Ey({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Mx({inputs:{input:s},backend:r}),i=Ck({inputs:{x:a},backend:r}),o=Cy({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return Hv({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Ek(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Cv({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{p(a,e.shape,"All tensors passed to stack must have matching shapes"),d(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Bx({inputs:t.map((e=>{const t=Cv({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Tk={kernelName:Ht,backendName:"cpu",kernelFunc:Ek},Rk={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;ay(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=m(s.shape),h=s.shape.length,d=O(s.shape),p=m(o),f=o.length,g=O(o),b=C(s.dtype,p);0!==i&&b.fill(i);for(let e=0;e<c;e++)b[U(V(e,h,d).map(((e,t)=>e+u[t])),f,g)]=l[e];return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},Ak=my(((e,t)=>Math.pow(e,t))),_k=_y(qt,Ak),Fk={kernelName:qt,backendName:"cpu",kernelFunc:_k};function Dk(e,t,n,r){const[s,a]=Si(e,r),i=Ir(t,"int32"),o=B(m(s),i),u=m(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const Ok={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;ay(s,"prod");const o=s.shape.length,u=I(a,s.shape),l=Ri(u,o);let c=u,h=s;const d=[];null!=l&&(h=Jy({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),c=_i(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=Dk(h.shape,h.dtype,p,c);let b=g;return i&&(b=Ei(g,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function Lk(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return B(0,r);const s=B(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const Mk={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=Lk(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},zk=uy(Zt,(e=>1/e)),Bk={kernelName:Zt,backendName:"cpu",kernelFunc:zk},Pk={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;ay(s,"resizeBilinear");const u=O(s.shape),[l,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,b=new Float32Array(m([h,l,c,f])),y=[a&&l>1?d-1:d,a&&c>1?p-1:p],x=[a&&l>1?l-1:l,a&&c>1?c-1:c];let v=0;const w=y[0]/x[0],k=y[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+a*u[2],m=l+a*u[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r,i=a+(n+(g[m+e]-n)*r-a)*s;b[v++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",b)}},Wk={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;ay([a,s],"resizeBilinearGrad");const o=O(s.shape),[u,l,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(u*l*c*h),g=[i&&d>1?l-1:l,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],y=g[1]/m[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,p=a+n*o[2],g=a+r*o[2],m=i+n*o[2],b=i+r*o[2],w=d*l,k=d*s,I=u*l,$=u*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*$}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},Uk={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;ay(s,"resizeNearestNeighbor");const u=O(s.shape),[l,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*l*c*f),b=[a&&l>1?d-1:d,a&&c>1?p-1:p],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,m)}},Vk={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;ay([a,s],"resizeNearestNeighborGrad");const o=O(s.shape),u=O(a.shape),[l,c,h,d]=s.shape,[,p,f]=a.shape,g=new Float32Array(l*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,$=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],l=Math.floor(r*k),b=Math.floor(l-$/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const l=a+s;if(l<0||l>=p)continue;const d=t+l*u[1],g=l*x;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<$;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*u[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=m[s+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},Gk={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;ay(s,"reverse");const i=s.shape.length,o=I(a,s.shape);if(0===i)return dy({inputs:{x:s},backend:n});const u=new hr(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Hk={kernelName:Pn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=C(r.dtype,m(r.shape)),[l,c,h,d]=r.shape,[p,f]=Ru(i,c,h),g=Math.sin(s),b=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[l,e,r,i],m=o[2],x=o[1];let v=(m-p)*b-(x-f)*g,w=(m-p)*g+(x-f)*b;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*d)+v*d+i]),u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},jk=uy(un,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),qk={kernelName:un,backendName:"cpu",kernelFunc:jk},Kk=Tx((e=>1/Math.sqrt(e))),Xk=ly(ln,Kk),Yk={kernelName:ln,backendName:"cpu",kernelFunc:Xk};function Jk(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Is(n,t.dtype);const p=Is(c,t.dtype);p.values.fill(u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[u*s+n]+=d[e*s+n]:p.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const Zk={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Bu(0,s,i),d=Jk(n.bufferSync(s),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},Qk={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;ay([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=Ir(s.dtype,a.dtype),h=B(m(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:m(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},eI=Pu,tI=Wu,nI=uy(dn,(e=>e>=0?tI*e:eI*(Math.exp(e)-1))),rI={kernelName:dn,backendName:"cpu",kernelFunc:nI},sI=uy(bn,(e=>1/(1+Math.exp(-e)))),aI={kernelName:bn,backendName:"cpu",kernelFunc:sI},iI=uy(mn,(e=>e<0?-1:e>0?1:0)),oI={kernelName:mn,backendName:"cpu",kernelFunc:iI},uI=uy(fn,(e=>Math.sin(e))),lI={kernelName:fn,backendName:"cpu",kernelFunc:uI},cI=uy(gn,(e=>Math.sinh(e))),hI={kernelName:gn,backendName:"cpu",kernelFunc:cI},dI=Math.log(1.1920928955078125e-7)+2,pI=uy(yn,(e=>{const t=e>-dI,n=e<dI,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),fI={kernelName:yn,backendName:"cpu",kernelFunc:pI},gI={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;ay([s],"spaceToBatchND");const o=m(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=Rk.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Au(l.shape,a,o,!1),h=_u(c.length,a.length,!1),d=Fu(l.shape,a,o,!1),p=zy({inputs:{x:l},backend:n,attrs:{shape:c}}),f=Jy({inputs:{x:p},backend:n,attrs:{perm:h}}),g=zy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}},mI={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Bu(0,s,o),p=Jk(n.bufferSync(s),n.bufferSync(a),o,d,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},bI={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=I(i,s.shape)[0],u=sl(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=Ix({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},yI=uy(xn,(e=>Math.sqrt(e))),xI={kernelName:xn,backendName:"cpu",kernelFunc:yI},vI={kernelName:Cn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;ay(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},wI=my(((e,t)=>{const n=e-t;return n*n})),kI=_y($n,wI),II={kernelName:$n,backendName:"cpu",kernelFunc:kI},$I=uy(zn,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),CI={kernelName:zn,backendName:"cpu",kernelFunc:$I};function NI(e,t,n,r){const s=Is(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const SI={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;ay(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=Js(s.shape,a,i,o,u,l,c,h,d),x=zy({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=Ix({inputs:{x:x},backend:n,attrs:{begin:f,size:m}});v=zy({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else{const e=NI(y,n.bufferSync(x),g,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=zy({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},EI=uy(Tn,(e=>Math.tan(e))),TI={kernelName:Tn,backendName:"cpu",kernelFunc:EI},RI=uy(Rn,(e=>Math.tanh(e)));function AI(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Is(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function _I(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=C(n,i*r),l=C("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[Is(c,n,u),Is(c,"int32",l)]}function FI(e,t,n,r){const s=I(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),u=new hr(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new hr(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const DI={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;ay(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=Cv({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=ir(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=dv({inputs:{a:r,b:c},backend:n}),i=Ry({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=_v({inputs:{a:i,b:s},backend:n}),h=Zw({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(a),u.push(i),u.push(l),u.push(h)}const h=Ek({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},OI=[Uy,Gy,jy,Ky,My,Xy,Qy,ex,tx,nx,sx,ix,ux,hx,px,bx,yx,xx,vx,Wy,wx,Cx,Ex,Ay,_x,Dx,Ny,Ox,Px,Vx,Gx,Ux,jx,qx,Hx,Xx,Jx,Zx,Qx,ev,tv,rv,sv,av,iv,ov,lv,uv,Lv,hy,cv,pv,wv,$v,Nv,Tv,Gv,jv,qv,Yv,Qv,ew,tw,nw,sw,ow,cw,py,hw,zx,pw,gw,bw,gy,vw,Iw,Cw,Ew,Rw,Fw,Ow,zw,Bw,Pw,jw,qw,Kw,Xw,Yw,Jw,Vw,ek,tk,sk,ak,uk,dk,Fv,fk,mk,yk,vk,Ik,$k,Sk,Tk,Rk,Fk,xy,Ok,Mk,Ty,Bk,wy,Iy,By,Pk,Wk,Uk,Vk,Gk,Hk,qk,Yk,Zk,Qk,rI,aI,oI,lI,hI,$x,hk,fI,gI,mI,bI,xI,vI,II,CI,SI,Pv,Qw,TI,{kernelName:Rn,backendName:"cpu",kernelFunc:RI},{kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;ay(s,"tile");const i=AI(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;ay(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=_I(o,s.shape,s.dtype,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Zy,{kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;ay(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=FI(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=Ix({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=zy({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},DI,Nk];for(const e of OI)Xn(e);const LI={},MI={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function zI(e){if(!(e in LI)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete LI[e]}),!1),1===e?t.getContext("webgl",MI)||t.getContext("experimental-webgl",MI):t.getContext("webgl2",MI)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;LI[e]=t}const t=LI[e];return t.isContextLost()?(delete LI[e],zI(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),LI[e])}var BI,PI,WI;function UI(e,t){return[t,e]}function VI(e){const t=m(e);return x(Math.ceil(t/4))}function GI(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function HI(e,t){const n=e;let r,s,a,i,o,u,l,c,h,d;return 2===j().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function jI(e,t){const n=t();return j().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function qI(e){return!!(j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function KI(e,t){return n$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(BI||(BI={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(PI||(PI={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(WI||(WI={}));const XI=/ERROR: [0-9]+:([0-9]+):/g;function YI(e,t){if(jI(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function JI(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(jI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),jI(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),jI(e,(()=>e.enableVertexAttribArray(o))),!0)}function ZI(e,t,n,r){jI(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),jI(e,(()=>e.activeTexture(e.TEXTURE0+n))),jI(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),jI(e,(()=>e.uniform1i(n,r)))}function QI(e,t,n){jI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),jI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function e$(e,t){jI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),jI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function t$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function n$(e,t,n){const r=jI(e,(()=>t()));if(null==r)throw new Error(n);return r}function r$(e,t=2){return m(e.slice(0,e.length-t))}function s$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function a$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[r$(e),...s$(e)]),t}function i$(e){return e%2==0}function o$(e,t){if(b(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(i$(n)&&i$(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&i$(e[0])&&i$(t[0])}let u$,l$;function c$(e,t){return null!=e.getExtension(t)}function h$(e){try{if(null!=zI(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function d$(e){const t=HI(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function p$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&d("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const f$=j();function g$(){let e,t,n,r,s,a,i,o,u,l;return 2===j().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function m$(e,t,n="index"){const r=O(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function b$(e){const t=O(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}f$.registerFlag("HAS_WEBGL",(()=>f$.getNumber("WEBGL_VERSION")>0)),f$.registerFlag("WEBGL_VERSION",(()=>h$(2)?2:h$(1)?1:0)),f$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),f$.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===f$.get("WEBGL_VERSION"))),f$.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),f$.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),f$.registerFlag("WEBGL_PACK",(()=>f$.getBool("HAS_WEBGL"))),f$.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_PACK_CLIP",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),f$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_PACK_REDUCE",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_LAZILY_UNPACK",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_CONV_IM2COL",(()=>f$.getBool("WEBGL_PACK"))),f$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==u$){const t=zI(e);u$=t.getParameter(t.MAX_TEXTURE_SIZE)}return u$}(f$.getNumber("WEBGL_VERSION")))),f$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==l$){const t=zI(e);l$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,l$)}(f$.getNumber("WEBGL_VERSION")))),f$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=f$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=zI(e);return t=c$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:c$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),f$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>f$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}())),f$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=zI(e);if(1===e){if(!c$(t,"OES_texture_float"))return!1}else if(!c$(t,"EXT_color_buffer_float"))return!1;return d$(t)}(f$.getNumber("WEBGL_VERSION")))),f$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!f$.getBool("WEBGL_FORCE_F16_TEXTURES")&&f$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),f$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=zI(e);if(1!==e){if(c$(t,"EXT_color_buffer_float"))return d$(t);const e="EXT_color_buffer_half_float";if(c$(t,e)){const n=t.getExtension(e);return function(e,t){const n=HI(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!c$(t,"OES_texture_float")&&!!c$(t,"WEBGL_color_buffer_float")&&d$(t)}(f$.getNumber("WEBGL_VERSION")))),f$.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=f$.getNumber("WEBGL_VERSION"))&&null!=zI(e).fenceSync;var e})),f$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>f$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),f$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const y$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class x${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=BI.DENSE;const t=VI(e),n=g$();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${m$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class v${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=BI.DENSE;const t=VI(e),n=g$();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${m$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class w${constructor(e){this.variableNames=["A"],this.outTexUsage=PI.DOWNLOAD;const t=g$();this.outputShape=e,this.userCode=`\n      ${y$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class k${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=PI.DOWNLOAD;const t=g$();this.outputShape=e,this.userCode=`\n      ${y$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class I${constructor(e,t,n=!1){this.variableNames=["A"];const r=g$(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${b$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class $${constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=g$(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${b$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function C$(e,t,n,r,s,a){!function(e,t){const n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return n$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return jI(e,(()=>e.bindTexture(o,i))),jI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),jI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),jI(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),jI(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),jI(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))),jI(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function N$(e){return e.internalFormatFloat}function S$(e){return e.internalFormatHalfFloat}function E$(e){return e.downloadTextureFormat}function T$(e){return e.internalFormatPackedFloat}function R$(e){return e.internalFormatPackedHalfFloat}class A${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=j().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){LI[e]=t}(t,e)):this.gl=zI(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===j().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=KI(this.gl,e),c$(this.gl,t))this.textureHalfFloatExtension=KI(this.gl,t);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),c$(this.gl,r))this.colorBufferHalfFloatExtension=KI(this.gl,r);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",c$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!c$(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=n$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return jI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),jI(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=n$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return jI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),jI(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return n$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=HI(this.gl,this.textureHalfFloatExtension)}get debug(){return j().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;jI(e,(()=>e.finish())),jI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),jI(e,(()=>e.deleteFramebuffer(this.framebuffer))),jI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),jI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),jI(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=UI(t,n);return C$(e,s,a,N$(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=UI(t,n);return C$(e,s,a,S$(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=UI(t,n);return C$(e,s,a,E$(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){jI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?jI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):jI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),jI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,u;jI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),jI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),jI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=GI(t,n);return C$(e,s,a,R$(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=GI(t,n);return C$(e,s,a,T$(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(e$(this.gl,this.framebuffer),this.outputTexture=null),jI(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=UI(t,n),i=new Uint8Array(t*n*4);return jI(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=GI(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();jI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return jI(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),jI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),jI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(j().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return jI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=n$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(jI(e,(()=>e.shaderSource(n,t))),jI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=XI.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>v((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${v(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),r=function(e){const t=g$();return function(e,t){const n=n$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(jI(e,(()=>e.shaderSource(n,t))),jI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),s=function(e){return n$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return jI(t,(()=>t.attachShader(s,r))),jI(t,(()=>t.attachShader(s,n))),function(e,t){if(jI(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&YI(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return jI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),JI(e,t,"clipSpacePos",n,3,20,0)&&JI(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&jI(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&YI(this.gl,this.program),jI(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return n$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),jI(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ZI(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=GI(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&YI(this.gl,this.program),t$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),jI(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),jI(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=KI(this.gl,2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w((()=>this.disposed||this.isQueryAvailable(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||w((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),QI(this.gl,e,this.framebuffer),this.debug&&t$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(QI(this.gl,this.outputTexture,this.framebuffer),this.debug&&t$(this.gl)):e$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;QI(r,e,this.framebuffer),this.debug&&t$(r),this.outputTexture=e,jI(r,(()=>r.viewport(0,0,t,n))),jI(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),jI(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:_$}=r;function F$(e,t,n,r){const s=[];e.forEach((e=>{const t=m(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?O$(e):D$(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=_$(e.shapeInfo.logicalShape,t.logicalShape),u=U$(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===m(e.shapeInfo.logicalShape),g=1===m(t.logicalShape);if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&b(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=U$(u),c=_$(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,u=g$(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${L$}\n    ${M$}\n    ${z$}\n  `}(u);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(b(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return b(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=m$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=m$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=m$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=m$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(d+=B$),[d,l,h,a,c,i,n].join("\n")}function D$(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${P$(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${W$(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=P$(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&b(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=$(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${D$(V$(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${G$(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${W$(e)}\n      }\n    `;const u=s[0],l=s[1],c=P$(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=$(t),u=i;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${D$(V$(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${G$(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${W$(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],h=l[1],d=e.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${P$(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:u}=$(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${D$(V$(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${G$(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${W$(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${P$(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=$(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${D$(V$(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${G$(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${W$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${P$(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=$(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${D$(V$(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${G$(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${W$(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${P$(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function O$(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${g$().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=g$();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=g$();if(null!=s&&b(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${O$(V$(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${G$(s,n)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${g$().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${g$().texture2D}(${r}, uv);\n    }\n  `}(e)}}const L$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",M$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",z$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",B$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function P$(e){return`offset${e}`}function W$(e){const t=e.name,n=m(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function U$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function V$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function G$(e,t){return t.map((t=>e[t])).join(", ")}function H$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!b(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!b(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:j$,bincountImpl:q$,bincountReduceImpl:K$,ceilImpl:X$,concatImpl:Y$,expImpl:J$,expm1Impl:Z$,floorImpl:Q$,gatherV2Impl:eC,greaterImpl:tC,lessImpl:nC,linSpaceImpl:rC,logImpl:sC,maxImpl:aC,maximumImpl:iC,minimumImpl:oC,multiplyImpl:uC,negImpl:lC,prodImpl:cC,rangeImpl:hC,rsqrtImpl:dC,simpleAbsImpl:pC,sliceImpl:fC,stridedSliceImpl:gC,subImpl:mC,tileImpl:bC,topKImpl:yC,transposeImpl:xC,uniqueImpl:vC}=s;function wC(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function kC(e,t){return 1===t?[e]:wC(e,t)}class IC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=kC("rc",t),r=U$(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class $C{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${m$(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${b$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class CC{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=SC(t,n),s=EC(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=NC(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===WI.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===WI.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===WI.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===WI.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===WI.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=SC(n,r),a=EC(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=NC(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=j().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function NC(e,t,n,r,s){const a=function(e,t){switch(e){case WI.PACKED_2X2_FLOAT32:return T$(t);case WI.PACKED_2X2_FLOAT16:return R$(t);case WI.UNPACKED_FLOAT32:return N$(t);case WI.UNPACKED_FLOAT16:return S$(t);case WI.PACKED_4X1_UNSIGNED_BYTE:return E$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=GI(e[0],e[1]);i=t*n}else{const[t,n]=UI(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function SC(e,t){if(e===PI.UPLOAD)return WI.PACKED_2X2_FLOAT32;if(e===PI.RENDER||null==e)return function(e){return j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?WI.PACKED_2X2_FLOAT32:WI.UNPACKED_FLOAT32:e?WI.PACKED_2X2_FLOAT16:WI.UNPACKED_FLOAT16}(t);if(e===PI.DOWNLOAD||e===PI.PIXELS)return WI.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function EC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class TC{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const RC="return abs(x);",AC="return x;";class _C{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class FC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=kC("rc",t),r=U$(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const DC=dl,OC={};class LC extends o{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!j().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=zI(j().getNumber("WEBGL_VERSION"));this.binaryCache=((t=j().getNumber("WEBGL_VERSION"))in OC||(OC[t]={}),OC[t]),this.gpgpu=new A$(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new CC(this.gpgpu),this.numMBBeforeWarning=null==j().global.screen?1024:j().global.screen.height*j().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,na())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((j().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||j().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:PI.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(j().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:PI.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new _C(i,AC):new TC(i,AC);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=ur()),c="complex64"===r?Yu(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=ur()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new _C(r,AC):new TC(r,AC);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===j().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&j().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...VI(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Yu(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=m(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>cr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Is(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!qI(n)){if(j().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=m(t);if(j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...VI(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=j().getBool("WEBGL_PACK")&&!0===r,i=a?a$(t):t,o=a?new k$(i):new w$(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=g(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=g(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ur(),endMs:null}}endTimer(e){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ur(),e)}async getQueryTime(e){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return j().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=na().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return j().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&m(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Ku("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return DC(e.shape,t)}packedUnaryOp(e,t,n){const r=new _C(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=pC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(j().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,RC,e.dtype);const t=new TC(e.shape,RC);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>lr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return na().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new FC(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new IC(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[r$(e.shape),...s$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[r$(t),...s$(t)],a=new $C(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=a$(r);let i;return i=n?new v$(a):new x$(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===BI.DENSE){const t=VI(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===m(a.shape))return i.values=C(a.dtype,0),a;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&m(t.shape)<=j().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!o$(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,u,l),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=F$(a,o,s,t.packedInputs),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===j().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;d[r]=e.getUniformLocation(l,r,s),d[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,s)}return{program:t,source:u,webGLProgram:l,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,u,l))),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(e,t,n,r,s){H$(t.inShapeInfos,n),H$([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===j().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(m(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!j().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,r,s);return na().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(j().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=sa((()=>{if(!j().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=j().getBool("DEBUG");j().set("DEBUG",!1);const t=this.abs(la(1e-8)).dataSync()[0];if(j().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=ur());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?h(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=$(e);e=t.newShape}let r=m(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=r$(e);let n=2,s=2;return e.length&&([n,s]=s$(e)),r=t*(n/2)*(s/2),x(r).map((e=>2*e))}return x(r)}(n,o),t.texShape=c),null!=s){const e=a$(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array;o?([i,h]=GI(c[0],c[1]),a=new $$(e,[h,i],d)):a=new I$(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?PI.PIXELS:PI.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,s);const f=!0,g=this.runWebGLProgram(a,[p],r,null,f),m=this.texData.get(g.dataId);t.texture=m.texture,t.texShape=m.texShape,t.isPacked=m.isPacked,t.usage=m.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(g.dataId),t.values=null,u&&(this.uploadWaitMs+=ur()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*T(t)}}Dr()&&oa("webgl",(()=>new LC),2);class MC{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ei(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class zC{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ei(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===m(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${U$(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=kC("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function BC(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const PC={kernelName:ot,backendName:"webgl",kernelFunc:BC};function WC(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=BC({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=BC({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const UC={kernelName:we,backendName:"webgl",kernelFunc:WC},VC="return (a < 0.) ? b * a : a;",GC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",HC={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",ir(a,"float32")),o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zC(GC,s.shape,i.shape):new MC(VC,s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),u}},jC="return (a < 0.) ? b * a : a;",qC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",KC={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zC(qC,r.shape,s.shape):new MC(jC,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function XC({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new _C(i.shape,t):new TC(i.shape,e),o.runWebGLProgram(l,[i],u)}}function YC({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new MC(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],Ir(n.dtype,r.dtype))})),a=WC({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Ir(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const e=c.texData.get(u.dataId),t=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let d;return d=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new zC(t,u.shape,l.shape,n):new MC(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function JC(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?qC:jC;if("leakyrelu"===e)return t?GC:VC;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class ZC{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class QC{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ei(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const eN="return a * b;";function tN(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Ir(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new QC("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new QC("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=WC({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=uC(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zC(eN,r.shape,s.shape):new MC(eN,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const nN={kernelName:Mt,backendName:"webgl",kernelFunc:tN};function rN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=m(s.shape),u=k(a,o),l=m(u);d(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||o$(s.shape,u)||null!==c.texture&&o$(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[r$(e.shape),...s$(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[r$(t),...s$(t)],i=new $C(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,u,i)}const sN={kernelName:en,backendName:"webgl",kernelFunc:rN};class aN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${y(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class iN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function oN(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Tu(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new aN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new aN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new iN({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class uN{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=U$(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class lN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=U$(this.rank),s=wC("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function cN(e,t,n){const r=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lN(e.shape,t):new uN(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function hN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=I(s,e.shape);let o=i;const u=Ri(o,a),l=null!=u;let c=e;l&&(c=cN(e,u,r),o=_i(o.length,a)),Ti("sum",o,a);const[h,d]=Si(c.shape,o);let p=h;n&&(p=Ei(h,i));const f=m(d),g=rN({inputs:{x:c},attrs:{shape:[m(e.shape)/f,f]},backend:r}),b=oN(g,$r(e.dtype),"sum",r),y=rN({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),l&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const dN={kernelName:vn,backendName:"webgl",kernelFunc:hN};function pN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=xC(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype),i.texData.get(l.dataId).values=t}else l=cN(s,a,i);return l}const fN={kernelName:Fn,backendName:"webgl",kernelFunc:pN};function gN({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],f=n?e.shape[l-1]:e.shape[l-2],g=r?t.shape[c-2]:t.shape[c-1],b=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=m(b),v=m(y);d(l>=2&&c>=2&&(x===v||1===x||1===v),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${y}).`));const w=(x>v?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,g]);d(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[x,h,f]:[x,f,h],I=r?[v,g,p]:[v,p,g],$=rN({inputs:{x:e},backend:s,attrs:{shape:k}}),C=rN({inputs:{x:t},backend:s,attrs:{shape:I}}),N=[$,C],S=Math.max(x,v),E=n?$.shape[1]:$.shape[2],T=null!=a,R=null!=i,A="leakyrelu"===u,_=null!=u?JC(u,!0):null;let F;if((1===f||1===g)&&E>1e3&&!1===(T||R||A||null!=_)){let e=$,t=C;n&&(e=pN({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=pN({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===g;let i=e;1!==g&&(i=rN({inputs:{x:e},backend:s,attrs:{shape:[S,E,1]}}),N.push(i));const o=1===g?2:1;let u=t;a&&(u=rN({inputs:{x:t},backend:s,attrs:{shape:[S,1,E]}}),N.push(u));const l=tN({inputs:{a:i,b:u},backend:s});F=hN({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=Ir(e.dtype,t.dtype),l=new ZC(k,I,[S,f,g],n,r,T,_,R,A),c=[$,C];if(null!=a&&c.push(a),R&&c.push(i),A){const e=s.makeTensorInfo([],"float32",ir(o,"float32"));c.push(e),N.push(e)}F=s.runWebGLProgram(l,c,u)}const D=rN({inputs:{x:F},backend:s,attrs:{shape:w}});N.push(F);for(const e of N)s.disposeIntermediateTensorInfo(e);return D}const mN={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return gN({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},bN="return abs(x);",yN={kernelName:J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=pC(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _C(r.shape,bN):new TC(r.shape,bN),n.runWebGLProgram(s,[r],r.dtype)}},xN=XC({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),vN={kernelName:Z,backendName:"webgl",kernelFunc:xN},wN=XC({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),kN={kernelName:Q,backendName:"webgl",kernelFunc:wN},IN="return a + b;",$N=YC({opSnippet:IN,packedOpSnippet:IN,supportsComplex:!0,cpuKernelImpl:j$}),CN={kernelName:ee,backendName:"webgl",kernelFunc:$N};class NN{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class SN{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const EN={kernelName:te,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return BC({inputs:{x:s[0]},backend:r});if(s.length>j().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Ir(e,t))),i=s.map((e=>e.shape)),o=j().getBool("WEBGL_PACK")?new SN(s[0].shape,i):new NN(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},TN={kernelName:ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=I(a,s.shape);let l=u;const c=Ri(l,o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),l=_i(l.length,o)),Ti("all",l,o);const[d,p]=Si(h.shape,l),f=rN({inputs:{x:h},backend:n,attrs:{shape:[-1,m(p)]}}),g=oN(f,f.dtype,"all",n);let b;return b=rN(i?{inputs:{x:g},backend:n,attrs:{shape:Ei(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),b}},RN={kernelName:re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=I(a,s.shape);let l=u;const c=Ri(l,o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),l=_i(l.length,o)),Ti("any",l,o);const[d,p]=Si(h.shape,l),f=rN({inputs:{x:h},backend:n,attrs:{shape:[-1,m(p)]}}),g=oN(f,f.dtype,"any",n);let b;return b=rN(i?{inputs:{x:g},backend:n,attrs:{shape:Ei(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),b}};class AN{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class _N{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,d(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=U$(o),l=kC("coords",o);let c,h;if(1===a){h=o+1;const e=U$(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],g=p.map((e=>"int "+e)),m=kC("sourceLocR",h-1).concat("inIdx.r"),b=kC("sourceLocG",h-1).concat("inIdx.g"),y=kC("sourceLocB",h-1).concat("inIdx.b"),x=kC("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function FN(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Tu(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new AN(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=FN(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function DN(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Tu(s[s.length-1]),i=new _N(s,a,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=DN(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function ON(e,t,n,r){const s=[n];if(Ti("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!j().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=Si(t.shape,s),o=m(i),u=rN({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const l=FN(e,u,r);n.push(l);const c=rN({inputs:{x:l},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return DN(e,t,r)}const LN={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=I(a,s.shape);const o=Ri(i,s.shape.length);let u=s;const l=[];null!=o&&(u=pN({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=_i(i.length,u.shape.length)),Ti("argMax",[i[0]],u.shape.length);const c=ON(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},MN={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=I(a,s.shape);const o=Ri(i,s.shape.length);let u=s;const l=[];null!=o&&(u=pN({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=_i(i.length,u.shape.length)),Ti("argMin",[i[0]],u.shape.length);const c=ON(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},zN=XC({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),BN={kernelName:ie,backendName:"webgl",kernelFunc:zN},PN=XC({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),WN={kernelName:oe,backendName:"webgl",kernelFunc:PN},UN=XC({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),VN={kernelName:ue,backendName:"webgl",kernelFunc:UN},GN=YC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),HN={kernelName:ce,backendName:"webgl",kernelFunc:GN},jN=XC({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),qN={kernelName:le,backendName:"webgl",kernelFunc:jN};class KN{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class XN{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const YN={kernelName:he,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;p$(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;d(Sa(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ba(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))return BC({inputs:{x:s},backend:n});const c=new KN(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},JN={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=ya(s.shape,a,i,[1,1,1],o,u,l),h=new XN(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class ZN{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QN{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const eS={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=ya(i.shape,o,u,[1,1,1],l,c),d=new QN(h);return n.runWebGLProgram(d,[s],i.dtype)}},tS={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;p$([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=ba(i.shape,o,u,1,l),h=new ZN(c);return n.runWebGLProgram(h,[s],i.dtype)}},nS={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return gN({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class rS{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ei(e,t),ei(e,n);let i="0.0";null!=r&&(ei(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ei(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class sS{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ei(e,t),ei(e,n);let i="vec4(0.0)";null!=r&&(ei(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ei(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const aS={kernelName:nt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;d(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=j().getBool("WEBGL_PACK_NORMALIZATION")?new sS(r.shape,s.shape,a.shape,c,h,u):new rS(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class iS{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=U$(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return oS.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${oS[t]} = start[${t}] + coords.${oS[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const oS=["x","y","z","w","u","v"];class uS{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=U$(this.rank),n=kC("coords",this.rank),r=kC("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function lS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=Ys(s,a,i);if(Ls(s,o,u),0===m(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=fC(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=Ks(s.shape,o,u);if(l||!c){const e=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uS(u):new iS(u),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Xs(t,O(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const cS={kernelName:pn,backendName:"webgl",kernelFunc:lS},hS={kernelName:me,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;d(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=Au(s.shape,a,o),l=_u(u.length,a.length),c=Fu(s.shape,a,o),h=Du(i,a.length),p=Ou(c,i,a.length),f=[],g=rN({inputs:{x:s},backend:n,attrs:{shape:u}}),m=pN({inputs:{x:g},backend:n,attrs:{perm:l}}),b=rN({inputs:{x:m},backend:n,attrs:{shape:c}}),y=lS({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return f.push(g),f.push(m),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},dS={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=q$(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},pS=YC({opSnippet:"return float(a != b);",dtype:"bool"}),fS={kernelName:Bt,backendName:"webgl",kernelFunc:pS};function gS(e){const{inputs:t,backend:n}=e,{input:r}=t;return BC({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const mS={kernelName:Jt,backendName:"webgl",kernelFunc:gS},bS={kernelName:ye,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return BC({inputs:{x:a},backend:r});const t=zi(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=WC({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=gS({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!S(a.dtype,i)){const e=BC({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new TC(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",C("bool",1)),t=pS({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},yS="return ceil(x);",xS=XC({opSnippet:yS,packedOpSnippet:yS,cpuKernelImpl:X$}),vS={kernelName:xe,backendName:"webgl",kernelFunc:xS};class wS{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class kS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const IS={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=j().getBool("WEBGL_PACK_CLIP")?new kS(s.shape):new wS(s.shape);const u=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,u)}};class $S{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function CS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const NS={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new $S(r.shape),i=[CS(r,s.complexTensorInfos.real),CS(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class SS{constructor(e){this.outputShape=[],this.outputShape=Su(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class ES{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Su(e,t);const n=this.outputShape,r=n.length,s=U$(r),a=kC("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${TS(i,u,t)}),\n            vec2(${TS(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${TS(i,u,p)}),\n          vec2(${TS(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function TS(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function RS(e){const{inputs:t,backend:n}=e,{input:r}=t;return BC({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const AS={kernelName:lt,backendName:"webgl",kernelFunc:RS};function _S(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>gS({inputs:{input:e},backend:n}))),s=e.map((e=>RS({inputs:{input:e},backend:n}))),a=_S(r,t,n),i=_S(s,t,n),o=WC({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===r){const{tensors2D:s,outShape:a}=FS(e,t,n),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===s[0].shape[0],u=Y$(i,a,r,o),l=Su(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=_S(e.slice(0,r),t,n),a=_S(e.slice(r),t,n),i=_S([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new ES(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:s,outShape:a}=FS(e,t,n),i=new SS(s.map((e=>e.shape))),o=n.runWebGLProgram(i,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=rN({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),u}function FS(e,t,n){const r=Su(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>rN({inputs:{x:e},attrs:{shape:[-1,m(e.shape.slice(t))]},backend:n}))),outShape:r}}function DS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=I(s,t[0].shape)[0],i=Su(t.map((e=>e.shape)),a);if(0===m(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>m(e.shape)>0));return 1===o.length?BC({inputs:{x:o[0]},backend:n}):(Nu(o.map((e=>e.shape)),a),_S(o,a,n))}const OS={kernelName:Ie,backendName:"webgl",kernelFunc:DS};class LS{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class MS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zS{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,g=g$(),m="channelsLast"===h,b=m?0:1,y=m?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}function BS({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let g;const m=[],b=(1===h||1===p)&&c>1e3,y=u[2]%2!=0&&!!l.isPacked;if(!b&&j().getBool("WEBGL_LAZILY_UNPACK")&&j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,d(o$(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const b=rN({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(b);const y=gN({a:h,b:b,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),x=r.texData.get(y.dataId);d(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,x.shape=n.outShape,g=BC({inputs:{x:y},backend:r}),g.shape=n.outShape,m.push(y)}else{const l=rN({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=rN({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=gN({a:l,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});g=rN({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return g}function PS({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=u*l*c,b=d*h,y=[g,b],x=[],v=rN({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=rN({inputs:{x:t},backend:r,attrs:{shape:[1,g,m(t.shape)/g]}});x.push(v),x.push(w);const k=new zS(y,v.shape,n),I=r.runWebGLProgram(k,[v],"float32"),$=rN({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(I),x.push($);const C=null!=s,N=null!=a,S="leakyrelu"===o,E=o?JC(o,!0):null,T=new ZC($.shape,w.shape,[1,b,n.outChannels],!0,!1,C,E,N,S),R=[$,w];if(s&&R.push(s),N&&R.push(a),S){const e=r.makeTensorInfo([],"float32",ir(i,"float32"));R.push(e),x.push(e)}const A=r.runWebGLProgram(T,R,"float32"),_=rN({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});x.push(A);for(const e of x)r.disposeIntermediateTensorInfo(e);return _}const WS={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Ea(u),d=xa(s.shape,a.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(j().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=PS({x:s,filter:a,convInfo:d,backend:n});else{const e=new LS(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=BS({x:s,filter:a,convInfo:d,backend:n});const f=rN({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class US{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jS={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Ea(u),d=xa(s.shape,c,i,1,o,l,!1,h),p=new US(d);return n.runWebGLProgram(p,[s,a],"float32")}},qS={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Ea(l),d=xa(i,a.shape,o,1,u,c,!1,h),p=new VS(d);return n.runWebGLProgram(p,[s,a],"float32")}},KS={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=va(s.shape,a.shape,i,u,o),c=new MS(l);return n.runWebGLProgram(c,[s,a],"float32")}},XS={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=va(s.shape,u,i,1,o),c=new GS(l);return n.runWebGLProgram(c,[s,a],"float32")}},YS={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=va(u,a.shape,o,1,i),c=new HS(l);return n.runWebGLProgram(c,[s,a],"float32")}},JS=XC({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ZS={kernelName:Re,backendName:"webgl",kernelFunc:JS},QS=XC({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),eE={kernelName:Ae,backendName:"webgl",kernelFunc:QS};class tE{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const nE={kernelName:Fe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new tE(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};class rE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${sE(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${U$(r)} coords = getOutputCoords();\n        int end = ${aE(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${aE(r,"coords")} = idx;\n          val += getX(${sE(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function sE(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function aE(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const iE={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,u=s.shape.length,l=Ri([a],u);let c=s;null!=l&&(c=pN({inputs:{x:s},backend:n,attrs:{perm:l}}));const h=_i(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=BC({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new rE(c.shape,!1,o),r=t.getCustomSetupFunc(e),s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(i){const e=new rE(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=pN({inputs:{x:p},backend:n,attrs:{perm:Ai(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},oE={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=q$(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=K$(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class uE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const lE={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;d(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],u="NHWC"===i?s.shape[1]:s.shape[2],l="NHWC"===i?s.shape[2]:s.shape[3],c="NHWC"===i?s.shape[3]:s.shape[1],h=u*a,p=l*a,f=c/(a*a),g=new uE("NHWC"===i?[o,h,p,f]:[o,f,h,p],a,i);return n.runWebGLProgram(g,[s],s.dtype)}};class cE{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,g=e.outChannels/e.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${g};\n        int q = d2 - d1 * ${g};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class hE{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,g=e.filterWidth,m=g;let b="int xR; int xC; int xCOffset;";for(let e=0;e<f;e++)for(let t=0;t<g;t++)b+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<f;e++)for(let t=0;t<m;t++){const n=2*t;if(b+=`\n          xR = xRCorner + ${e*d};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<g&&(b+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<g)){const t=u%2==0?h(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(b+=`\n                  xCOffset = xC + ${u%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<g&&(b+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,u%2==1?(b+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<g&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<g&&(b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),b+="}");n<g&&(b+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<g&&(b+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<f;e++)for(let t=0;t<g;t++)b+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const dE={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),d(Sa(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=xa(s.shape,a.shape,i,c,o,l,!0);let p;return p=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new hE(h):new cE(h),n.runWebGLProgram(p,[s,a],"float32")}};class pE{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fE{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gE={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=xa(s.shape,c,i,o,u,l,!0),d=new pE(h);return n.runWebGLProgram(d,[s,a],"float32")}},mE={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=xa(c,a.shape,i,o,u,l,!0),d=new fE(h);return n.runWebGLProgram(d,[s,a],"float32")}};class bE{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const yE={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=m(r.shape),i=rN({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new bE(a),u=n.runWebGLProgram(o,[i],i.dtype),l=rN({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class xE{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const vE={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=ma(s.shape,a.shape,i,o,"NHWC",u);let c;const h=new xE(l);c=n.runWebGLProgram(h,[s,a],"float32");const d=rN({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},wE=XC({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),kE={kernelName:Ge,backendName:"webgl",kernelFunc:wE},IE={kernelName:He,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new MC("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},$E=YC({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),CE={kernelName:qe,backendName:"webgl",kernelFunc:$E},NE=XC({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Uu};\n  float a1 = ${Vu};\n  float a2 = ${Gu};\n  float a3 = ${Hu};\n  float a4 = ${ju};\n  float a5 = ${qu};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),SE={kernelName:je,backendName:"webgl",kernelFunc:NE},EE="return exp(x);",TE=XC({opSnippet:EE,packedOpSnippet:EE,cpuKernelImpl:J$}),RE={kernelName:Ke,backendName:"webgl",kernelFunc:TE};function AE(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(d(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),rN({inputs:{x:a},backend:r,attrs:{shape:o}})}const _E={kernelName:Xe,backendName:"webgl",kernelFunc:AE},FE="return exp(x) - 1.0;",DE=XC({opSnippet:FE,packedOpSnippet:FE,cpuKernelImpl:Z$}),OE={kernelName:Ye,backendName:"webgl",kernelFunc:DE};class LE{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ME(e,t,n){const r=n.texData.get(e.dataId),s=m(e.shape),a=e.shape[e.shape.length-1],i=rN({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new LE("real",o,t),l=new LE("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=WC({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=rN({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const zE={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ME(r,!1,n)}};class BE{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function PE(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||_(s),"string"===a){const e=N(a,m(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new BE(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const WE={kernelName:Ze,backendName:"webgl",kernelFunc:PE};class UE{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const VE={kernelName:Qe,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new UE(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},GE="return floor(x);",HE=XC({opSnippet:GE,packedOpSnippet:GE,cpuKernelImpl:Q$}),jE={kernelName:et,backendName:"webgl",kernelFunc:HE},qE=YC({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),KE={kernelName:tt,backendName:"webgl",kernelFunc:qE};class XE{constructor(e){this.variableNames=["A"];const t=g$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class YE{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=g$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const JE={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,u="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[l,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,l],d=[c,l,a];(o||i||u)&&(null==ZE&&(ZE=document.createElement("canvas").getContext("2d")),ZE.canvas.width=l,ZE.canvas.height=c,ZE.drawImage(s,0,0,l,c),s=ZE.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=PI.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=j().getBool("WEBGL_PACK")?new YE(d):new XE(d),g=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),g}};let ZE;const QE={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=Ea(c),m=xa(s.shape,a.shape,u,h,l,d,!1,g);let b;const y=[];if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(j().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=PS({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?JC(p,!1):null,l=new LS(m,e,u,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",ir(f,"float32"));c.push(e),y.push(e)}b=n.runWebGLProgram(l,c,"float32")}else b=BS({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=rN({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},eT={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,g=[];let m=c;null==m&&(m=[1,1]),d(Sa(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const b=xa(s.shape,a.shape,u,m,l,h,!0),y=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=p?JC(p,y):null,v=[s,a],w=null!=i,k=null!=o,I="leakyrelu"===p;if(w&&v.push(i),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",ir(f,"float32"));v.push(e),g.push(e)}let $;$=y?new hE(b,w,x,k,I):new cE(b,w,x,k,I);const C=n.runWebGLProgram($,v,"float32");return g.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class tT{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=U$(t.length),s=U$(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const nT={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],[o,u,l,c]=Lu(r,s),h=rN({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),d=rN({inputs:{x:r},backend:n,attrs:{shape:[m(r.shape)/l,l]}}),p=new tT(i,c,[u,l]),f=n.runWebGLProgram(p,[d,h],d.dtype),g=rN({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),g}};class rT{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=U$(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const sT={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=ol(s,a,I(i,s.shape)[0],o),l=m(a.shape),c=[],h=rN({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=rN({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});c.push(h),c.push(d);const p=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=eC(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const f=new rT(h.shape,p),g=n.runWebGLProgram(f,[h,d],h.dtype);c.push(g);const b=rN({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},aT=YC({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:tC,dtype:"bool"}),iT={kernelName:at,backendName:"webgl",kernelFunc:aT},oT=YC({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),uT={kernelName:it,backendName:"webgl",kernelFunc:oT},lT={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ME(r,!0,n)}},cT=XC({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),hT={kernelName:ct,backendName:"webgl",kernelFunc:cT},dT=XC({opSnippet:"return float(isinf(x));",dtype:"bool"}),pT={kernelName:ht,backendName:"webgl",kernelFunc:dT},fT=XC({opSnippet:"return float(isnan(x));",dtype:"bool"}),gT={kernelName:dt,backendName:"webgl",kernelFunc:fT},mT=YC({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:nC,dtype:"bool"}),bT={kernelName:ft,backendName:"webgl",kernelFunc:mT},yT=YC({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),xT={kernelName:gt,backendName:"webgl",kernelFunc:yT},vT={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=rC(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},wT=XC({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sC}),kT={kernelName:bt,backendName:"webgl",kernelFunc:wT},IT=XC({opSnippet:"return log(1.0 + x);"}),$T={kernelName:yt,backendName:"webgl",kernelFunc:IT},CT=YC({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),NT={kernelName:xt,backendName:"webgl",kernelFunc:CT},ST=XC({opSnippet:"return float(!(x >= 1.0));"}),ET={kernelName:vt,backendName:"webgl",kernelFunc:ST},TT=YC({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),RT={kernelName:wt,backendName:"webgl",kernelFunc:TT};class AT{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class _T{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const FT={kernelName:kt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=j().getBool("WEBGL_PACK_NORMALIZATION")?new _T(s.shape,a,i,o,u):new AT(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class DT{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const OT={kernelName:It,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new DT(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function LT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=I(a,s.shape);let l=u;const c=Ri(l,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=xC(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=cN(s,c,n);l=_i(l.length,o)}Ti("max",l,o);const[f,g]=Si(p.shape,l);let b,y=f;if(i&&(y=Ei(f,u)),d){const e=n.texData.get(p.dataId).values,t=aC(e,m(g),y,s.dtype);b=n.makeTensorInfo(y,s.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const s=m(t),a=rN({inputs:{x:e},attrs:{shape:[m(e.shape)/s,s]},backend:r}),i=oN(a,e.dtype,"max",r),o=rN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,g,y,n);return h&&n.disposeIntermediateTensorInfo(p),b}const MT={kernelName:$t,backendName:"webgl",kernelFunc:LT},zT=YC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:iC}),BT={kernelName:Ct,backendName:"webgl",kernelFunc:zT},PT={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;p$(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;d(Sa(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=ba(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&b(l.inShape,l.outShape))return BC({inputs:{x:s},backend:n});const c=new KN(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},WT={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=ya(s.shape,a,i,[1,1,1],o,l,u),h=new XN(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class UT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GT={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=ya(i.shape,o,u,[1,1,1],l,c),d=new XN(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new VT(h),g=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}},HT={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;p$([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=ba(o.shape,u,l,1,c,h),p=new KN(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new UT(d),m=n.runWebGLProgram(g,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},jT={kernelName:Rt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;d(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];d(Sa(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=ba(r.shape,s,a,l,i),[h,p]=function(e,t,n,r){let s=new KN(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new KN(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[h,p]}},qT={kernelName:At,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=I(a,r.shape);let l=u;const c=Ri(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=xC(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=cN(r,c,i);p.push(f),l=_i(l.length,o)}Ti("sum",l,o);const[g,b]=Si(f.shape,l);let y=g;s&&(y=Ei(g,u));const x=function(e,t,n,r){const s=m(t),a=rN({inputs:{x:e},attrs:{shape:[m(e.shape)/s,s]},backend:r}),i=oN(a,"float32","mean",r),o=rN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,b,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return x}},KT={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=I(a,s.shape);let l=u;const c=Ri(l,o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),l=_i(l.length,s.shape.length)),Ti("min",l,o);const[d,p]=Si(h.shape,l),f=rN({inputs:{x:h},backend:n,attrs:{shape:[-1,m(p)]}}),g=oN(f,f.dtype,"min",n);let b;return b=rN(i?{inputs:{x:g},backend:n,attrs:{shape:Ei(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),b}},XT=YC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:oC}),YT={kernelName:Ft,backendName:"webgl",kernelFunc:XT};class JT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=U$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class ZT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=U$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=kC("rc",r),u=kC("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const QT={kernelName:Dt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZT(r.shape,s,a):new JT(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},eR=YC({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),tR={kernelName:Ot,backendName:"webgl",kernelFunc:eR};class nR{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const rR=YC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),sR={kernelName:Ve,backendName:"webgl",kernelFunc:rR},aR="return a - b;",iR=YC({opSnippet:aR,packedOpSnippet:aR,supportsComplex:!0,cpuKernelImpl:mC}),oR={kernelName:Nn,backendName:"webgl",kernelFunc:iR};function uR(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=I([a],s.shape),o=LT({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Ei(o.shape,i),l=rN({inputs:{x:o},backend:n,attrs:{shape:u}}),c=iR({inputs:{a:s,b:l},backend:n}),h=TE({inputs:{x:c},backend:n}),d=hN({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=rN({inputs:{x:d},backend:n,attrs:{shape:u}}),f=rR({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const lR={kernelName:In,backendName:"webgl",kernelFunc:uR},cR={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:uR({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new nR(l,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},hR="return -x;",dR={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=lC(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _C(r.shape,hR):new TC(r.shape,hR),n.runWebGLProgram(s,[r],r.dtype)}},pR=Ho,fR={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){Ku("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=pR(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},gR=jo,mR={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){Ku("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=gR(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},bR=qo,yR={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){Ku("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=u,g=l,{selectedIndices:m,selectedScores:b}=bR(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class xR{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const vR={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,u=m(s.shape),l=new xR(u,a,i,o),c=rN({inputs:{x:s},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=rN({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function wR(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=gS({inputs:{input:r},backend:n}),t=wR({inputs:{x:e},backend:n}),s=RS({inputs:{input:r},backend:n}),a=wR({inputs:{x:s},backend:n}),i=WC({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return PE({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const kR={kernelName:Mn,backendName:"webgl",kernelFunc:wR},IR={kernelName:Vt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=gS({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=RS({inputs:{input:s},backend:r}),i=wR({inputs:{x:a},backend:r}),o=WC({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return PE({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},$R={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return AE({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{p(a,e.shape,"All tensors passed to stack must have matching shapes"),d(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=DS({inputs:t.map((e=>{const t=AE({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class CR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=U$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class NR{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=U$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=kC("rc",r),u=kC("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const SR=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NR(s.shape,a,i):new CR(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)},ER={kernelName:jt,backendName:"webgl",kernelFunc:SR},TR=YC({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),RR={kernelName:qt,backendName:"webgl",kernelFunc:TR},AR={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=I(a,s.shape);let c=l;const h=Ri(c,o);let d,p=s;if(null!=h&&(p=pN({inputs:{x:s},backend:n,attrs:{perm:h}}),c=_i(c.length,o),u.push(p)),Ti("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=cC(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Si(p.shape,c),r=m(t),a=rN({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=oN(a,$r(s.dtype),"prod",n);d=rN({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(d);const e=Ei(d.shape,l);d=rN({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},_R=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=hC(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},FR={kernelName:Yt,backendName:"webgl",kernelFunc:_R},DR=XC({opSnippet:"return 1.0 / x;"}),OR={kernelName:Zt,backendName:"webgl",kernelFunc:DR},LR=XC({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),MR={kernelName:Qt,backendName:"webgl",kernelFunc:LR},zR=XC({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),BR={kernelName:an,backendName:"webgl",kernelFunc:zR};class PR{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class WR{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const UR={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new WR(s.shape,u,l,a,i):new PR(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class VR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const GR={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new VR(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class HR{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const jR={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=new HR(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class qR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const KR={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new qR(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class XR{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=U$(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class YR{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=kC("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=U$(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const JR={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=I(a,s.shape);if(0===i)return BC({inputs:{x:s},backend:n});const u=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YR(s.shape,o):new XR(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class ZR{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[u,l]=Ru(r,s,a),c=u.toFixed(3),h=l.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const QR={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new ZR(r.shape,s,a,i);return o.runWebGLProgram(u,[r],r.dtype)}},eA=XC({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),tA={kernelName:un,backendName:"webgl",kernelFunc:eA},nA=XC({opSnippet:"return inversesqrt(x);",cpuKernelImpl:dC}),rA={kernelName:ln,backendName:"webgl",kernelFunc:nA};class sA{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=U$(s.length),u=U$(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const aA={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Bu(0,s,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=rN({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=rN({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new sA(u,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(m,[f,p,g],f.dtype),y=rN({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}};class iA{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=U$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const oA={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new iA(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Ir(s.dtype,a.dtype))}},uA=XC({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Pu};\n  float scale = ${Wu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),lA={kernelName:dn,backendName:"webgl",kernelFunc:uA},cA=XC({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),hA={kernelName:bn,backendName:"webgl",kernelFunc:cA},dA=XC({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),pA={kernelName:mn,backendName:"webgl",kernelFunc:dA},fA=XC({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),gA={kernelName:fn,backendName:"webgl",kernelFunc:fA},mA=XC({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),bA={kernelName:gn,backendName:"webgl",kernelFunc:mA},yA=XC({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),xA={kernelName:yn,backendName:"webgl",kernelFunc:yA},vA={kernelName:wn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;d(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=SR({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Au(c.shape,a,o,!1),p=_u(h.length,a.length,!1),f=Fu(c.shape,a,o,!1),g=rN({inputs:{x:c},backend:n,attrs:{shape:h}}),m=pN({inputs:{x:g},backend:n,attrs:{perm:p}}),b=rN({inputs:{x:m},backend:n,attrs:{shape:f}});return l.push(c),l.push(g),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},wA={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=Bu(0,s,o),d=new sA(l,u,s.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,s,i],a.dtype),f=rN({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},kA={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=I(i,s.shape)[0],u=sl(s,a,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=lS({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},IA=XC({opSnippet:"return sqrt(x);"}),$A={kernelName:xn,backendName:"webgl",kernelFunc:IA},CA={kernelName:Cn,backendName:"webgl",kernelFunc:XC({opSnippet:"return x * x;"})},NA="return (a - b) * (a - b);",SA=YC({opSnippet:NA,packedOpSnippet:NA}),EA={kernelName:$n,backendName:"webgl",kernelFunc:SA},TA={kernelName:zn,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new TC(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class RA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=U$(n.length),a=U$(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const AA={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=Js(s.shape,a,i,o,u,l,c,h,d),x=rN({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=lS({inputs:{x:x},backend:n,attrs:{begin:f,size:m}});v=rN({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=Is(x.shape,x.dtype,e),r=gC(y,t,g,f);v=n.makeTensorInfo(y,x.dtype,r.values)}else{const e=new RA(f,g,y);v=n.runWebGLProgram(e,[x],x.dtype)}const w=rN({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},_A=XC({opSnippet:"return tan(x);"}),FA={kernelName:Tn,backendName:"webgl",kernelFunc:_A},DA=XC({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),OA={kernelName:Rn,backendName:"webgl",kernelFunc:DA};class LA{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=U$(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function MA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype){const e=n.readSync(s.dataId).map((e=>cr(e))),t=Is(s.shape,s.dtype,e),r=bC(t,a);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new LA(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const zA={kernelName:An,backendName:"webgl",kernelFunc:MA},BA={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[u,l]=yC(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},PA={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;p$(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=vC(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},WA={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[a]=e;const t=lS({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=rN({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class UA{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const VA=[FT,OT,mN,yN,vN,kN,CN,EN,TN,RN,LN,MN,BN,WN,HN,VN,qN,JN,YN,eS,tS,nS,aS,hS,dS,bS,vS,IS,NS,UC,OS,jS,qS,WS,XS,YS,KS,ZS,eE,nE,iE,oE,lE,gE,mE,dE,yE,vE,kE,IE,CE,SE,RE,_E,OE,zE,WE,VE,jE,KE,JE,QE,eT,nT,sT,iT,uT,PC,lT,AS,hT,pT,gT,HC,bT,xT,vT,$T,kT,NT,ET,RT,MT,WT,PT,GT,HT,jT,BT,qT,KT,YT,QT,tR,cR,nN,dR,fR,mR,yR,fS,vR,IR,$R,ER,RR,KC,AR,FR,mS,sR,OR,BR,MR,sN,UR,GR,jR,KR,JR,QR,tA,rA,aA,oA,lA,hA,pA,gA,bA,cS,lR,xA,vA,wA,kA,$A,CA,EA,TA,AA,oR,dN,FA,OA,zA,BA,fN,PA,WA,{kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=Ri([l],o);let h=s;null!=c&&(h=pN({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=_i(1,o)[0]);const d=il(h.shape,l,i),p=m([h.shape[l]]),f=rN({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const g=$r(s.dtype),b=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=al(o,a),c=new UA({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const d=_R({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=MA({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(p),b(h,t,p,s,a)},y=rN({inputs:{x:b(f,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let x=y;if(null!=c){u.push(y);const e=Ai(c);x=pN({inputs:{x:x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},kR];for(const e of VA)Xn(e);const GA=e=>(e=>Array.isArray(e))(e)?e[0]:e;class HA extends hf{constructor(){super({}),this.beta=.2}call(e){return fi(GA(e),this.beta)}}HA.className="MultiplyBeta";class jA extends hf{constructor(){super({}),this.scale=4}computeOutputShape(e){return[e[0],e[1],e[2],3]}call(e){return qa(GA(e),this.scale,"NHWC")}}jA.className="PixelShuffle";const qA="https://unpkg.com/@upscalerjs/models@0.8.27",KA=e=>`${qA}/models/${e}/config.json`,XA=e=>{Array.isArray(e)?console.warn(e.join("\n")):console.warn(e)};var YA,JA=(YA={"div2k/rdn-C3-D10-G64-G064-x2":{urlPath:"div2k/005-2x",scale:2},"div2k/rdn-C3-D10-G64-G064-x3":{urlPath:"div2k/019-3x",scale:3},"div2k/rdn-C3-D10-G64-G064-x4":{urlPath:"div2k/017-4x",scale:4},"idealo/psnr-small":{urlPath:"idealo/psnr-small-quant-uint8",scale:2},"idealo/gans":{urlPath:"idealo/gans",scale:4,preprocess:e=>fi(e,1/255),postprocess:e=>fi(e.clipByValue(0,1),255),customLayers:[HA,jA]}},Object.entries(YA).reduce(((e,[t,n])=>{return{...e,[t]:{...n,url:(r=n.urlPath,`${qA}/models/${r}/model.json`),configURL:KA(n.urlPath)}};var r}),{}));const ZA={"div2k-2x":["div2k-2x","div2k/rdn-C3-D10-G64-G064-x2","0.8.0"],"div2k-3x":["div2k-3x","div2k/rdn-C3-D10-G64-G064-x3","0.8.0"],"div2k-4x":["div2k-4x","div2k/rdn-C3-D10-G64-G064-x4","0.8.0"],psnr:["psnr","idealo/psnr-small","0.8.0"]};var QA=async e=>{const t=(({model:e="idealo/gans",scale:t}={})=>{if(e in JA){const n=JA[e];if(n.deprecated&&((e,t)=>{const n=e[t];n&&((e,t,n)=>{XA([`The key ${e} has been deprecated and will be removed in the next release (${n}).`,`Please switch to the following key: ${t}`])})(...n)})(ZA,e),t)throw new Error([`You are requesting the pretrained model ${e} but are providing an explicit scale.`,"This is not allowed.","For more details, see https://thekevinscott.github.io/UpscalerJS/#/?id=you-are-requesting-the-pretrained-model-but-are-providing-an-explicit-scale"].join(" "));return n}if(!t)throw new Error(["If providing a custom model, you must provide an explicit scale.","For more details, see https://thekevinscott.github.io/UpscalerJS/#/?id=you-must-provide-an-explicit-scale"].join(" "));return{url:e,scale:t}})(e);var n,r;return t.customLayers&&t.customLayers.forEach((e=>{ea(e)})),{model:await(n=t.url,null==r&&(r={}),Cg(n,r)),modelDefinition:t}};let e_;const t_=async e=>{try{if(e.configURL)return(await fetch(e.configURL).then((e=>e.json()))).description}catch(e){}return""},n_=e=>"patchSize"in e;var r_=async(e,t)=>{await Cu();const{model:n}=await e;for(const e of t)if(n_(e)){const{patchSize:t,padding:r=0}=e,s=t+2*r,a=await n.predict(zi([1,s,s,3]));await Cu(),a.dataSync(),a.dispose()}else{if("number"!=typeof e[0]||"number"!=typeof e[1])throw new Error(`Invalid value passed to warmup in warmupSizes. Expected two numbers, got ${e.join(",")}`);const[t,r]=e,s=await n.predict(zi([1,r,t,3]));await Cu(),s.dataSync(),s.dispose()}};var s_=n(306),a_=n.n(s_);const i_=(e,t,n)=>{if(t[e]<0){const r=0-t[e];t[e]+=r,n[e]-=r}},o_=(e,t,n,r,s,a)=>{if(n[t]>e){const i=n[t]-e;let o=0;r[t]-i<0&&(o=0-(r[t]-i)),r[t]-=i-o,n[t]-=i;const u=i-o;s[t]+=u,a[t]+=u}},u_=(e,t,n)=>{n[e]>t[e]&&(n[e]=t[e])},l_=({row:e,col:t,patchSize:n,height:r,width:s,padding:a=0})=>{let i=n,o=n;i>r&&(i=r),o>s&&(o=s);const u=[e*n-a,t*n-a],l=[a,a];i_(0,u,l),i_(1,u,l);const c=[u[0]+i+2*a,u[1]+o+2*a],h=[l[0]+i,l[1]+o];o_(r,0,c,u,l,h),o_(s,1,c,u,l,h);const d=[c[0]-u[0],c[1]-u[1]];return u_(0,d,h),u_(1,d,h),{origin:u,sliceOrigin:l,size:d,sliceSize:[h[0]-l[0],h[1]-l[1]]}};function c_(e,t){if(e){const n=e(t);return t.dispose(),n}return t}var h_=async(e,t,n,r={})=>{const{tensor:s,type:a}=await(async e=>{if((e=>"string"==typeof e)(e)){const n=await(t=e,new Promise(((e,n)=>{const r=new Image;r.src=t,r.crossOrigin="anonymous",r.onload=()=>e(r),r.onerror=n})));return{tensor:Os(n).expandDims(0),type:"string"}}var t;if((e=>{try{return e instanceof HTMLImageElement}catch(e){return!1}})(e))return{tensor:Os(e).expandDims(0),type:"HTMLImageElement"};if((e=>4===e.shape.length)(e))return{tensor:e,type:"tensor"};if(3===e.shape.length)return{tensor:e.expandDims(0),type:"tensor"};throw new Error([`Unsupported dimensions for incoming pixels: ${e.shape.length}.`,"Only 3 or 4 dimension tensors are supported."].join(" "))})(t),i=c_(n.preprocess,s),o=await(async(e,t,n,{progress:r,patchSize:s,padding:a}={})=>{const i=n.scale;if(s){void 0===a&&XA(['"padding" is undefined, but "patchSize" is explicitly defined.',"Without padding, patches of images often have visible artifacting at the seams. Defining an explicit padding will resolve the artifacting.","For more information, see https://thekevinscott.github.io/UpscalerJS/#/?id=padding-is-undefined.",'To hide this warning, pass an explicit padding of "0".']);const n=3,[o,u]=t.shape.slice(1),{rows:l,columns:c}=((e,t)=>{const[n,r]=(e=>{if(4===e.shape.length)return e.shape.slice(1,3);if(3===e.shape.length)return e.shape.slice(0,2);throw new Error(`Invalid shape provided to getWidthAndHeight, expected tensor of rank 3 or 4: ${JSON.stringify(e.shape)}`)})(e);return{rows:Math.ceil(n/t),columns:Math.ceil(r/t)}})(t,s),{size:h}=l_({row:0,col:0,patchSize:s,height:o,width:u,padding:a});let d=zi([1,0,h[1]*i,n]);const p=l*c;for(let f=0;f<l;f++){let l=zi([1,h[0]*i,0,n]);for(let n=0;n<c;n++){const{origin:h,size:d,sliceOrigin:g,sliceSize:m}=l_({row:f,col:n,patchSize:s,padding:a,height:o,width:u}),b=t.slice([0,h[0],h[1]],[-1,d[0],d[1]]);await Cu();const y=e.predict(b);await Cu(),b.dispose(),await Cu(),r&&r((f*c+n+1)/p);const x=y.slice([0,g[0]*i,g[1]*i],[-1,m[0]*i,m[1]*i]);await Cu(),y.dispose(),await Cu(),l=l.concat(x,2),await Cu(),x.dispose(),await Cu()}d=d.concat(l,1),await Cu(),l.dispose(),await Cu()}return d.squeeze()}return sa((()=>{const n=e.predict(t);return r&&r(1),n.squeeze()}))})(e,i,n,r),u=c_(n.postprocess,o);if("tensor"!==a&&s.dispose(),"tensor"===r.output)return u;const l=a_()(u);return u.dispose(),l},d_=n.p+"68f7f0f3aef93b31d3970db3321c8179.png";console.log((0,a.camelCase)("helloworld"));const p_=document.getElementById("target"),f_=document.getElementById("button"),g_=document.getElementById("info"),m_=new class{constructor(e={}){this.getModel=()=>this._model,this.warmup=async e=>{await r_(this._model,e)},this.upscale=async(e,t={})=>{const{model:n,modelDefinition:r}=await this._model;return h_(n,e,r,t)},this.getModelDefinitions=()=>(async()=>(e_||(e_=await(async(e={})=>{const t=Object.entries(JA);return await Promise.all(t.map((async([t,n])=>{const r=await t_(n);e[t]={...n,description:r}}))),e})()),e_))(),this._opts={...e},this._model=QA(this._opts),r_(this._model,this._opts.warmupSizes||[])}}({model:"div2k/rdn-C3-D10-G64-G064-x2"});f_.onclick=()=>{g_.innerText="Upscaling...";const e=(new Date).getTime();m_.upscale(d_).then((t=>{const n=document.createElement("img");n.src=t,p_.innerHTML="",p_.appendChild(n);const r=(new Date).getTime()-e;g_.innerText=`Upscaled in ${r} ms`}))}}()}();